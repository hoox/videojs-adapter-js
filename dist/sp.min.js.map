{"version":3,"sources":["node_modules/browser-pack/_prelude.js","manifest.json","node_modules/youboralib/manifest.json","node_modules/youboralib/src/adapter/adapter.js","node_modules/youboralib/src/adapter/playbackchronos.js","node_modules/youboralib/src/adapter/playbackflags.js","node_modules/youboralib/src/adapter/playheadmonitor.js","node_modules/youboralib/src/chrono.js","node_modules/youboralib/src/comm/communication.js","node_modules/youboralib/src/comm/request.js","node_modules/youboralib/src/comm/transform/cdnparser.js","node_modules/youboralib/src/comm/transform/flow.js","node_modules/youboralib/src/comm/transform/hlsparser.js","node_modules/youboralib/src/comm/transform/nqs6.js","node_modules/youboralib/src/comm/transform/resource.js","node_modules/youboralib/src/comm/transform/transform.js","node_modules/youboralib/src/comm/transform/view.js","node_modules/youboralib/src/emitter.js","node_modules/youboralib/src/log.js","node_modules/youboralib/src/object.js","node_modules/youboralib/src/plugin/options.js","node_modules/youboralib/src/plugin/plugin.js","node_modules/youboralib/src/plugin/requestbuilder.js","node_modules/youboralib/src/polyfills.js","node_modules/youboralib/src/timer.js","node_modules/youboralib/src/util.js","node_modules/youboralib/src/version.js","node_modules/youboralib/src/youboralib.js","src/adapter.js","src/sp.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","youbora","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","name","type","tech","author","version","libVersion","built","features","buffer","seek","getters","Emitter","Log","PlaybackChronos","PlaybackFlags","PlayheadMonitor","Adapter","extend","constructor","player","flags","chronos","monitor","document","getElementById","tag","registerListeners","notice","getVersion","emit","Event","READY","unregisterListeners","dispose","stop","fireStop","monitorPlayhead","monitorBuffers","monitorSeeks","interval","Type","BUFFER","SEEK","getPlayhead","getPlayrate","isPaused","getFramesPerSecond","getDroppedFrames","getDuration","getBitrate","getThroughput","getRendition","getTitle","getTitle2","getIsLive","getResource","getPlayerVersion","getPlayerName","getPosition","fireStart","params","isStarted","total","start","join","START","fireJoin","isJoined","JOIN","firePause","pause","PAUSE","fireResume","skipNextTick","RESUME","fireBufferBegin","convertFromSeek","isBuffering","isSeeking","clone","reset","BUFFER_BEGIN","fireBufferEnd","BUFFER_END","fireSeekBegin","convertFromBuffer","SEEK_BEGIN","fireSeekEnd","SEEK_END","STOP","fireError","msg","metadata","level","errorCode","errorMsg","errorMetadata","errorLevel","ERROR","fireFatalError","FATAL_ERROR","YouboraObject","Chrono","Timer","adapter","_adapter","_seekEnabled","_bufferEnabled","_interval","_chrono","_lastPlayhead","_timer","progress","bind","deltaTime","bufferThreshold","kBUFFER_THRESHOLD_RATIO","seekThreshold","kSEEK_THRESHOLD_RATIO","currentPlayhead","_getPlayhead","diffPlayhead","Math","abs","NONE","startTime","stopTime","offset","getDeltaTime","now","Date","getTime","chrono","YBRequest","Transform","Communication","transforms","_requests","sendRequest","request","callback","on","SUCCESS","_registerRequest","buildRequest","host","service","addTransform","transform","parse","isBlocking","push","DONE","_processRequests","warn","removeTransform","pos","indexOf","splice","workingQueue","rejected","shift","_transform","send","ret","forEach","options","xhr","createXHR","Object","assign","method","requestHeaders","maxRetries","retryAfter","cache","retries","setParam","XMLHttpRequest","ActiveXObject","err","error","getXHR","getUrl","getParamString","event","addEventListener","off","removeEventListener","key","param","encodeURIComponent","JSON","stringify","slice","getParam","value","open","hasOwnProperty","setRequestHeader","genericError","setTimeout","logLevel","Level","VERBOSE","verbose","_globalListeners","LOAD","ABORT","onEvery","offEvery","index","CdnParser","_options","cdnName","parsers","parseType","done","addParser","parser","setCdnName","setParseType","getCdnName","_cdnName","getNodeHost","_cdnNodeHost","getNodeTypeString","_cdnNodeTypeString","getNodeType","_cdnNodeType","url","responses","headerString","_parseResponse","_requestResponse","resp","getAllResponseHeaders","headers","split","line","headerName","_executeParser","matches","regex","exec","trim","element","toUpperCase","_cdns","Level3","X-WR-DIAG","Cloudfront","Akamai","Highwinds","Fastly","Balancer","setBalancerHeaderName","create","add","FlowTransform","_services","_isBusy","prototype","apply","arguments","HlsParser","_realResource","resource","parentResource","res","lastIndexOf","responseText","Nqs6Transform","_cloneParam","entities","entityType","entityValue","from","to","ResourceTransform","plugin","__super__","_plugin","_initResource","init","_cdnNameHeader","_hlsEnabled","isParseHls","_cdnEnabled","isParseCdnNode","_cdnList","getParseCdnNodeList","getParseCdnNodeNameHeader","_setTimeout","_parseHLS","_parseCDN","_parseTimeout","hlsTransform","_hlsTransform","cdn","pop","cdnParser","lastSent","requestBuilder","mediaResource","nodeHost","nodeType","nodeTypeString","Util","ViewTransform","response","_viewIndex","apiVersion","outputformat","buildParams","system","getHost","_receiveData","_failedData","req","addProtocol","q","h","c","pingTime","pt","nextView","getViewCode","_listeners","data","Array","isArray","_eachCallback","target","_emitter","SILENT","WARNING","NOTICE","DEBUG","LOG","plainLogs","report","color","console","log","letters","5","4","3","2","letter","prefix","_getCurrentTime","documentMode","_plainReport","logMethod","debug","d","hh","getDate","mm","getMinutes","ss","getSeconds","mmm","getMilliseconds","m","loadLevelFromUrl","location","search","m2","protoProps","staticProps","parent","NewClass","enumerable","writable","configurable","Options","setOptions","base","RequestBuilder","Plugin","isInitiated","isPreloading","preloadChrono","initChrono","_ping","_sendPing","viewTransform","resourceTransform","setAdapter","_reset","_stopPings","removeAdapter","_startListener","_joinListener","_pauseListener","_resumeListener","_seekBeginListener","_seekEndListener","_bufferBeginListener","_bufferEndListener","_errorListener","_stopListener","getAdapter","setAdsAdapter","adsAdapter","removeAdsAdapter","_adsAdapter","_adStartListener","_adJoinListener","_adPauseListener","_adResumeListener","_adBufferBeginListener","_adBufferEndListener","_adStopListener","getAdsAdapter","disable","enabled","enable","_send","willSendEvent","_initComm","_comm","firePreloadBegin","firePreloadEnd","fireInit","_startPings","WILL_SEND_INIT","Service","INIT","title","WILL_SEND_START","WILL_SEND_JOIN","joinDuration","WILL_SEND_PAUSE","playhead","WILL_SEND_RESUME","pauseDuration","WILL_SEND_SEEK","seekDuration","WILL_SEND_BUFFER","bufferDuration","WILL_SEND_ERROR","WILL_SEND_STOP","adNumber","getAdNumber","WILL_SEND_AD_START","AD_START","WILL_SEND_AD_JOIN","AD_JOIN","adJoinDuration","WILL_SEND_AD_PAUSE","AD_PAUSE","adPlayhead","WILL_SEND_AD_RESUME","AD_RESUME","adPauseDuration","WILL_SEND_AD_BUFFER","AD_BUFFER","adBufferDuration","WILL_SEND_AD_STOP","AD_STOP","isRunning","diffTime","getChangedEntities","fetchParams","WILL_SEND_PING","PING","stripProtocol","parseNumber","getWebkitDroppedFrames","webkitDroppedFrameCount","round","getWebkitBitrate","webkitVideoDecodedByteCount","bitrate","_lastWebkitBitrate","delta","getOriginalResource","getTransactionCode","getMetadata","getCdn","getPluginVersion","getExtraparam1","getExtraparam2","getExtraparam3","getExtraparam4","getExtraparam5","getExtraparam6","getExtraparam7","getExtraparam8","getExtraparam9","getExtraparam10","getAdPosition","getAdPlayhead","getAdDuration","getAdBitrate","getWebkitAdBitrate","_lastWebkitAdBitrate","getAdTitle","getAdResource","getAdPlayerVersion","getAdMetadata","getPluginInfo","lib","adAdapter","getIp","getIsp","getConnectionType","getDeviceCode","getAccountCode","getUsername","getReferer","href","getPreloadDuration","getInitDuration","getJoinDuration","getBufferDuration","getSeekDuration","getPauseDuration","getAdJoinDuration","getAdBufferDuration","getAdPauseDuration","getTotalAdDuration","DATA","WILL_SEND_FATAL_ERROR","startParams","_adNumber","paramList","onlyDifferent","getterName","differentParams","adPosition","/data","/init","/start","/joinTime","/pause","/resume","/seek","/bufferUnderrun","/error","concat","/stop","/adStart","/adJoin","/adPause","/adResume","/adBufferUnerrun","/adStop","/ping","/join","playrate","fps","droppedFrames","mediaDuration","throughput","rendition","title2","live","transactionCode","properties","playerVersion","pluginVersion","param1","param2","param3","param4","param5","param6","param7","param8","param9","param10","adDuration","adBitrate","adTitle","adResource","adPlayerVersion","adProperties","adnalyzerVersion","pluginInfo","isp","connectionType","ip","deviceCode","accountCode","username","totalAdDuration","preloadDuration","referer","applyPolyfills","Function","b","TypeError","C","undefined","output","source","nextKey","Temp","propertiesObject","result","defineProperties","thisArg","len","obj","toString","_setTick","clearTimeout","replace","httpSecure","protocol","def","isNaN","Infinity","listenAllEvents","extraEvents","playerEvents","buildRenditionString","width","height","previousYoubora","noConflict","VERSION","polyfills","Request","adapters","pkg","Videojs5","absoluteTime","currentTime","mediainfo","duration","getTech","hls_","currentSrc","hls","bandwidth","playlists","media","attributes","BANDWIDTH","levels","currentLevel","att","NAME","Utils","RESOLUTION","ima","ima3","FreeWheelPlugin","onceux","pluginName","ver","videojs","IWillNotUseThisInPlugins","loadstartListener","playListener","timeupdateListener","pauseListener","playingListener","abortListener","endedListener","disposeListener","seekingListener","seekedListener","errorListener","autoplay","lastSeekPlayhead","message","adstartListener","adendListener","adskipListener"],"mappings":"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","file":"sp.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\n  \"name\": \"youbora-videojs5-adapter\",\n  \"type\": \"adapter\",\n  \"tech\": \"js\",\n  \"author\": \"Jordi Aguilar\",\n  \"version\": \"6.0.0-rc\",\n  \"libVersion\": \"6.0.0-rc\",\n  \"built\": \"Tue Dec 27 2016\",\n  \"features\": {\n    \"buffer\": \"monitor\",\n    \"seek\": \"native\",\n    \"getters\": [\n      \"getPlayhead\",\n      \"getDuration\",\n      \"getBitrate\",\n      \"getThroughput\",\n      \"getRendition\",\n      \"getTitle\",\n      \"getResource\"\n    ]\n  }\n}","module.exports={\n  \"name\": \"youboralib\",\n  \"type\": \"lib\",\n  \"tech\": \"js\",\n  \"author\": \"Jordi Aguilar\",\n  \"version\": \"6.0.0-rc\",\n  \"built\": \"Tue Dec 27 2016\"\n}","var Emitter = require('../emitter')\nvar Log = require('../log')\nvar version = require('../version')\nvar PlaybackChronos = require('./playbackchronos')\nvar PlaybackFlags = require('./playbackflags')\nvar PlayheadMonitor = require('./playheadmonitor')\n\nvar Adapter = Emitter.extend(\n  /** @lends Adapter.prototype */\n  {\n    /**\n     * This class is the basic adapter from which specific adapters will extend.\n     * It receives a player: If it is an object, it will be saved as this.player.\n     * It it is a string, it will be saved as this.player = document.getElementById(...)\n     * Will call registerListeners()\n     *\n     * @constructs Adapter\n     * @extends Emitter\n     * @memberof youbora\n     *\n     * @param {object|string} player Either an instance of the player or a string containing an ID.\n     */\n    constructor: function (player) {\n      /** An instance of {@link FlagStatus} */\n      this.flags = new PlaybackFlags()\n\n      /** An instance of {@link ChronoStatus} */\n      this.chronos = new PlaybackChronos()\n\n      /** Reference to {@link PlayheadMonitor}. Helps the plugin detect buffers/seeks. */\n      this.monitor = null\n\n      /** Reference to the player tag */\n      this.player = null\n      if (typeof player === 'string') {\n        this.player = document.getElementById(player)\n      } else {\n        this.player = player\n      }\n\n      /** Reference to the video/object tag, could be the same as the player. */\n      this.tag = this.player\n\n      this.registerListeners()\n\n      Log.notice('Adapter ' + this.getVersion() + ' with Lib ' + version + ' is ready.')\n\n      this.emit(Adapter.Event.READY)\n    },\n\n    /**\n     * Override to create event binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.addEventListener('start', this.onStart.bind(this))\n     * },\n     * onStart: function (e) {\n     *  this.emit('start')\n     * }\n     */\n    registerListeners: function () { },\n\n    /**\n     * Override to create event de-binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.removeEventListener('start', this.onStart)\n     * }\n     */\n    unregisterListeners: function () { },\n\n    /**\n     * This function disposes the currend adapter, removes player listeners and drops references.\n     */\n    dispose: function () {\n      if (this.monitor) this.monitor.stop()\n      this.fireStop()\n      this.unregisterListeners()\n      this.player = null\n      this.tag = null\n    },\n\n    /**\n     * Creates a {@link PlayheadMonitor} at this.monitor.\n     *\n     * @param {bool} monitorBuffers If true, it will monitor buffers.\n     * @param {bool} monitorSeeks If true, it will monitor seeks.\n     * @param {number} [interval=800] The interval time in ms.\n     */\n    monitorPlayhead: function (monitorBuffers, monitorSeeks, interval) {\n      var type = 0\n      if (monitorBuffers) type |= PlayheadMonitor.Type.BUFFER\n      if (monitorSeeks) type |= PlayheadMonitor.Type.SEEK\n\n      this.monitor = new PlayheadMonitor(this, type, interval)\n    },\n\n    // GETTERS //\n\n    /** Override to return current playhead of the video */\n    getPlayhead: function () {\n      return null\n    },\n\n    /** Override to return current playrate */\n    getPlayrate: function () {\n      return !this.flags.isPaused ? 1 : 0\n    },\n\n    /** Override to return Frames Per Secon (FPS) */\n    getFramesPerSecond: function () {\n      return null\n    },\n\n    /** Override to return dropped frames since start */\n    getDroppedFrames: function () {\n      return null\n    },\n\n    /** Override to return video duration */\n    getDuration: function () {\n      return null\n    },\n\n    /** Override to return current bitrate */\n    getBitrate: function () {\n      return null\n    },\n\n    /** Override to return user bandwidth throughput */\n    getThroughput: function () {\n      return null\n    },\n\n    /** Override to return rendition */\n    getRendition: function () {\n      return null\n    },\n\n    /** Override to return title */\n    getTitle: function () {\n      return null\n    },\n\n    /** Override to return title2 */\n    getTitle2: function () {\n      return null\n    },\n\n    /** Override to recurn true if live and false if VOD */\n    getIsLive: function () {\n      return null\n    },\n\n    /** Override to return resource URL. */\n    getResource: function () {\n      return null\n    },\n\n    /** Override to return player version */\n    getPlayerVersion: function () {\n      return null\n    },\n\n    /** Override to return player's name */\n    getPlayerName: function () {\n      return null\n    },\n\n    /** Override to return adapter version. */\n    getVersion: function () {\n      return version + '-generic-js'\n    },\n\n    /** Override to return current ad position (only ads) */\n    getPosition: function () {\n      return null\n    },\n\n    // FLOW //\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireStart: function (params) {\n      if (!this.flags.isStarted) {\n        this.flags.isStarted = true\n\n        this.chronos.total.start()\n        this.chronos.join.start()\n\n        this.emit(Adapter.Event.START, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireJoin: function (params) {\n      if (this.flags.isStarted && !this.flags.isJoined) {\n        if (this.monitor) this.monitor.start()\n\n        this.flags.isJoined = true\n\n        this.chronos.join.stop()\n\n        this.emit(Adapter.Event.JOIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    firePause: function (params) {\n      if (this.flags.isJoined && !this.flags.isPaused) {\n        this.flags.isPaused = true\n\n        this.chronos.pause.start()\n\n        this.emit(Adapter.Event.PAUSE, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireResume: function (params) {\n      if (this.flags.isJoined && this.flags.isPaused) {\n        this.flags.isPaused = false\n\n        this.chronos.pause.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.RESUME, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     * @param {bool} [convertFromSeek=false] If true, will convert current seek to buffer.\n     */\n    fireBufferBegin: function (params, convertFromSeek) {\n      if (this.flags.isJoined && !this.flags.isBuffering) {\n        if (convertFromSeek && this.flags.isSeeking) {\n          Log.notice('Converting current buffer to seek')\n\n          this.chronos.buffer = this.chronos.seek.clone()\n          this.chronos.seek.reset()\n\n          this.flags.isSeeking = false\n        } else {\n          this.chronos.buffer.start()\n        }\n        this.flags.isBuffering = true\n\n        this.emit(Adapter.Event.BUFFER_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireBufferEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isBuffering) {\n        this.flags.isBuffering = false\n\n        this.chronos.buffer.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.BUFFER_END, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     * @param {bool} [convertFromBuffer=true] If false, will convert current buffer to seek.\n     */\n    fireSeekBegin: function (params, convertFromBuffer) {\n      if (this.flags.isJoined && !this.flags.isSeeking) {\n        if (convertFromBuffer !== false && this.flags.isBuffering) {\n          Log.notice('Converting current buffer to seek')\n\n          this.chronos.seek = this.chronos.buffer.clone()\n          this.chronos.buffer.reset()\n\n          this.flags.isBuffering = false\n        } else {\n          this.chronos.seek.start()\n        }\n\n        this.flags.isSeeking = true\n\n        this.emit(Adapter.Event.SEEK_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireSeekEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isSeeking) {\n        this.flags.isSeeking = false\n\n        this.chronos.seek.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.SEEK_END, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireStop: function (params) {\n      if (this.flags.isStarted) {\n        if (this.monitor) this.monitor.stop()\n\n        this.flags.isStarted = false\n\n        this.chronos.total.stop()\n\n        this.emit(Adapter.Event.STOP, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n     */\n    fireError: function (code, msg, metadata, level) {\n      var params = {}\n      if (typeof code === 'object') {\n        params = code\n      } else {\n        params.errorCode = code || 'PLAY_FAILURE'\n        params.errorMsg = msg || params.errorCode\n        params.errorMetadata = metadata\n        params.errorLevel = level || 'error'\n      }\n\n      this.emit(Adapter.Event.ERROR, { params: params })\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     */\n    fireFatalError: function (code, msg, metadata) {\n      if (this.monitor) this.monitor.stop()\n\n      this.fireError(code, msg, metadata, 'fatal')\n      this.fireStop()\n    }\n  },\n\n  /** @lend Adapter */\n  {\n    // Static Memebers //\n\n    /**\n     * List of events that could be fired\n     * @enum\n     */\n    Event: {\n      READY: 'ready',\n\n      START: 'start',\n      JOIN: 'join',\n      PAUSE: 'pause',\n      RESUME: 'resume',\n      SEEK_BEGIN: 'seek-begin',\n      SEEK_END: 'seek-end',\n      BUFFER_BEGIN: 'buffer-begin',\n      BUFFER_END: 'buffer-end',\n      ERROR: 'error',\n      FATAL_ERROR: 'fatal-error',\n      STOP: 'stop'\n    }\n  }\n)\n\nmodule.exports = Adapter\n","var YouboraObject = require('../object')\nvar Chrono = require('../chrono')\n\nvar PlaybackChronos = YouboraObject.extend(\n  /** @lends PlaybackChronos.prototype */\n  {\n    /**\n     * This class contains all the {@link Chrono}s related to view status.\n     * Chronos measure time lapses between events.\n     * ie: between start and join, between seek-begin and seek-end, etc.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackChronos\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Chrono between start and joinTime. */\n      this.join = new Chrono()\n\n      /** Chrono between seek-begin and seek-end. */\n      this.seek = new Chrono()\n\n      /** Chrono between pause and resume. */\n      this.pause = new Chrono()\n\n      /** Chrono between buffer-begin and buffer-end. */\n      this.buffer = new Chrono()\n\n      /** Chrono for the totality of the view. */\n      this.total = new Chrono()\n    }\n  }\n)\n\nmodule.exports = PlaybackChronos\n","var YouboraObject = require('../object')\n\nvar PlaybackFlags = YouboraObject.extend(\n  /** @lends PlaybackFlags.prototype */\n  {\n    /**\n     * This class contains all the flags related to view status.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackFlags\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Flag when Start has been sent. */\n      this.isStarted = false\n\n      /** Flag when Join has been sent. */\n      this.isJoined = false\n\n      /** Flag when Player is paused. */\n      this.isPaused = false\n\n      /** Flag when Player is seeking. */\n      this.isSeeking = false\n\n      /** Flag when Player is buffering. */\n      this.isBuffering = false\n    }\n  }\n)\n\nmodule.exports = PlaybackFlags\n","var YouboraObject = require('../object')\nvar Timer = require('../timer')\nvar Chrono = require('../chrono')\n// var Log = require('../log')\n\nvar PlayheadMonitor = YouboraObject.extend(\n  /** @lends PlayheadMonitor.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     *\n     * @constructs PlayheadMonitor\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {Adapter} adapter Adapter to monitor. Must have getPlayhead defined.\n     * @param {PlayheadMonitor.Type} [type=NONE]\n     * Which metric to monitor seek and/or buffer.\n     * Use bitwise operators to join both values (Type.BUFFER | Type.SEEK)\n     * @param {int} [interval=800] How many ms will wait between progress. -1 to disable.\n     */\n    constructor: function (adapter, type, interval) {\n      this._adapter = adapter\n      this._seekEnabled = type & PlayheadMonitor.Type.SEEK\n      this._bufferEnabled = type & PlayheadMonitor.Type.BUFFER\n      this._interval = interval || 800\n\n      this._chrono = new Chrono()\n      this._lastPlayhead = 0\n\n      if (this._interval > 0) {\n        this._timer = new Timer(this.progress.bind(this), this._interval)\n      }\n    },\n\n    /**\n     * Start interval checks.\n     */\n    start: function () {\n      this._timer.start()\n    },\n\n    /**\n     * Stop interval checks.\n     */\n    stop: function () {\n      if (this._timer) this._timer.stop()\n    },\n\n    skipNextTick: function () {\n      this._lastPlayhead = 0\n    },\n\n    /**\n     * Call this method at every tick of timeupdate/progress.\n     * If you defined an interval, do not fire this method manually.\n     */\n    progress: function () {\n      // Reset timer\n      var deltaTime = this._chrono.stop()\n      this._chrono.start()\n\n      // Define thresholds\n      var bufferThreshold = deltaTime * PlayheadMonitor.kBUFFER_THRESHOLD_RATIO\n      var seekThreshold = deltaTime * PlayheadMonitor.kSEEK_THRESHOLD_RATIO\n\n      // Calculate diff playhead\n      var currentPlayhead = this._getPlayhead()\n      var diffPlayhead = Math.abs(this._lastPlayhead - currentPlayhead) * 1000\n\n      // Log.debug('curr: ' + currentPlayhead +\n      //   ' last: ' + this._lastPlayhead +\n      //   ' diff: ' + diffPlayhead)\n\n      if (diffPlayhead < bufferThreshold) {\n        // Playhead is stalling > buffer\n        if (this._bufferEnabled &&\n          this._lastPlayhead > 0 &&\n          !this._adapter.flags.isPaused &&\n          !this._adapter.flags.isSeeking\n        ) {\n          this._adapter.fireBufferBegin(null, false)\n        }\n      } else if (diffPlayhead > seekThreshold) {\n        // Playhead has jumped > seek\n        if (this._seekEnabled && this._lastPlayhead > 0) {\n          this._adapter.fireSeekBegin(null, false)\n        }\n      } else {\n        // Healthy\n        if (this._seekEnabled) {\n          this._adapter.fireSeekEnd()\n        } else if (\n          this._bufferEnabled) {\n          this._adapter.fireBufferEnd()\n        }\n      }\n\n      // Update Playhead\n      this._lastPlayhead = currentPlayhead\n    },\n    /**\n     * Returns adapter's playhead. Override to add a custom playhead getter.\n     * @private\n     * @returns {double} Playhead in seconds\n     */\n    _getPlayhead: function () {\n      return this._adapter.getPlayhead()\n    }\n  }, {\n    // Static methods\n\n    /**\n     * Enum for monitoring type\n     * @enum\n     */\n    Type: {\n      /** Would not monitor */\n      NONE: 0,\n      /** Sends buffer-begin/end */\n      BUFFER: 1,\n      /** Sends seek-begin/end */\n      SEEK: 2\n    },\n\n    /** Buffer threshold */\n    kBUFFER_THRESHOLD_RATIO: 0.5,\n\n    /** Seek threshold */\n    kSEEK_THRESHOLD_RATIO: 2\n  })\n\nmodule.exports = PlayheadMonitor\n","var YouboraObject = require('./object')\n\nvar Chrono = YouboraObject.extend(\n  /** @lends Chrono.prototype */\n  {\n    /**\n     * This class calculates time lapses between two points.\n     *\n     * @constructs Chrono\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset chrono values. */\n    reset: function () {\n      /** Start time */\n      this.startTime = 0\n\n      /** Stop time */\n      this.stopTime = 0\n\n      /** Offset to be added to deltaTime and stop. in ms. */\n      this.offset = 0\n    },\n\n    /**\n     * Returns the time between start() and the last stop() in ms. Returns -1 if start wasn't\n     * called.\n     * @param {boolean} [stop=true] If true, it will force a stop() if it wasn't called before.\n     * @return {number} Time lapse in ms.\n     */\n    getDeltaTime: function (stop) {\n      var now = new Date().getTime()\n      if (this.startTime) {\n        if (stop && !this.stopTime) { this.stopTime = now }\n        return this.offset + (now - this.startTime)\n      } else {\n        return -1\n      }\n    },\n\n    /**\n     * Starts the chrono.\n     */\n    start: function () {\n      this.startTime = new Date().getTime()\n      this.stopTime = 0\n    },\n\n    /**\n     * Stops the timer and returns current delta time.\n     * @return {number} Returns the delta time\n     */\n    stop: function () {\n      this.stopTime = new Date().getTime()\n      return this.startTime ? this.offset + (this.stopTime - this.startTime) : -1\n    },\n\n    /**\n     * Creates a copy of the chrono.\n     */\n    clone: function () {\n      var chrono = new Chrono()\n      chrono.startTime = this.startTime\n      chrono.stopTime = this.stopTime\n      chrono.offset = this.offset\n      return chrono\n    }\n  }\n)\n\nmodule.exports = Chrono\n","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar YBRequest = require('./request')\nvar Transform = require('./transform/transform')\n\nvar Communication = YouboraObject.extend(\n  /** @lends Communication.prototype */\n  {\n    /**\n     * Youbora Communication implements an abstraction layer over API requests.\n     * Internally, Communication implements queues of {@link Request} objects.\n     * This queue can be blocked using {@link Transform}\n     *\n     * @constructs Communication\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {string} host The fastdata host address.\n     * @param {boolean} httpSecure True for https, false for http, undefined for //.\n     */\n    constructor: function () {\n      /** Array of {@link Transform}, only when the array is empty the request Queues will begin sending. */\n      this.transforms = []\n\n      /**\n       * Queue of {@link YBRequest}\n       * @private\n       */\n      this._requests = []\n    },\n\n    /**\n     * Enqueues the request provided.\n     *\n     * @param {YBRequest} request Request to be enqueued\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    sendRequest: function (request, callback) {\n      if (request) {\n        if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n        this._registerRequest(request)\n      }\n    },\n\n    /**\n     * Build a generic request to the given host.\n     *\n     * @param {string} host Host of the service called.\n     * @param {string} service A string with the service to be called. ie: '/data', '/joinTime'...\n     * @param {Object} [params] Object of key:value params.\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    buildRequest: function (host, service, params, callback) {\n      params = params || {}\n      var request = new YBRequest(host, service, params)\n      if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n      this._registerRequest(request)\n    },\n\n    /**\n     * Adds a Transform to the queue. See {@link Transform}.\n     *\n     * @param {RequestTransform} transform\n     */\n    addTransform: function (transform) {\n      if (transform.parse && transform.isBlocking) {\n        this.transforms.push(transform)\n        transform.on(Transform.Event.DONE, this._processRequests.bind(this))\n      } else {\n        Log.warn(transform + ' is not a valid RequestTransform.')\n      }\n    },\n\n    /**\n     * Removes a {@link Transform}.\n     *\n     * @param {RequestTransform} transform Transform object to remove.\n     */\n    removeTransform: function (transform) {\n      var pos = this.transforms.indexOf(transform)\n      if (pos !== -1) {\n        this.transforms.splice(pos, 1)\n      } else {\n        Log.warn('Trying to remove unexisting Transform \\'' + transform + '\\'.')\n      }\n    },\n\n    /**\n     * Adds an {@link YBRequest} to the queue of requests.\n     *\n     * @private\n     * @param {YBRequest} request The Request to be queued.\n     */\n    _registerRequest: function (request) {\n      this._requests.push(request)\n      this._processRequests()\n    },\n\n    /**\n     * Execute pending requests in the queue. Returns rejected ones to the queue.\n     * @private\n     */\n    _processRequests: function () {\n      var workingQueue = this._requests\n      this._requests = []\n\n      var rejected = []\n      while (workingQueue.length) {\n        var request = workingQueue.shift()\n        if (this._transform(request)) {\n          request.send()\n        } else {\n          rejected.push(request)\n        }\n      }\n\n      while (rejected.length) {\n        this._requests.push(rejected.shift())\n      }\n    },\n\n    /**\n     * Pass the given request to each transform.\n     * @private\n     * @returns {bool} True if everything is right. False if some parser rejected it.\n     */\n    _transform: function (request) {\n      var ret = true\n      this.transforms.forEach(function (transform) {\n        if (transform.isBlocking(request)) {\n          ret = false\n          return // break foreach loop\n        } else {\n          transform.parse(request)\n        }\n      })\n      return ret\n    }\n  })\n\nmodule.exports = Communication\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar YBRequest = YouboraObject.extend(\n  /** @lends YBRequest.prototype */\n  {\n    /**\n     * YBYBRequest class will wrap XmlHttpRequest and extend its functionality, allowing youbora\n     * to manage queues, blockers and retries.\n     *\n     * @constructs YBRequest\n     * @extends Object\n     * @memberof youbora\n     *\n     * @param {string} host URL of the request. ie: nqs.nice264.com\n     * @param {string} [service] Name of the service. ie '/start'\n     * @param {Object} [params] Object of key:value params.\n     * @param {Object} [options] Object with custom options.\n     * @param {string} [options.method=\"GET\"] Specifies the method of the request. ie: \"GET\", \"HEAD\".\n     * @param {string} [options.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [options.retryAfter=5000] Time in ms before sending a failed request again.\n     * 0 to disable.\n     * @param {number} [options.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [options.cache=false] If false, timestamp will be added to each request to\n     * prevent caching.\n     */\n    constructor: function (host, service, params, options) {\n      /** Instance of XmlHttpRequest (or the item returned by createXHR method). */\n      this.xhr = this.createXHR()\n\n      /** Host of the request */\n      this.host = host || ''\n\n      /** Service of the request */\n      this.service = service || ''\n\n      /** Object of params of the request */\n      this.params = params || {}\n\n      /** Options of the request */\n      this.options = Object.assign({\n        method: 'GET',\n        requestHeaders: {},\n        maxRetries: 3,\n        retryAfter: 5000,\n        cache: false\n      }, options)\n\n      /** Number of times this request has failed and retried. */\n      this.retries = 0\n\n      // Add timemark\n      if (!this.options.cache) {\n        this.setParam('timemark', new Date().getTime())\n      }\n    },\n\n    /**\n     * Creates XMLHttpRequest if it is available in the browser.\n     * If not, it tries to create an ActiveXObject XMLHTTP item.\n     * Override this function for custom environments.\n     *\n     * @return YBRequest handler.\n     */\n    createXHR: function () {\n      try {\n        if (XMLHttpRequest) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      } catch (err) {\n        Log.error(err)\n        return {}\n      }\n    },\n\n    /**\n     * Returns xhr object.\n     *\n     * @return {XmlHttpRequest} object.\n     */\n    getXHR: function () {\n      return this.xhr\n    },\n\n    /** Returns the complete formed url of the request url+service+params. */\n    getUrl: function () {\n      return this.host + this.service + this.getParamString()\n    },\n\n    /**\n     * Wraps this.getHXR.addEventListener.\n     * Accepts a callback that receives (this YBRequest, event)\n     */\n    on: function (event, callback) {\n      this.xhr.addEventListener(event, callback.bind(this, this))\n      return this\n    },\n\n    /** Wraps this.getHXR.removeEventListener */\n    off: function (event, callback) {\n      this.xhr.removeEventListener(event, callback)\n      return this\n    },\n\n    /**\n     * Returns the params of the request, stringified.\n     * ie: '?pluginVersion=5.1.0&systemCode=nicetv'.\n     * @return {string} Concatenated Params\n     */\n    getParamString: function () {\n      try {\n        var params = '?'\n        for (var key in this.params) {\n          var param = this.params[key]\n          if (param !== null && typeof param === 'object') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(JSON.stringify(param)) + '&'\n          } else if (param !== null && typeof param !== 'undefined' && param !== '') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(param) + '&'\n          }\n        }\n        return params.slice(0, -1)\n      } catch (err) {\n        Log.error(err)\n        return ''\n      }\n    },\n\n    /**\n     * Returns the value of the given param, or undefined.\n     * @param {string} key Name of the param.\n     * @return {any}\n     */\n    getParam: function (key) {\n      return this.params[key]\n    },\n\n    /**\n     * Add or set a parameter for the request.\n     * ie: if you want to add 'username=user' use setParam('username', 'user').\n     * @param {string} key Name of the param.\n     * @param {string} value Name of the param.\n     * @return this\n     */\n    setParam: function (key, value) {\n      this.params[key] = value\n      return this\n    },\n\n    /**\n     * Sends the request.\n     *\n     * @return returns xhr.send()\n     */\n    send: function () {\n      try {\n        this.xhr.open(this.options.method, this.getUrl(), true)\n\n        // Add custom headers\n        if (this.options.requestHeaders) {\n          for (var key in this.options.requestHeaders) {\n            if (this.options.requestHeaders.hasOwnProperty(key)) {\n              this.xhr.setRequestHeader(key, this.options.requestHeaders[key])\n            }\n          }\n        }\n\n        // Add retries system\n        if (this.options.retryAfter > 0 && this.options.maxRetries > 0) {\n          var genericError = function () {\n            if (this.retries >= this.options.maxRetries) {\n              Log.error('Aborting failed request \"' + this.service + '\". Max retries reached.')\n            } else {\n              Log.warn('YBRequest \"' + this.service + '\" failed. Retry ' + (this.retries + 1) + ' of ' +\n                this.options.maxRetries + ' in ' + this.options.retryAfter + 'ms.')\n\n              setTimeout(function () {\n                this.retries += 1\n                this.send()\n              }.bind(this), this.options.retryAfter)\n            }\n          }\n          if (this.retries === 0) {\n            this.on(YBRequest.Event.ERROR, genericError.bind(this))\n          }\n        }\n\n        // Log XHR\n        if (Log.logLevel <= Log.Level.VERBOSE) {\n          Log.verbose('XHR Req: ' + this.getUrl())\n        }\n\n        // Register 'on every' listeners\n        for (var event in YBRequest._globalListeners) {\n          YBRequest._globalListeners[event].forEach(function (callback) {\n            this.on(event, callback)\n          }.bind(this))\n        }\n\n        // Send\n        return this.xhr.send()\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  },\n\n  /** @lends YBRequest */\n  {\n    /**\n     * List of events that could be fired from XHR\n     * @enum\n     */\n    Event: {\n      /** Request successful */\n      SUCCESS: 'load',\n      /** Request successful */\n      LOAD: 'load', // Native JS\n      /** Request returned error */\n      ERROR: 'error',\n      /** Request aborted */\n      ABORT: 'abort'\n    },\n\n    /** @private */\n    _globalListeners: {},\n\n    /**\n     * Adds a callback to every instance.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    onEvery: function (event, callback) {\n      YBRequest._globalListeners[event] = YBRequest._globalListeners[event] || []\n      YBRequest._globalListeners[event].push(callback)\n    },\n\n    /**\n     * Removes a global callback\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    offEvery: function (event, callback) {\n      if (YBRequest._globalListeners[event]) {\n        var index = YBRequest._globalListeners[event].indexOf(callback)\n        if (index !== -1) {\n          YBRequest._globalListeners[event].splice(index, 1)\n        }\n      }\n    }\n  })\n\nmodule.exports = YBRequest\n","var Emitter = require('../../emitter')\nvar Log = require('../../log')\nvar YBRequest = require('../request')\n\nvar CdnParser = Emitter.extend(\n  /** @lends CdnParser.prototype */\n  {\n    /**\n     * This class helps ResourceTransform parse CDN Nodes.\n     *\n     * @constructs CdnParser\n     * @extends Emitter\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      this._options = Object.assign({\n        cdnName: null,\n        parsers: [],\n        requestHeaders: {},\n        parseType: function () { return 0 }\n      }, options)\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(CdnParser.Event.DONE)\n    },\n\n    addParser: function (parser) {\n      this._options.parsers.push(parser)\n      return this\n    },\n\n    setCdnName: function (name) {\n      this._options.cdnName = name\n      return this\n    },\n\n    setRequestHeader: function (key, value) {\n      this._options.requestHeaders[key] = value\n      return this\n    },\n\n    setParseType: function (parser) {\n      this._options.parseType = parser\n      return this\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    /**\n     * Parses given headers to check for matches.\n     */\n    parse: function (url, responses) {\n      responses = responses || {}\n      var headerString = JSON.stringify(this._options.requestHeaders)\n      if (responses[headerString]) {\n        this._parseResponse(responses[headerString])\n      } else {\n        this._requestResponse(url, responses)\n      }\n    },\n\n    _requestResponse: function (url, responses) {\n      var headerString = JSON.stringify(this._options.requestHeaders)\n\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: this._options.requestHeaders\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        responses[headerString] = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(responses[headerString])\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      this._options.parsers.forEach(function (parser) {\n        headers.split('\\n').forEach(function (line) {\n          var index = line.indexOf(':')\n          if (index !== -1) {\n            var key = line.slice(0, index)\n            if (key === parser.headerName) {\n              this._executeParser(parser, line.slice(index + 1))\n            }\n          }\n        }.bind(this))\n      }.bind(this))\n      this.done()\n    },\n\n    _executeParser: function (parser, value) {\n      try {\n        var matches = parser.regex.exec(value.trim())\n        if (matches !== null) {\n          if (this._options.cdnName) this._cdnName = this._options.cdnName\n          switch (parser.element) {\n            case 'host':\n              this._cdnNodeHost = matches[1]\n              break\n            case 'type':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'host+type':\n              this._cdnNodeHost = matches[1]\n              this._cdnNodeTypeString = matches[2]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'type+host':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              this._cdnNodeHost = matches[2]\n              break\n            case 'name':\n              this._cdnName = matches[1].toUpperCase()\n              break\n          }\n        }\n      } catch (err) {\n        Log.warn('CDN parsing for ' + this._options.cdnName +\n          ' could not parse header value ' + value)\n      }\n    }\n\n  },\n\n  /** @lends CdnParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this CdnParser is done processing. */\n      DONE: 'done'\n    },\n\n    // Static members\n    _cdns: {\n      Level3: {\n        cdnName: 'LEVEL3',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-WR-DIAG',\n          regex: /Host:(.+)\\sType:(.+)/\n        }],\n        requestHeaders: {\n          'X-WR-DIAG': 'host'\n        },\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n            case 'TCP_MEM_HIT':\n            case 'TCP_IMS_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Cloudfront: {\n        cdnName: 'CLOUDFRT',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Amz-Cf-Id',\n          regex: /(.+)/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /(\\S+)\\s.+/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'Hit':\n              return 1\n            case 'Miss':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Akamai: {\n        cdnName: 'AKAMAI',\n        parsers: [{\n          element: 'type+host',\n          headerName: 'X-Cache',\n          regex: /(.+)\\sfrom\\s.+\\(.+\\/(.+)\\).*/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Highwinds: {\n        cdnName: 'HIGHNEGR',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-HW',\n          regex: /.+,[0-9]+\\.(.+)\\.(.+)/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'c':\n            case 'x':\n              return 1\n            default:\n              return 2\n          }\n        }\n      },\n      Fastly: {\n        cdnName: 'FASTLY',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Served-By',\n          regex: /([^,\\s]+)$/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /([^,\\s]+)$/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'HIT':\n              return 1\n            case 'MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Balancer: {\n        parsers: [{\n          element: 'name',\n          headerName: null,\n          regex: /(.+)/\n        }]\n      }\n    },\n\n    setBalancerHeaderName: function (name) {\n      CdnParser._cdns.Balancer.parsers[0].headerName = name\n    },\n\n    create: function (key) {\n      if (CdnParser._cdns[key]) {\n        return new CdnParser(CdnParser._cdns[key])\n      } else {\n        Log.warn('Tried to create an unexisting CdnParser named ' + key)\n      }\n    },\n\n    add: function (key, parser) {\n      CdnParser._cdns[key] = parser\n    }\n  }\n)\n\nmodule.exports = CdnParser\n","var Transform = require('./transform')\n\n/**\n * This class manages Flow restrictions. All requests shall be blocked until /init or /start are\n * received.\n *\n * @constructs\n * @extends Transform\n * @memberof youbora\n *\n * @param {Plugin} plugin Instance of {@link Plugin}\n */\nvar FlowTransform = Transform.extend(\n  /** @lends FlowTransform.prototype */\n  {\n    _services: ['/init', '/start'],\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      if (this._isBusy && request != null && this._services.indexOf(request.service) !== -1) {\n        this.done()\n      }\n\n      return Transform.prototype.isBlocking.apply(this, arguments)\n    }\n  }\n)\n\nmodule.exports = FlowTransform\n","var YBRequest = require('../request')\nvar Emitter = require('../../emitter')\nvar Log = require('../../log')\n\nvar HlsParser = Emitter.extend(\n  /** @lends HlsParser.prototype */\n  {\n    /**\n     * Extend this class to implement your own ResourceEmitter parser task.\n     *\n     * @constructs HlsParser\n     * @extends Emitter\n     * @memberof youbora\n     * @abstract\n     */\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(HlsParser.Event.DONE)\n    },\n\n    /**\n     *\n     *\n     * @param {string} resource Either the resource url or the manifest body.\n     * @param {string} parentResource Parent resource in case relative paths are sent.\n     */\n    parse: function (resource, parentResource) {\n      parentResource = parentResource || ''\n\n      try {\n        var matches = /((\\S*?)(\\.m3u8|\\.m3u|\\.ts|\\.mp4)(\\?\\S*|\\n|\\r|$))/i.exec(resource)\n      } catch (err) {\n        Log.warn('Parse HLS Regex failed', err)\n        this.done()\n      }\n\n      if (matches !== null) { // get first line ending in .m3u8, .m3u, .mp4 or .ts\n        var res = matches[1].trim()\n\n        var index = parentResource.lastIndexOf('/')\n        if (res.indexOf('http') !== 0 && index !== -1) {\n          // If does not start with http, add parentResource relative route.\n          res = parentResource.slice(0, index) + '/' + res\n        }\n\n        if (matches[3] === '.m3u8' || matches[3] === '.m3u') { // It is m3u8 or m3u...\n          var request = new YBRequest(res, null, null, { cache: true })\n\n          request.on(YBRequest.Event.SUCCESS, function (resp) {\n            this.parse(resp.getXHR().responseText, matches[2])\n          }.bind(this))\n\n          request.on(YBRequest.Event.ERROR, function (resp) {\n            this.done()\n          }.bind(this))\n\n          request.send()\n        } else { // It is mp4 or ts...\n          this._realResource = res\n          this.done()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    getResource: function () {\n      return this._realResource\n    }\n  },\n\n  /** @lends HlsParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this HlsParser is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = HlsParser\n","var Transform = require('./transform')\n\nvar Nqs6Transform = Transform.extend(\n  /** @lends Nqs6Transform.prototype */\n  {\n\n    /**\n     * This class ensures NQS6 retrocompatibility\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.done()\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      this._cloneParam(request, 'accountCode', 'system')\n      this._cloneParam(request, 'transactionCode', 'transcode')\n      this._cloneParam(request, 'username', 'user')\n      this._cloneParam(request, 'mediaResource', 'resource')\n      this._cloneParam(request, 'errorMsg', 'msg')\n\n      if (request.service !== '/joinTime') {\n        this._cloneParam(request, 'playhead', 'time')\n      }\n\n      switch (request.service) {\n        case '/start':\n          this._cloneParam(request, 'mediaDuration', 'duration')\n          break\n\n        case '/joinTime':\n          this._cloneParam(request, 'joinDuration', 'time')\n          this._cloneParam(request, 'playhead', 'eventTime')\n          break\n\n        case '/seek':\n          this._cloneParam(request, 'seekDuration', 'duration')\n          break\n\n        case '/bufferUnderrun':\n          this._cloneParam(request, 'bufferDuration', 'duration')\n          break\n\n        case '/ping':\n          for (var key in request.params.entities) {\n            request.params.entityType = key\n            request.params.entityValue = request.params.entities[key]\n            break\n          }\n          break\n      }\n    },\n\n    _cloneParam: function (request, from, to) {\n      request.params[to] = request.params[from]\n    }\n  })\n\nmodule.exports = Nqs6Transform\n","var Transform = require('./transform')\nvar HlsParser = require('./hlsparser')\nvar CdnParser = require('./cdnparser')\nvar Log = require('../../log')\n\nvar ResourceTransform = Transform.extend(\n  /** @lends ResourceTransform.prototype */\n  {\n    /**\n     * This class parses resource to fetch transportstreams, CDNs and Node plugin.\n     *\n     * @constructs ResourceTransform\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      ResourceTransform.__super__.constructor.apply(this, arguments)\n\n      this._plugin = plugin\n\n      this._realResource = null\n      this._initResource = null\n      this._cdnName = null\n      this._cdnNodeHost = null\n      this._cdnNodeTypeString = null\n      this._cdnNodeType = null\n\n      this._isBusy = false\n    },\n\n    getResource: function () {\n      return this._realResource || this._initResource\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    init: function (resource) {\n      if (!this._isBusy) {\n        this._isBusy = true\n\n        this._initResource = resource\n\n        CdnParser.setBalancerHeaderName(this._cdnNameHeader)\n        this._hlsEnabled = this._plugin.isParseHls()\n        this._cdnEnabled = this._plugin.isParseCdnNode()\n        this._cdnList = this._plugin.getParseCdnNodeList().slice() // clone\n        this._cdnNameHeader = this._plugin.getParseCdnNodeNameHeader()\n\n        this._setTimeout()\n\n        if (this._hlsEnabled) {\n          this._parseHLS()\n        } else if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }\n    },\n\n    _setTimeout: function () {\n      // Abort operation after 3s\n      this._parseTimeout = setTimeout(function () {\n        if (this._isBusy) {\n          this.done()\n          Log.warn(\n            'ResourceTransform has exceded the maximum execution time (3s) and will be aborted.'\n          )\n        }\n      }.bind(this), 3000)\n    },\n\n    _parseHLS: function () {\n      var hlsTransform = new HlsParser()\n      hlsTransform.on(HlsParser.Event.DONE, function () {\n        this._realResource = this._hlsTransform.getResource()\n        if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }.bind(this))\n      hlsTransform.parse(this._initResource)\n    },\n\n    _parseCDN: function () {\n      if (this._cdnList.length > 0) {\n        var cdn = this._cdnList.pop()\n\n        if (this.getNodeHost()) this.done()\n\n        var cdnParser = CdnParser.create(cdn)\n\n        if (cdnParser) {\n          cdnParser.on(CdnParser.Event.DONE, function () {\n            this._cdnName = cdnParser.getCdnName()\n            this._cdnNodeHost = cdnParser.getNodeHost()\n            this._cdnNodeTypeString = cdnParser.getNodeTypeString()\n            this._cdnNodeType = cdnParser.getNodeType()\n\n            if (this.getNodeHost()) this.done()\n          }.bind(this))\n          cdnParser.parse(this.getResource())\n        } else {\n          this._parseCDN()\n        }\n      }\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      if (request.service === '/start') {\n        var lastSent = this._plugin.requestBuilder.lastSent\n        lastSent.mediaResource = request.params.mediaResource = this.getResource()\n\n        if (this._cdnEnabled) {\n          lastSent.cdn = request.params.cdn = request.params.cdn || this.getCdnName()\n          lastSent.nodeHost = request.params.nodeHost = this.getNodeHost()\n          lastSent.nodeType = request.params.nodeType = this.getNodeType()\n          lastSent.nodeTypeString = request.params.nodeTypeString = this.getNodeTypeString()\n          lastSent.nodeTypeString = request.params.nodeTypeString\n        }\n      }\n    }\n  })\n\nmodule.exports = ResourceTransform\n","var Emitter = require('../../emitter')\n\nvar Transform = Emitter.extend(\n  /** @lends Transform.prototype */\n\n  /**\n   * Transform classes among youbora helps the library parse and work with data.\n   * ResourceTransform, ViewTransform... all extend from this class.\n   *\n   * @constructs Transform\n   * @extends Emitter\n   * @memberof youbora\n   * @abstract\n   */\n  {\n    constructor: function () {\n      this._isBusy = true\n    },\n\n    /**\n     * Override this method to transform info.\n     *\n     * @param {YBRequest} request Request to transform.\n     */\n    parse: function (request) { },\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      return this._isBusy\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this._isBusy = false\n      this.emit(Transform.Event.DONE)\n    }\n  },\n\n  /** @lends Transform */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this Transform is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = Transform\n","var YBRequest = require('../request')\nvar Transform = require('./transform')\nvar Log = require('../../log')\nvar Util = require('../../util')\n\nvar ViewTransform = Transform.extend(\n  /** @lends ViewTransform.prototype */\n  {\n    /**\n     * This class manages Fastdata service and view index.\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      Transform.prototype.constructor.apply(this, arguments)\n\n      /** /data response */\n      this.response = {}\n\n      this._viewIndex = -1\n\n      var service = '/data'\n      var params = {\n        apiVersion: 'v6,v7',\n        outputformat: 'jsonp'\n      }\n\n      params = plugin.requestBuilder.buildParams(params, service)\n      if (params !== null) {\n        Log.notice(service + ' ' + params.system)\n        if (params.system === 'nicetest') {\n          Log.error(\n            'No accountCode has been set. Please set your accountCode inside plugin\\'s options.'\n          )\n        }\n\n        var request = new YBRequest(plugin.getHost(), service, params)\n        request\n          .on(YBRequest.Event.SUCCESS, this._receiveData.bind(this))\n          .on(YBRequest.Event.ERROR, this._failedData.bind(this))\n          .send()\n      }\n    },\n\n    _receiveData: function (req, e) {\n      try {\n        var msg = req.getXHR().response\n        var resp = JSON.parse(msg.slice(msg.indexOf('(') + 1, msg.lastIndexOf(')')))\n\n        this.response.host = Util.addProtocol(resp.q.h)\n        this.response.code = resp.q.c\n        this.response.pingTime = resp.q.pt\n\n        this.done()\n      } catch (err) {\n        Log.error('Fastdata response is invalid.')\n      }\n    },\n\n    _failedData: function (req, e) {\n      Log.error('Fastdata request failed.')\n    },\n\n    /**\n     * Call this method when a new content begins, it will increment the view index (_0, _1, _2...)\n     * @return {string} new viewcode\n     */\n    nextView: function () {\n      this._viewIndex += 1\n      return this.getViewCode()\n    },\n\n    /**\n     * Returns current viewcode\n     * @return {string} viewcode\n     */\n    getViewCode: function () {\n      return this.response.code + '_' + this._viewIndex\n    },\n\n    /**\n     * Transform requests\n     * @param {youbora.comm.YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      request.host = request.host || this.response.host\n      request.params.code = request.params.code || this.getViewCode()\n      if (request.service === '/ping' || request.service === '/start') {\n        request.params.pingTime = request.params.pingTime || this.response.pingTime\n      }\n    }\n  })\n\nmodule.exports = ViewTransform\n","var YouboraObject = require('./object')\n\n/**\n * This class extends YouboraObject, adding event emitting/listening functionalities.\n * @constructs Emitter\n * @extends YouboraObject\n * @memberof youbora\n */\nvar Emitter = YouboraObject.extend(\n  /** @lends Emitter.prototype */\n  {\n    /**\n     * Sets a listener to a given event. Use {@link emit} to trigger those events.\n     * Pass '*' to listen ALL events.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event. Receives event and data.\n     * @return this\n     */\n    on: function (event, callback) {\n      this._listeners = this._listeners || {}\n      if (typeof callback === 'function') {\n        this._listeners[event] = this._listeners[event] || []\n        this._listeners[event].push(callback)\n        return this\n      }\n    },\n\n    /**\n     * Removes given callback from the listeners of this object.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     * @return this\n     */\n    off: function (event, callback) {\n      this._listeners = this._listeners || {}\n\n      if (this._listeners[event]) {\n        var index = this._listeners[event].indexOf(callback)\n        if (index !== -1) {\n          this._listeners[event].splice(index, 1)\n        }\n      }\n      return this\n    },\n\n    /**\n     * Emits given event, triggering all the associated callbacks.\n     * @param {string} event Name of the event.\n     * @param {object} [data] Custom data to be sent to the callbacks.\n     * @return this\n     */\n    emit: function (event, data) {\n      this._listeners = this._listeners || {}\n      data = data || {}\n\n      if (Array.isArray(this._listeners[event])) {\n        this._listeners[event].forEach(this._eachCallback.bind(this, event, data))\n      }\n      if (Array.isArray(this._listeners['*'])) {\n        this._listeners['*'].forEach(this._eachCallback.bind(this, event, data))\n      }\n\n      return this\n    },\n\n    _eachCallback: function (event, data, callback) {\n      if (typeof callback === 'function') {\n        callback({ type: event, data: data, target: this })\n      }\n    }\n  }\n)\n\nmodule.exports = Emitter\n","var Emitter = require('./emitter')\n\n/**\n * Static Log class for YouboraLib\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Log = {\n\n  _emitter: new Emitter(),\n\n  /** Exposes {@link youbora.EvenfulObject.on} */\n  on: function () { Log._emitter.on.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.off} */\n  off: function () { Log._emitter.off.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.emit} */\n  emit: function () { Log._emitter.emit.apply(Log._emitter, arguments) },\n\n  /**\n   * Enum for log levels\n   * @enum\n   */\n  Level: {\n    /** No console outputs */\n    SILENT: 6,\n    /** Console will show errors */\n    ERROR: 5,\n    /** Console will show warnings */\n    WARNING: 4,\n    /** Console will show notices (ie: life-cyrcle logs) */\n    NOTICE: 3,\n    /** Console will show debug messages (ie: player events) */\n    DEBUG: 2,\n    /** Console will show verbose messages (ie: Http Requests) */\n    VERBOSE: 1\n  },\n\n  /**\n   * Enum for events\n   * @enum\n   */\n  Event: {\n    /** Sent each time a messaged is issued, even if log level does not handle it. */\n    LOG: 'log'\n  },\n\n  /**\n   * Only logs of this imporance or higher will be shown.\n   * @default youbora.Log.Levels.ERROR\n   * @see {@link youbora.Log.Levels}\n   */\n  logLevel: 5,\n\n  /**\n   * If true, console logs will always be outputed without colors (for debbugin in devices).\n   * @default false\n   */\n  plainLogs: false,\n\n  /**\n   * Returns a console message\n   *\n   * @private\n   * @param {(string|error|array)} msg Message string, error object or array of messages.\n   * @param {Log.Levels} [level=Log.Levels.NOTICE] Defines the level of the error sent.\n   * Only errors with higher or equal level than Log.logLevel will be displayed.\n   * @param {string} [color=darkcyan] Color of the header\n   * @see {@link Youbora.Log.debugLevel}\n   */\n  report: function (msg, level, color) {\n    if (console && console.log) {\n      level = level || Log.Level.NOTICE\n      color = color || 'darkcyan'\n\n      var letters = {\n        5: 'e', // Error\n        4: 'w', // Warning\n        3: 'n', // Notice\n        2: 'd', // Debug\n        1: 'v' // Verbose\n      }\n\n      var letter = letters[level]\n      var prefix = '[Youbora]' + Log._getCurrentTime() + ' ' + letter + ':'\n\n      this.emit('log', { level: level, msg: msg, prefix: prefix })\n\n      // Show messages in actual console if level is enought\n      if (Log.logLevel <= level) {\n        if (Log.plainLogs || document.documentMode) { // document.documentMode exits only in IE\n          // Plain log for IE and devices\n          Log._plainReport(msg, prefix)\n        } else {\n          // choose log method\n          var logMethod\n          if (level === Log.Level.ERROR && console.error) {\n            logMethod = console.error\n          } else if (level === Log.Level.WARNING && console.warn) {\n            logMethod = console.warn\n          } else if (level === Log.Level.DEBUG && console.debug) {\n            logMethod = console.debug\n          } else {\n            logMethod = console.log\n          }\n\n          // print message\n          prefix = '%c' + prefix\n          if (msg instanceof Array) {\n            msg.splice(0, 0, prefix, 'color: ' + color)\n            logMethod.apply(console, msg)\n          } else {\n            logMethod.call(console, prefix, 'color: ' + color, msg)\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the current time in format hh:mm:ss.mmm (with trailing 0s)\n   * @private\n   * @return {string} Current time.\n   */\n  _getCurrentTime: function () {\n    var d = new Date()\n    var hh = ('0' + d.getDate()).slice(-2)\n    var mm = ('0' + d.getMinutes()).slice(-2)\n    var ss = ('0' + d.getSeconds()).slice(-2)\n    var mmm = ('00' + d.getMilliseconds()).slice(-3)\n    return '[' + hh + ':' + mm + ':' + ss + '.' + mmm + ']'\n  },\n\n  /**\n   * Returns a console message without style\n   *\n   * @private\n   * @param {(string|object|array)} msg Message string, object or array of messages.\n   * @param {string} prefix Prefix of the message.\n   */\n  _plainReport: function (msg, prefix) {\n    if (msg instanceof Array) {\n      for (var m in msg) {\n        Log._plainReport(msg[m], prefix)\n      }\n    } else {\n      if (typeof msg === 'string') {\n        console.log(prefix + ' ' + msg)\n      } else {\n        console.log(prefix + ' <next line>')\n        console.log(msg)\n      }\n    }\n  },\n\n  /**\n   * Sends an error (level 1) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  error: function () {\n    Log.report([].slice.call(arguments), Log.Level.ERROR, 'darkred')\n  },\n\n  /**\n   * Sends a warning (level 2) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  warn: function () {\n    Log.report([].slice.call(arguments), Log.Level.WARNING, 'darkorange')\n  },\n\n  /**\n   * Sends a notice (level 3) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  notice: function () {\n    Log.report([].slice.call(arguments), Log.Level.NOTICE, 'darkgreen')\n  },\n\n  /**\n   * Sends a debug message (level 4) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  debug: function () {\n    Log.report([].slice.call(arguments), Log.Level.DEBUG, 'indigo')\n  },\n\n  /**\n   * Sends a verbose message (level 5) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  verbose: function () {\n    Log.report([].slice.call(arguments), Log.Level.VERBOSE, 'navy')\n  },\n\n  /**\n   * This function is automatically executed at youboralib's init.\n   * Will search inside window.location.search for attribute 'youbora-debug=X'.\n   * X can have one of these values, that will modify LogLevel.\n   * 6: SILENT,\n   * 5: ERROR,\n   * 4: WARNING,\n   * 3: NOTICE,\n   * 2: DEBUG,\n   * 1: VERBOSE\n   *\n   * If youbora-console=plain is present, plainLogs will be set to true.\n   */\n  loadLevelFromUrl: function () {\n    if (typeof window !== 'undefined' && window.location && window.location.search) {\n      var m = /\\?.*&*youbora-debug=(.+)/i.exec(window.location.search)\n      if (m !== null) {\n        Log.logLevel = m[1]\n      }\n\n      var m2 = /\\?.*&*youbora-debug=plain/i.exec(window.location.search)\n      if (m2 !== null) {\n        Log.plainLogs = true\n      }\n    }\n  }\n}\n\nmodule.exports = Log\n","var YouboraObject = function () {}\n\nYouboraObject.prototype = {\n  /**\n   * A base class that other Classes should inherit from.\n   * It has a no-op constructor intended to be overridden by classes that extend from this.\n   *\n   * @constructs YouboraObject\n   * @abstract\n   * @memberof youbora\n   */\n  constructor: function () {}\n}\n\n/**\n * This static method allows the extension of the current class, emulating 1-level inheritance.\n * Also add a helper __super__ object poiting to the parent prototypes methods\n * @see https://github.com/SBoudrias/class-extend\n * @example\n * var A = YouboraObject.extend({ a: 1, b: 1, c: { d: 0 } });\n * var a = new A(); // { a: 1, b: 1, c: { d: 0 } }\n *\n * var B = A.extend({ b: 2, c: { e: 3 } });\n * var b = new B(); // { a: 1, b: 2, c: { e: 3 } }\n *\n * @param  {Object} protoProps  Prototype properties (available on the instances)\n * @param  {Object} staticProps Static properties (available on the contructor)\n * @return {Object}             New sub class\n */\nYouboraObject.extend = function (protoProps, staticProps) {\n  var parent = this\n  var NewClass\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent's constructor.\n  if (protoProps && Object.prototype.hasOwnProperty.call(protoProps, 'constructor')) {\n    NewClass = protoProps.constructor\n  } else {\n    NewClass = function () { return parent.apply(this, arguments) }\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  Object.assign(NewClass, parent, staticProps)\n\n  // Set the prototype chain to inherit from `parent`\n  NewClass.prototype = Object.create(parent.prototype, {\n    constructor: {\n      value: NewClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  // Add prototype properties (instance properties) to the subclass,\n  // if supplied.\n  if (protoProps) Object.assign(NewClass.prototype, protoProps)\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  NewClass.__super__ = parent.prototype\n\n  return NewClass\n}\n\nmodule.exports = YouboraObject\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar Options = YouboraObject.extend(\n  /** @lends Options.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     * @constructs Options\n     * @param {Object|Options} [options] A literal containing values.\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      /** @prop {boolean} [enabled=true] If false, the plugin won't send NQS requests. */\n      this['enabled'] = true\n\n      /**\n       * @prop {boolean} [httpSecure=null]\n       * Define the security of NQS calls.\n       * If true it will use 'https://',\n       * if false it will use 'http://',\n       * if null it will use '//'.\n       */\n      this['httpSecure'] = null\n\n      /** @prop {string} [host='nqs.nice264.com'] Host of the Fastdata service. */\n      this['host'] = 'nqs.nice264.com'\n\n      /**\n       * @prop {string} [accountCode='nicetest']\n       * NicePeopleAtWork account code that indicates the customer account.\n       */\n      this['accountCode'] = 'nicetest'\n\n      /** @prop {string} [username] User ID value inside your system. */\n      this['username'] = null\n\n      // PARSERS\n\n      /**\n       * @prop {boolean} [parse.Hls=false]\n       * If true the plugin will parse HLS files to use the first .ts file found as resource.\n       * It might slow performance down.\n       */\n      this['parse.Hls'] = false\n\n      /**\n       * @prop {string} [parse.CdnNameHeader]\n       * If defined, resource parse will try to fetch the CDN code from the custom header defined\n       * by this property. ie: 'x-cdn-forward'\n       */\n      this['parse.CdnNameHeader'] = 'x-cdn-forward'\n\n      /**\n       * @prop {boolean} [parse.CdnNode.enabled=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CdnNode'] = false\n\n      /**\n       * @prop {array<string>} [parse.CdnNode.list=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CdnNode.list'] = ['Akamai', 'Cloudfront', 'Level3', 'Fastly', 'Highwinds']\n\n      // NETWORK\n\n      /** @prop {string} [network.ip] IP of the viewer/user. ie= '100.100.100.100'. */\n      this['network.ip'] = null\n\n      /** @prop {string} [network.isp] Name of the internet service provider of the viewer/user. */\n      this['network.isp'] = null\n\n      /**\n       * @prop {string} [network.connectionType]\n       * See a list of codes in {@link http://mapi.youbora.com:8081/connectionTypes}\n       */\n      this['network.connectionType'] = null\n\n      // DEVICE\n\n      /**\n       * @prop {string} [device.code]\n       * Youbora's device code. If specified it will rewrite info gotten from user agent.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/devices}\n       */\n      this['device.code'] = null\n\n      // CONTENT\n\n      /** @prop {string} [content.transactionCode] Custom unique code to identify the view. */\n      this['content.transactionCode'] = null\n\n      /** @prop {string} [content.resource] URL/path of the current media resource. */\n      this['content.resource'] = null\n\n      /** @prop {boolean} [content.isLive] True if the content is live false if VOD. */\n      this['content.isLive'] = null\n\n      /** @prop {string} [content.title] Title of the media. */\n      this['content.title'] = null\n\n      /** @prop {string} [content.title2] Secondary title of the media. */\n      this['content.title2'] = null\n\n      /** @prop {number} [content.duration] Duration of the media. */\n      this['content.duration'] = null\n\n      /** @prop {int} {content.fps] Frames per second of the content in the current moment. */\n      this['content.fps'] = null\n\n      /** @prop {int} {content.bitrate] Bitrate of the content in bits per second. */\n      this['content.bitrate'] = null\n\n      /** @prop {int} {content.throughput] Throughput of the client bandwith in bits per second. */\n      this['content.throughput'] = null\n\n      /** @prop {string} {content.rendition] Name of the current rendition of the content. */\n      this['content.rendition'] = null\n\n      /**\n       * @prop {string} [content.cdn]\n       * Codename of the CDN where the content is streaming from.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/cdns}\n       * */\n      this['content.cdn'] = null\n\n      /**\n       * @prop {object} [content.metadata={}]\n       * Item containing mixed extra information about the content like: director, parental rating,\n       * device info or the audio channels.This object may store any serializable key:value info.\n       */\n      this['content.metadata'] = {}\n\n      // ADS\n\n      /**\n       * @prop {object} [ad.metadata={}]\n       * Item containing mixed extra information about ads like: campaign name or request url.\n       * This object may store any serializable key:value info.\n       */\n      this['ad.metadata'] = {}\n\n      // EXTRAPARAMS\n\n      /** @prop {string} [extraparam.1] Custom parameter 1. */\n      this['extraparam.1'] = null\n\n      /** @prop {string} [extraparam.2] Custom parameter 2. */\n      this['extraparam.2'] = null\n\n      /** @prop {string} [extraparam.3] Custom parameter 3. */\n      this['extraparam.3'] = null\n\n      /** @prop {string} [extraparam.4] Custom parameter 4. */\n      this['extraparam.4'] = null\n\n      /** @prop {string} [extraparam.5] Custom parameter 5. */\n      this['extraparam.5'] = null\n\n      /** @prop {string} [extraparam.6] Custom parameter 6. */\n      this['extraparam.6'] = null\n\n      /** @prop {string} [extraparam.7] Custom parameter 7. */\n      this['extraparam.7'] = null\n\n      /** @prop {string} [extraparam.8] Custom parameter 8. */\n      this['extraparam.8'] = null\n\n      /** @prop {string} [extraparam.9] Custom parameter 9. */\n      this['extraparam.9'] = null\n\n      /** @prop {string} [extraparam.10] Custom parameter 10. */\n      this['extraparam.10'] = null\n\n      this.setOptions(options)\n    },\n\n    /**\n     * Recursively sets the properties present in the params object.\n     * ie: this.username = params.username.\n     *\n     * @param {Object} options A literal or another Data containing values.\n     * @param {Object} [base=this] Start point for recursion.\n     */\n    setOptions: function (options, base) {\n      try {\n        base = base || this\n        if (typeof options !== 'undefined') {\n          for (var key in options) {\n            if (typeof base[key] === 'object' && base[key] !== null) {\n              this.setOptions(options[key], base[key])\n            } else {\n              base[key] = options[key]\n            }\n          }\n        }\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  }\n)\n\nmodule.exports = Options\n","var Emitter = require('../emitter')\nvar Timer = require('../timer')\nvar Log = require('../log')\nvar Util = require('../util')\nvar Chrono = require('../chrono')\nvar version = require('../version')\n\nvar Communication = require('../comm/communication')\nvar FlowTransform = require('../comm/transform/flow')\nvar ViewTransform = require('../comm/transform/view')\nvar Nqs6Transform = require('../comm/transform/nqs6')\nvar ResourceTransform = require('../comm/transform/resource')\n\nvar Options = require('./options')\nvar RequestBuilder = require('./requestbuilder')\n\nvar Adapter = require('../adapter/adapter')\n\nvar Plugin = Emitter.extend(\n  /** @lends Plugin.prototype */\n  {\n    /**\n     * This is the main class of video analytics. You may want one instance for each video you want\n     * to track. Will need adapters for both content and ads, manage options and general flow.\n     *\n     * @constructs Plugin\n     * @extends Emitter\n     * @memberof youbora\n     *\n     * @param {Options} [options] An object complying with {@link Options} constructor.\n     * @param {Adapter} [adapter] If an adapter is provided, setAdapter will be immediately called.\n     */\n    constructor: function (options, adapter) {\n      /** This flags indicates that /init has been called. */\n      this.isInitiated = false\n\n      /** This flags indicate that the content is preloading. */\n      this.isPreloading = false\n\n      /** Chrono for preload times. */\n      this.preloadChrono = new Chrono()\n\n      /** Chrono for init to join time. */\n      this.initChrono = new Chrono()\n\n      this.options = new Options(options)\n      this._adapter = null\n      this._ping = this._ping = new Timer(this._sendPing.bind(this), 5000)\n\n      this.requestBuilder = new RequestBuilder(this)\n\n      this.viewTransform = new ViewTransform(this)\n      this.viewTransform.on(ViewTransform.Event.DONE, function (e) { // Data response\n        this._ping.interval = e.target.response.pingTime * 1000\n      }.bind(this))\n\n      this.resourceTransform = new ResourceTransform(this)\n\n      if (adapter) this.setAdapter(adapter)\n    },\n\n    /**\n     * _reset all variables and stop all timers\n     */\n    _reset: function () {\n      this._stopPings()\n      this.resourceTransform = new ResourceTransform(this)\n\n      this.isInitiated = false\n      this.isPreloading = false\n      this.initChrono.reset()\n      this.preloadChrono.reset()\n    },\n\n    // ------------------------------------- Options ----------------------------------------------\n\n    /**\n     * Modifies current options. See {@link Options.setOptions}.\n     *\n     * @param {any} options\n     */\n    setOptions: function (options) {\n      this.options.setOptions(options)\n    },\n\n    // ------------------------------------- Adapters ----------------------------------------------\n\n    /**\n     * Sets an adapter for video content.\n     *\n     * @param {Adapter} adapter\n     */\n    setAdapter: function (adapter) {\n      this.removeAdapter()\n\n      this._adapter = adapter\n\n      // Register listeners\n      adapter.on(Adapter.Event.START, this._startListener.bind(this))\n      adapter.on(Adapter.Event.JOIN, this._joinListener.bind(this))\n      adapter.on(Adapter.Event.PAUSE, this._pauseListener.bind(this))\n      adapter.on(Adapter.Event.RESUME, this._resumeListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_BEGIN, this._seekBeginListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_END, this._seekEndListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_END, this._bufferEndListener.bind(this))\n      adapter.on(Adapter.Event.ERROR, this._errorListener.bind(this))\n      adapter.on(Adapter.Event.STOP, this._stopListener.bind(this))\n    },\n\n    /**\n     * Returns current adapter or null.\n     *\n     * @returns {Adapter}\n     */\n    getAdapter: function () {\n      return this._adapter\n    },\n\n    /** Removes the current adapter. Fires stop if needed. Calls adapter.dispose() */\n    removeAdapter: function () {\n      if (this._adapter) {\n        this._adapter.dispose()\n\n        this._adapter.off(Adapter.Event.START, this._startListener)\n        this._adapter.off(Adapter.Event.JOIN, this._joinListener)\n        this._adapter.off(Adapter.Event.PAUSE, this._pauseListener)\n        this._adapter.off(Adapter.Event.RESUME, this._resumeListener)\n        this._adapter.off(Adapter.Event.SEEK_BEGIN, this._seekBeginListener)\n        this._adapter.off(Adapter.Event.SEEK_END, this._seekEndListener)\n        this._adapter.off(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener)\n        this._adapter.off(Adapter.Event.BUFFER_END, this._bufferEndListener)\n        this._adapter.off(Adapter.Event.ERROR, this._errorListener)\n        this._adapter.off(Adapter.Event.STOP, this._stopListener)\n\n        this._adapter = null\n      }\n    },\n\n    /**\n     * Sets an adapter for ads.\n     *\n     * @param {Adapter} adsAdapter\n     */\n    setAdsAdapter: function (adsAdapter) {\n      this.removeAdsAdapter()\n\n      this._adsAdapter = adsAdapter\n\n      adsAdapter.on(Adapter.Event.START, this._adStartListener.bind(this))\n      adsAdapter.on(Adapter.Event.JOIN, this._adJoinListener.bind(this))\n      adsAdapter.on(Adapter.Event.PAUSE, this._adPauseListener.bind(this))\n      adsAdapter.on(Adapter.Event.RESUME, this._adResumeListener.bind(this))\n      adsAdapter.on(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener.bind(this))\n      adsAdapter.on(Adapter.Event.BUFFER_END, this._adBufferEndListener.bind(this))\n      adsAdapter.on(Adapter.Event.STOP, this._adStopListener.bind(this))\n    },\n\n    /**\n     * Returns current adapter or null.\n     *\n     * @returns {Adapter}\n     */\n    getAdsAdapter: function () {\n      return this._adsAdapter\n    },\n\n    /** Removes the current adapter. Fires stop if needed. Calls adapter.dispose() */\n    removeAdsAdapter: function () {\n      if (this._adsAdapter) {\n        this._adsAdapter.dispose()\n\n        this._adsAdapter.off(Adapter.Event.START, this._adStartListener)\n        this._adsAdapter.off(Adapter.Event.JOIN, this._adJoinListener)\n        this._adsAdapter.off(Adapter.Event.PAUSE, this._adPauseListener)\n        this._adsAdapter.off(Adapter.Event.RESUME, this._adResumeListener)\n        this._adsAdapter.off(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener)\n        this._adsAdapter.off(Adapter.Event.BUFFER_END, this._adBufferEndListener)\n        this._adsAdapter.off(Adapter.Event.STOP, this._adStopListener)\n\n        this._adsAdapter = null\n      }\n    },\n\n    // -------------------------------------- DISABLE ----------------------------------------------\n\n    /**\n     * Disable request sending.\n     */\n    disable: function () {\n      this.setOptions({ 'enabled': false })\n    },\n\n    /**\n     * Re-enable request sending.\n     */\n    enable: function () {\n      this.setOptions({ 'enabled': true })\n    },\n\n    // ------------------------------------- LISTENERS -----------------------------------------\n\n    /**\n     * Automatically calls RequestBuilder.\n     *\n     * @param {string} willSendEvent Name of the will-send event. Use {@link Plugin.Event} enum.\n     * @param {string} service Name of the service. Use {@link Plugin.Service} enum.\n     * @param {Object} params Params of the request\n     */\n    _send: function (willSendEvent, service, params) {\n      params = this.requestBuilder.buildParams(params, service)\n      this.requestBuilder.buildRequest(willSendEvent, service, params)\n    },\n\n    /**\n     * Initializes comm and its transforms.\n     */\n    _initComm: function () {\n      this.resourceTransform.init(this.getResource())\n\n      this._comm = new Communication()\n      this._comm.addTransform(new FlowTransform())\n      this._comm.addTransform(this.viewTransform)\n      this._comm.addTransform(this.resourceTransform)\n      this._comm.addTransform(new Nqs6Transform())\n    },\n\n    /**\n     * Starts preloading state and chronos.\n     */\n    firePreloadBegin: function () {\n      if (!this.isPreloading) {\n        this.isPreloading = true\n        this.preloadChrono.start()\n      }\n    },\n\n    /**\n     * Ends preloading state and chronos.\n     */\n    firePreloadEnd: function () {\n      if (this.isPreloading) {\n        this.isPreloading = false\n        this.preloadChrono.stop()\n      }\n    },\n\n    /**\n     * Sends /init. Should be called once the user has requested the content. Does not need\n     * a working adapter or player to work. it won't sent start if isInitiated is true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireInit: function (params) {\n      if (!this.isInitiated) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n\n        this.isInitiated = true\n        this.initChrono.start()\n\n        params = params || {}\n        this._send(Plugin.Event.WILL_SEND_INIT, Plugin.Service.INIT, params)\n        Log.notice(Plugin.Service.INIT + ' ' + (params.title || params.mediaResource))\n      }\n    },\n\n    _startListener: function (e) {\n      if (!this.isInitiated) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n      }\n\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_START, Plugin.Service.START, params)\n      Log.notice(Plugin.Service.START + ' ' + (params.title || params.mediaResource))\n    },\n\n    _joinListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_JOIN, Plugin.Service.JOIN, params)\n      Log.notice(Plugin.Service.JOIN + ' ' + params.joinDuration + 'ms')\n    },\n\n    _pauseListener: function (e) {\n      if (this._adapter) {\n        if (this._adapter.flags.isBuffering ||\n          this._adapter.flags.isSeeking ||\n          (this._adsAdapter && this._adsAdapter.flags.isStarted)) {\n          this._adapter.chronos.pause.reset()\n        }\n      }\n\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_PAUSE, Plugin.Service.PAUSE, params)\n      Log.notice(Plugin.Service.PAUSE + ' at ' + params.playhead + 's')\n    },\n\n    _resumeListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_RESUME, Plugin.Service.RESUME, params)\n      Log.notice(Plugin.Service.RESUME + ' ' + params.pauseDuration + 'ms')\n    },\n\n    _seekBeginListener: function (e) {\n      if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      Log.notice('Seek Begin')\n    },\n\n    _seekEndListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_SEEK, Plugin.Service.SEEK, params)\n      Log.notice(Plugin.Service.SEEK +\n        ' to ' + params.playhead +\n        ' in ' + params.seekDuration + 'ms'\n      )\n    },\n\n    _bufferBeginListener: function (e) {\n      if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      Log.notice('Buffer Begin')\n    },\n\n    _bufferEndListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_BUFFER, Plugin.Service.BUFFER, params)\n      Log.notice(Plugin.Service.BUFFER +\n        ' to ' + params.playhead +\n        ' in ' + params.bufferDuration + 'ms'\n      )\n    },\n\n    _errorListener: function (e) {\n      if (!this._comm) this._initComm()\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_ERROR, Plugin.Service.ERROR, params)\n      Log.notice(Plugin.Service.ERROR +\n        ' ' + params.errorLevel +\n        ' ' + params.errorCode\n      )\n\n      if (params.errorLevel === 'fatal') this._reset()\n    },\n\n    _stopListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_STOP, Plugin.Service.STOP, params)\n      Log.notice(Plugin.Service.STOP + ' at ' + params.playhead + 's')\n      this._reset()\n    },\n\n    // Ads\n    _adStartListener: function (e) {\n      if (this._adapter) {\n        this._adapter.fireBufferEnd()\n        this._adapter.fireSeekEnd()\n        if (this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      }\n\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_START, Plugin.Service.AD_START, params)\n      Log.notice(Plugin.Service.AD_START + ' at ' + params.playhead + 's')\n    },\n\n    _adJoinListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_JOIN, Plugin.Service.AD_JOIN, params)\n      Log.notice(Plugin.Service.AD_JOIN + ' ' + params.adJoinDuration + 'ms')\n    },\n\n    _adPauseListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_PAUSE, Plugin.Service.AD_PAUSE, params)\n      Log.notice(Plugin.Service.AD_PAUSE + ' at ' + params.adPlayhead + 's')\n    },\n\n    _adResumeListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_RESUME, Plugin.Service.AD_RESUME, params)\n      Log.notice(Plugin.Service.AD_RESUME + ' ' + params.adPauseDuration + 'ms')\n    },\n\n    _adBufferBeginListener: function (e) {\n      Log.notice('Ad Buffer Begin')\n      if (this._adsAdapter && this._adsAdapter.flags.isPaused) {\n        this._adsAdapter.chronos.pause.reset()\n      }\n    },\n\n    _adBufferEndListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_BUFFER, Plugin.Service.AD_BUFFER, params)\n      Log.notice(Plugin.Service.AD_BUFFER + ' ' + params.adBufferDuration + 'ms')\n    },\n\n    _adStopListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_STOP, Plugin.Service.AD_STOP, params)\n      Log.notice(Plugin.Service.AD_STOP + ' at ' + params.playhead + 's')\n    },\n\n    // ----------------------------------------- PINGS ---------------------------------------------\n\n    /**\n     * Starts sending pings\n     * @private\n     */\n    _startPings: function () {\n      if (!this._ping.isRunning) this._ping.start()\n    },\n\n    /**\n     * Stops sending pings\n     * @private\n     */\n    _stopPings: function () {\n      this._ping.stop()\n    },\n\n    _sendPing: function (diffTime) {\n      var params = {\n        diffTime: diffTime,\n        entities: this.requestBuilder.getChangedEntities()\n      }\n      if (this._adapter) {\n        if (this._adapter.flags.isPaused) {\n          params = this.requestBuilder.fetchParams(params, ['pauseDuration'])\n        } else {\n          params = this.requestBuilder.fetchParams(params, [\n            'bitrate',\n            'throughput',\n            'fps'\n          ])\n\n          if (this._adsAdapter && this._adsAdapter.flags.isStarted) {\n            params = this.requestBuilder.fetchParams(params, ['adBitrate'])\n          }\n        }\n        if (this._adapter.flags.isBuffering) {\n          params = this.requestBuilder.fetchParams(params, ['bufferDuration'])\n        }\n        if (this._adapter.flags.isSeeking) {\n          params = this.requestBuilder.fetchParams(params, ['seekDuration'])\n        }\n\n        if (this._adsAdapter) {\n          if (this._adsAdapter.flags.isStarted) {\n            params = this.requestBuilder.fetchParams(params, ['adPlayhead'])\n          }\n          if (this._adsAdapter.flags.isBuffering) {\n            params = this.requestBuilder.fetchParams(params, ['adBufferDuration'])\n          }\n        }\n      }\n\n      this._send(Plugin.Event.WILL_SEND_PING, Plugin.Service.PING, params)\n      Log.verbose(Plugin.Service.PING)\n    },\n\n    // ------------------------------------- INFO GETTERS -----------------------------------------\n\n    /** Returns service host */\n    getHost: function () {\n      return Util.addProtocol(\n        Util.stripProtocol(this.options['host']),\n        this.options['httpSecure'])\n    },\n\n    /** Returns parse HLS Flag */\n    isParseHls: function () {\n      return this.options['parse.Hls']\n    },\n\n    /** Returns parse CdnNode Flag */\n    isParseCdnNode: function () {\n      return this.options['parse.CdnNode']\n    },\n\n    /** Returns Cdn list */\n    getParseCdnNodeList: function () {\n      return this.options['parse.CdnNode.list']\n    },\n\n    /** Returns Cdn header name */\n    getParseCdnNodeNameHeader: function () {\n      return this.options['parse.CdnNameHeader']\n    },\n\n    /** Returns content's playhead */\n    getPlayhead: function () {\n      var ret = 0\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayhead()\n        } catch (err) {\n          Log.warn('An error occurred while calling getPlayhead', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns content's PlayRate */\n    getPlayrate: function () {\n      var ret = 0\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayrate', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's FramesPerSecond */\n    getFramesPerSecond: function () {\n      var ret = null\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getFramesPerSecond()\n        } catch (err) {\n          Log.warn('An error occured while calling getFramesPerSecond', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's DroppedFrames */\n    getDroppedFrames: function () {\n      var ret = null\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getDroppedFrames()\n        } catch (err) {\n          Log.warn('An error occured while calling getDroppedFrames', err)\n        }\n      }\n      if (!ret) {\n        ret = this.getWebkitDroppedFrames()\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /**\n     * Returns dropped frames as per webkitDroppedFrameCount\n     *\n     * @returns {number}\n     */\n    getWebkitDroppedFrames: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitDroppedFrameCount) {\n        return this._adapter.tag.webkitDroppedFrameCount\n      }\n      return null\n    },\n\n    /** Returns content's Duration */\n    getDuration: function () {\n      var ret = this.options['content.duration']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getDuration', err)\n        }\n      }\n      return Util.parseNumber(Math.round(ret), 0)\n    },\n\n    /** Returns content's Bitrate */\n    getBitrate: function () {\n      var ret = this.options['content.bitrate']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitBitrate: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        if (this._lastWebkitBitrate) {\n          var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitBitrate\n          bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n        }\n        this._lastWebkitBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns content's Throughput */\n    getThroughput: function () {\n      var ret = this.options['content.throughput']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getThroughput()\n        } catch (err) {\n          Log.warn('An error occured while calling getThroughput', err)\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /** Returns content's Rendition */\n    getRendition: function () {\n      var ret = this.options['content.rendition']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getRendition()\n        } catch (err) {\n          Log.warn('An error occured while calling getRendition', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title */\n    getTitle: function () {\n      var ret = this.options['content.title']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title2 */\n    getTitle2: function () {\n      var ret = this.options['content.title2']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getTitle2()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle2', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's IsLive */\n    getIsLive: function () {\n      var ret = this.options['content.isLive']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getIsLive()\n        } catch (err) {\n          Log.warn('An error occured while calling getIsLive', err)\n        }\n      }\n      return ret || false\n    },\n\n    /** Returns content's Resource after being parsed by the resourceTransform */\n    getResource: function () {\n      var ret = null\n      if (!this.resourceTransform.isBlocking()) {\n        ret = this.resourceTransform.getResource()\n      }\n\n      return ret || this.getOriginalResource()\n    },\n\n    /** Returns content's original Resource */\n    getOriginalResource: function () {\n      var ret = null\n      ret = this.options['content.resource']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getResource', err)\n          ret = null\n        }\n      }\n      return ret || 'unknown'\n    },\n\n    /** Returns content's TransactionCode */\n    getTransactionCode: function () {\n      return this.options['content.transactionCode']\n    },\n\n    /** Returns content's Metadata */\n    getMetadata: function () {\n      return this.options['content.metadata']\n    },\n\n    /** Returns content's PlayerVersion */\n    getPlayerVersion: function () {\n      var ret = ''\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayerVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's PlayerName */\n    getPlayerName: function () {\n      var ret = ''\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayerName()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayerName', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Cdn */\n    getCdn: function () {\n      var ret = null\n      if (!this.resourceTransform.isBlocking()) {\n        ret = this.resourceTransform.getCdnName()\n      }\n      return ret || this.options['content.cdn']\n    },\n\n    /** Returns content's PluginVersion */\n    getPluginVersion: function () {\n      var ret = version + '-adapterless'\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getPluginVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Extraparam1 */\n    getExtraparam1: function () {\n      return this.options['extraparam.1']\n    },\n\n    /** Returns content's Extraparam2 */\n    getExtraparam2: function () {\n      return this.options['extraparam.2']\n    },\n\n    /** Returns content's Extraparam3 */\n    getExtraparam3: function () {\n      return this.options['extraparam.3']\n    },\n\n    /** Returns content's Extraparam4 */\n    getExtraparam4: function () {\n      return this.options['extraparam.4']\n    },\n    /** Returns content's Extraparam5 */\n    getExtraparam5: function () {\n      return this.options['extraparam.5']\n    },\n\n    /** Returns content's Extraparam6 */\n    getExtraparam6: function () {\n      return this.options['extraparam.6']\n    },\n\n    /** Returns content's Extraparam7 */\n    getExtraparam7: function () {\n      return this.options['extraparam.7']\n    },\n\n    /** Returns content's Extraparam8 */\n    getExtraparam8: function () {\n      return this.options['extraparam.8']\n    },\n\n    /** Returns content's Extraparam9 */\n    getExtraparam9: function () {\n      return this.options['extraparam.9']\n    },\n\n    /** Returns content's Extraparam10 */\n    getExtraparam10: function () {\n      return this.options['extraparam.10']\n    },\n\n    /** Returns ad's position */\n    getAdPosition: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPosition()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPosition', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdPlayhead */\n    getAdPlayhead: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPlayhead()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayhead', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdDuration */\n    getAdDuration: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdDuration', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdBitrate */\n    getAdBitrate: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitAdBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitAdBitrate: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        if (this._lastWebkitAdBitrate) {\n          var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitAdBitrate\n          bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n        }\n        this._lastWebkitAdBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns ad's AdTitle */\n    getAdTitle: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdResource */\n    getAdResource: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdResource', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdPlayerVersion */\n    getAdPlayerVersion: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPlayerVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdMetadata */\n    getAdMetadata: function () {\n      return this.options['ad.metadata']\n    },\n\n    /** Returns PluginInfo */\n    getPluginInfo: function () {\n      var ret = {\n        lib: version,\n        adapter: this.getPluginVersion(),\n        adAdapter: (this._adsAdapter) ? this._adsAdapter.getVersion() : null\n      }\n      return ret\n    },\n\n    /** Returns Ip */\n    getIp: function () {\n      return this.options['network.ip']\n    },\n\n    /** Returns Isp */\n    getIsp: function () {\n      return this.options['network.isp']\n    },\n\n    /** Returns ConnectionType */\n    getConnectionType: function () {\n      return this.options['network.connectionType']\n    },\n\n    /** Returns DeviceCode */\n    getDeviceCode: function () {\n      return this.options['device.code']\n    },\n\n    /** Returns AccountCode */\n    getAccountCode: function () {\n      return this.options['accountCode']\n    },\n\n    /** Returns Username */\n    getUsername: function () {\n      return this.options['username']\n    },\n\n    /** Get URL referer. */\n    getReferer: function () {\n      var ret = ''\n      if (typeof window !== 'undefined' && window.location) {\n        ret = window.location.href\n      }\n      return ret\n    },\n\n    /**\n     * Returns the nodehost\n     */\n    getNodeHost: function () {\n      return this.resourceTransform.getNodeHost()\n    },\n\n    /**\n     * Returns the node type id\n     */\n    getNodeType: function () {\n      return this.resourceTransform.getNodeType()\n    },\n\n    /**\n     * Returns the node type string\n     */\n    getNodeTypeString: function () {\n      return this.resourceTransform.getNodeTypeString()\n    },\n\n    // ---------------------------------------- CHRONOS -------------------------------------------\n\n    /** Returns preload chrono delta time */\n    getPreloadDuration: function () {\n      return this.preloadChrono.getDeltaTime(false)\n    },\n\n    getInitDuration: function () {\n      return this.initChrono.getDeltaTime(false)\n    },\n\n    /** Returns JoinDuration chrono delta time */\n    getJoinDuration: function () {\n      if (this.isInitiated) return this.getInitDuration()\n      return this._adapter ? this._adapter.chronos.join.getDeltaTime(false) : -1\n    },\n\n    /** Returns BufferDuration chrono delta time */\n    getBufferDuration: function () {\n      return this._adapter ? this._adapter.chronos.buffer.getDeltaTime(false) : -1\n    },\n\n    /** Returns SeekDuration chrono delta time */\n    getSeekDuration: function () {\n      return this._adapter ? this._adapter.chronos.seek.getDeltaTime(false) : -1\n    },\n\n    /** Returns pauseDuration chrono delta time */\n    getPauseDuration: function () {\n      return this._adapter ? this._adapter.chronos.pause.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdJoinDuration chrono delta time */\n    getAdJoinDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.join.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdBufferDuration chrono delta time */\n    getAdBufferDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.buffer.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdPauseDuration chrono delta time */\n    getAdPauseDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.pause.getDeltaTime(false) : -1\n    },\n\n    /** Returns total totalAdDuration chrono delta time */\n    getTotalAdDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.total.getDeltaTime(false) : -1\n    }\n  },\n\n  /** @lend Plugin */\n  {\n    // Static Memebers //\n    /**\n     * List of youbora services.\n     * @enum\n     */\n    Service: {\n      DATA: '/data',\n      INIT: '/init',\n      START: '/start',\n      JOIN: '/joinTime',\n      PAUSE: '/pause',\n      RESUME: '/resume',\n      SEEK: '/seek',\n      BUFFER: '/bufferUnderrun',\n      ERROR: '/error',\n      STOP: '/stop',\n      PING: '/ping',\n      AD_START: '/adStart',\n      AD_JOIN: '/adJoin',\n      AD_PAUSE: '/adPause',\n      AD_RESUME: '/adResume',\n      AD_BUFFER: '/adBufferUnerrun',\n      AD_STOP: '/adStop'\n    },\n\n    /**\n     * List of events that could be fired\n     * @enum\n     */\n    Event: {\n      WILL_SEND_START: 'will-send-start',\n      WILL_SEND_JOIN: 'will-send-join',\n      WILL_SEND_PAUSE: 'will-send-pause',\n      WILL_SEND_RESUME: 'will-send-resume',\n      WILL_SEND_SEEK: 'will-send-seek',\n      WILL_SEND_BUFFER: 'will-send-buffer',\n      WILL_SEND_ERROR: 'will-send-error',\n      WILL_SEND_FATAL_ERROR: 'will-send-fatal-error',\n      WILL_SEND_STOP: 'will-send-stop',\n      WILL_SEND_PING: 'will-send-ping',\n      WILL_SEND_AD_START: 'will-send-ad-start',\n      WILL_SEND_AD_JOIN: 'will-send-ad-join',\n      WILL_SEND_AD_PAUSE: 'will-send-ad-pause',\n      WILL_SEND_AD_RESUME: 'will-send-ad-resume',\n      WILL_SEND_AD_BUFFER: 'will-send-ad-buffer',\n      WILL_SEND_AD_STOP: 'will-send-ad-stop'\n    }\n  }\n)\n\nmodule.exports = Plugin\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar YBRequest = require('../comm/request')\n\nvar startParams = [\n  'accountCode',\n  'username',\n  'rendition',\n  'title',\n  'title2',\n  'live',\n  'mediaDuration',\n  'mediaResource',\n  'transactionCode',\n  'properties',\n  'cdn',\n  'playerVersion',\n  'param1',\n  'param2',\n  'param3',\n  'param4',\n  'param5',\n  'param6',\n  'param7',\n  'param8',\n  'param9',\n  'param10',\n  'pluginVersion',\n  'pluginInfo',\n  'isp',\n  'connectionType',\n  'ip',\n  'deviceCode',\n  'preloadDuration'\n]\n\nvar RequestBuilder = YouboraObject.extend(\n  /** @lends RequestBuilder.prototype */\n  {\n    /**\n     * This class helps building params associated with each event: /start, /joinTime...\n     *\n     * @constructs RequestBuilder\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin A Plugin instance\n     */\n    constructor: function (plugin) {\n      this._plugin = plugin\n      this._adNumber = 0\n\n      /** Stores a list of the last params fetched */\n      this.lastSent = {}\n    },\n\n    /**\n     * Adds to params all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {Array[string]} paramList A list of params to fetch.\n     * @param {bool} onlyDifferent If true, only fetches params that have changed\n     */\n    fetchParams: function (params, paramList, onlyDifferent) {\n      params = params || {}\n      paramList = paramList || []\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i]\n\n        if (params[param]) { return }\n        var getterName = RequestBuilder.getters[param]\n\n        if (this._plugin[getterName]) {\n          var value = this._plugin[getterName]()\n          if (value !== null && (!onlyDifferent || this.lastSent[param] !== value)) {\n            params[param] = value\n            this.lastSent[param] = value\n          }\n        } else {\n          Log.warn('Trying to call undefined getter ' + param + ':' + getterName)\n        }\n      }\n\n      return params\n    },\n\n    /**\n     * Adds to params object all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {string} service The name of the service. Use {@link Plugin.Service} enum.\n     */\n    buildParams: function (params, service) {\n      params = params || {}\n      this.fetchParams(params, RequestBuilder.params[service], false)\n      this.fetchParams(params, RequestBuilder.differentParams[service], true)\n      return params\n    },\n\n    /**\n     * Creates and enqueues related request using {@link Communication#sendRequest}.\n     * It will fire will-send-events.\n     *\n     * @param {String} event Name of the will-send-event to be fired.\n     * @param {string} service Name of the service. Use {@link Plugin.Service} enum.\n     * @param {Object} params Params for the request.\n     */\n    buildRequest: function (event, service, params) {\n      var data = {\n        params: params,\n        plugin: this._plugin,\n        adapter: this._plugin.getAdapter(),\n        adsAdapter: this._plugin.getAdsAdapter()\n      }\n\n      this._plugin.emit(event, data)\n\n      if (this._plugin._comm && params !== null && this._plugin.options.enabled) {\n        this._plugin._comm.sendRequest(new YBRequest(null, service, params))\n      }\n    },\n\n    /**\n     * Creates an adnumber if it does not exist and stores it in lastSent. If it already exists,\n     * it is incremented by 1.\n     *\n     * @returns {number} adNumber\n     */\n    getAdNumber: function () {\n      var adNumber = this.lastSent.adNumber\n      if (adNumber && this.lastSent.adPosition === this._plugin.getAdPosition()) {\n        adNumber += 1\n      } else {\n        adNumber = 1\n      }\n      this.lastSent.adNumber = adNumber\n      return adNumber\n    },\n\n    /**\n     * Return changed entities since last check\n     *\n     * @returns {Object} params\n     */\n    getChangedEntities: function () {\n      return this.fetchParams({}, RequestBuilder.differentParams['entities'], true)\n    }\n  },\n  /* @lends RequestBuilder */\n  {\n    // Static Members\n\n    /** List of params used by each service */\n    params: {\n      '/data': ['system', 'pluginVersion'],\n      '/init': startParams,\n      '/start': startParams,\n      '/joinTime': ['joinDuration', 'playhead'],\n      '/pause': ['playhead'],\n      '/resume': ['pauseDuration', 'playhead'],\n      '/seek': ['seekDuration', 'playhead'],\n      '/bufferUnderrun': ['bufferDuration', 'playhead'],\n      '/error': ['player'].concat(startParams),\n      '/stop': ['bitrate', 'playhead'],\n      '/adStart': [\n        'playhead',\n        'adTitle',\n        'adPosition',\n        'adDuration',\n        'adResource',\n        'adPlayerVersion',\n        'adProperties',\n        'adnalyzerVersion'\n      ],\n      '/adJoin': ['adPosition', 'joinAdDuration', 'adPlayhead'],\n      '/adPause': ['adPosition', 'adPlayhead'],\n      '/adResume': ['adPosition', 'adPlayhead', 'adPauseDuration'],\n      '/adBufferUnerrun': ['adPosition', 'adPlayhead', 'adBufferDuration'],\n      '/adStop': ['adPosition', 'adPlayhead', 'adBitrate', 'totalAdDuration'],\n      '/ping': ['playhead', 'droppedFrames', 'playrate']\n    },\n\n    /** List of params used by each service (only if they are different) */\n    differentParams: {\n      '/join': ['title', 'title2', 'live', 'mediaDuration', 'mediaResource'],\n      '/adJoin': ['adTitle', 'adDuration', 'adResource'],\n      'entities': [\n        'rendition',\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource',\n        'param1',\n        'param2',\n        'param3',\n        'param4',\n        'param5',\n        'param6',\n        'param7',\n        'param8',\n        'param9',\n        'param10',\n        'adTitle',\n        'connectionType',\n        'deviceCode',\n        'ip',\n        'username',\n        'cdn',\n        'nodeHost',\n        'nodeType',\n        'nodeTypeString'\n      ]\n    },\n\n    /** List of params and its related getter */\n    getters: {\n      playhead: 'getPlayhead',\n      playrate: 'getPlayrate',\n      fps: 'getFramesPerSecond',\n      droppedFrames: 'getDroppedFrames',\n      mediaDuration: 'getDuration',\n      bitrate: 'getBitrate',\n      throughput: 'getThroughput',\n      rendition: 'getRendition',\n      title: 'getTitle',\n      title2: 'getTitle2',\n      live: 'getIsLive',\n      mediaResource: 'getResource',\n      transactionCode: 'getTransactionCode',\n      properties: 'getMetadata',\n      playerVersion: 'getPlayerVersion',\n      player: 'getPlayerName',\n      cdn: 'getCdn',\n      pluginVersion: 'getPluginVersion',\n\n      param1: 'getExtraparam1',\n      param2: 'getExtraparam2',\n      param3: 'getExtraparam3',\n      param4: 'getExtraparam4',\n      param5: 'getExtraparam5',\n      param6: 'getExtraparam6',\n      param7: 'getExtraparam7',\n      param8: 'getExtraparam8',\n      param9: 'getExtraparam9',\n      param10: 'getExtraparam10',\n\n      adPosition: 'getAdPosition',\n      adPlayhead: 'getAdPlayhead',\n      adDuration: 'getAdDuration',\n      adBitrate: 'getAdBitrate',\n      adTitle: 'getAdTitle',\n      adResource: 'getAdResource',\n      adPlayerVersion: 'getAdPlayerVersion',\n      adProperties: 'getAdMetadata',\n      adnalyzerVersion: 'getAdnalyzerVersion',\n\n      pluginInfo: 'getPluginInfo',\n\n      isp: 'getIsp',\n      connectionType: 'getConnectionType',\n      ip: 'getIp',\n\n      deviceCode: 'getDeviceCode',\n\n      system: 'getAccountCode',\n      accountCode: 'getAccountCode',\n      username: 'getUsername',\n\n      joinDuration: 'getJoinDuration',\n      bufferDuration: 'getBufferDuration',\n      seekDuration: 'getSeekDuration',\n      pauseDuration: 'getPauseDuration',\n\n      adJoinDuration: 'getAdJoinDuration',\n      adBufferDuration: 'getAdBufferDuration',\n      totalAdDuration: 'getTotalAdDuration',\n      preloadDuration: 'getPreloadDuration',\n      adPauseDuration: 'getAdPauseDuration',\n\n      referer: 'getReferer',\n\n      nodeHost: 'getNodeHost',\n      nodeType: 'getNodeType',\n      nodeTypeString: 'getNodeTypeString'\n    }\n\n  }\n)\n\nmodule.exports = RequestBuilder\n","/* eslint no-extend-native: \"off\" */\n\n/**\n * When executed, this function applies polyfills to the following functionalities:\n * Function.prototype.bind,\n * Object.assign,\n * Object.create,\n * Array.prototype.forEach,\n * Array.isArray\n *\n * @memberof youbora\n */\nvar applyPolyfills = function () {\n  // Bind\n  Function.prototype.bind = Function.prototype.bind || function (b) {\n    if (typeof this !== 'function') {\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable')\n    }\n    var a = Array.prototype.slice\n    var f = a.call(arguments, 1)\n    var e = this\n    var C = function () {}\n    var d = function () {\n      return e.apply(this instanceof C ? this : b || window, f.concat(a.call(arguments)))\n    }\n    C.prototype = this.prototype\n    d.prototype = new C()\n    return d\n  }\n\n  // Assign\n  Object.assign = Object.assign || function (target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object')\n    }\n\n    var output = Object(target)\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index]\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey]\n          }\n        }\n      }\n    }\n    return output\n  }\n\n  // Create\n  Object.create = Object.create || (function () {\n    var Temp = function () {}\n    return function (prototype, propertiesObject) {\n      if (prototype !== Object(prototype) && prototype !== null) {\n        throw TypeError('Argument must be an object, or null')\n      }\n      Temp.prototype = prototype || {}\n      var result = new Temp()\n      Temp.prototype = null\n      if (propertiesObject !== undefined) {\n        Object.defineProperties(result, propertiesObject)\n      }\n\n      // to imitate the case of Object.create(null)\n      if (prototype === null) {\n        result.prototype = null\n      }\n      return result\n    }\n  })()\n\n  // Foreach\n  Array.prototype.forEach = Array.prototype.forEach || function (callback, thisArg) {\n    if (typeof (callback) !== 'function') {\n      throw new TypeError(callback + ' is not a function!')\n    }\n    var len = this.length\n    for (var i = 0; i < len; i++) {\n      callback.call(thisArg, this[i], i, this)\n    }\n  }\n\n  // isArray\n  Array.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]'\n  }\n}\n\nmodule.exports = applyPolyfills\n","var YouboraObject = require('./object')\nvar Chrono = require('./chrono')\n\nvar Timer = YouboraObject.extend(\n  /** @lends Timer.prototype */\n  {\n    /**\n     * Instances of this class will call a callback every setted interval.\n     *\n     * @param {function} callback The callback to call every due interval.\n     * Callback will receive lapsed ms between calls.\n     * @param {int} [interval=5000] Milliseconds between each call.\n     *\n     * @constructs Timer\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (callback, interval) {\n      this.callback = callback\n      this.interval = interval || 5000\n      this.isRunning = false\n      this._timer = null\n\n      this.chrono = new Chrono()\n    },\n\n    /**\n     * Starts the timer.\n     */\n    start: function () {\n      this.isRunning = true\n      this._setTick()\n    },\n\n    /**\n     * Stops the timer.\n     */\n    stop: function () {\n      this.isRunning = false\n      if (this._timer) clearTimeout(this._timer)\n    },\n\n    _setTick: function () {\n      this.chrono.start()\n      this._timer = setTimeout(function () {\n        this.callback(this.chrono.stop())\n        this._setTick()\n      }.bind(this), this.interval)\n    }\n  }\n)\n\nmodule.exports = Timer\n","var Log = require('./log')\n\n/**\n * This static class provides utilities\n * @class\n * @static\n * @memberof youbora\n */\nvar Util = {\n  /**\n   * Strip {protocol}:// and // from the begining of the string.\n   *\n   * @param {string} url\n   * @returns {string} stripped url\n   */\n  stripProtocol: function (url) {\n    try {\n      return url.replace(/^(.*?:\\/\\/|\\/\\/)/i, '')\n    } catch (err) {\n      Log.warn(err)\n      return url\n    }\n  },\n\n  /**\n   * Adds specific protocol. ie: [http[s]:]//nqs.nice264.com\n   *\n   * @param {string} url Domain of the service.\n   * @param {boolean|null} [httpSecure]\n   * If true will add https, if false http.\n   * Otherwise will add //\n   * @return Return the complete service URL.\n   */\n  addProtocol: function (url, httpSecure) {\n    try {\n      if (httpSecure === true) {\n        return 'https://' + url\n      } else if (window.location.protocol.indexOf('http') === 0) {\n        return '//' + url\n      } else {\n        return 'http://' + url\n      }\n    } catch (err) {\n      Log.warn(err)\n      return 'http://localhost/'\n    }\n  },\n\n  /**\n   * Return n if it isn't NaN, negative, Infinity, null or undefined.\n   * In any other case, return def.\n   *\n   * @param {mixed} n Number to be parsed.\n   * @param {number} defl Number to return if n is not correct.\n   */\n  parseNumber: function (n, def) {\n    if (\n      !isNaN(n) &&\n      n >= 0 &&\n      n !== Infinity &&\n      n !== -Infinity &&\n      n !== null &&\n      typeof n !== 'undefined'\n    ) {\n      return n\n    } else {\n      return def\n    }\n  },\n\n  /**\n   * This utility function will add most of the HTML5 event listener to the player sent.\n   * This common events will be listened: 'canplay', 'buffering', 'waiting', 'ended', 'play',\n   * 'playing', 'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked', 'stalled',\n   * 'dispose', 'loadeddata', 'loadstart'.\n   *\n   * Events will be reported as DEBUG level messages.\n   *\n   * @param {object|function} o Object to attach the events.\n   * @param {array} [extraEvents]\n   * An array of extra events to watch. ie:  ['timeupdate', 'progress'].\n   * If the first item is null, no common events will be added.\n   * @param {function} [report] Callback function called to report events.\n   * Default calls Log.debug()\n   */\n  listenAllEvents: function (o, extraEvents, report) {\n    try {\n      if (Log.logLevel <= Log.Level.DEBUG) {\n        report = report || function (e) {\n          Log.debug('Event: ' + e.type)\n        }\n\n        var playerEvents = [\n          'canplay', 'buffering', 'waiting', 'ended', 'play', 'playing',\n          'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked',\n          'stalled', 'dispose', 'loadeddata', 'loadstart'\n        ]\n        if (extraEvents) {\n          if (extraEvents[0] === null) {\n            extraEvents.shift()\n            playerEvents = extraEvents\n          } else {\n            playerEvents = playerEvents.concat(extraEvents)\n          }\n        }\n\n        for (var i = 0; i < playerEvents.length; i++) {\n          if (typeof o === 'function') {\n            o.call(window, playerEvents[i], report)\n          } else if (o.on) {\n            o.on(playerEvents[i], report)\n          } else if (o.addEventListener) {\n            o.addEventListener(playerEvents[i], report)\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(err)\n    }\n  },\n\n  /**\n   * Builds a string that represents the rendition.\n   *\n   * The returned string will have the following format: <width>x<height>@bitrate<suffix?>.\n   * If either the width or height are < 1, only the bitrate will be returned.\n   * If bitrate is < 1, only the dimensions will be returned.\n   * If bitrate is < and there is no dimensions, a null will be returned.\n   * The bitrate will also have one of the following suffixes dependin on its\n   * magnitude: bps, Kbps, Mbps\n   *\n   * @param {any} width The width of the asset. If only 1 argument is sent, it will be treated\n   * as bitrate.\n   * @param {any} height The height of the asset.\n   * @param {any} bitrate The indicated bitrate (in the manifest) of the asset.\n   * @returns {string} A string with the following format: <width>x<height>@<bitrate><suffix>\n   */\n  buildRenditionString: function (width, height, bitrate) {\n    if (arguments.length === 1) {\n      bitrate = width\n      width = null\n      height = null\n    }\n\n    var ret = ''\n    if (width && height) {\n      ret = width + 'x' + height\n      if (bitrate > 0) {\n        ret += '@'\n      }\n    }\n\n    if (bitrate < 1) {\n      return ret\n    } else if (bitrate < 1e3) {\n      ret += Math.round(bitrate) + 'bps'\n    } else if (bitrate < 1e6) {\n      bitrate = Math.round(bitrate / 1e3)\n      ret += bitrate + 'Kbps'\n    } else {\n      bitrate = Math.round(bitrate / 1e4) / 1e2\n      ret += bitrate + 'Mbps'\n    }\n\n    return ret || null\n  }\n\n}\n\nmodule.exports = Util\n","module.exports = require('../manifest.json').version\n","// No-Conflict\nvar previousYoubora = youbora\nvar youbora = {}\n\n/**\n * This allows you to run multiple instances of YouboraLib on the same webapp.\n * After loading the new version, call `noConflict()` to get a reference to it.\n * At the same time the old version will be returned to Youbora.\n */\nyoubora.noConflict = function () {\n  youbora = previousYoubora\n  return this\n}\n\n// Info\nyoubora.VERSION = require('./version')\n\n// Polyfills\nyoubora.polyfills = require('./polyfills')\n\n// Classes\nyoubora.Object = require('./object')\nyoubora.Emitter = require('./emitter')\nyoubora.Util = require('./util')\nyoubora.Chrono = require('./chrono')\nyoubora.Timer = require('./timer')\n\n// Log\nyoubora.Log = require('./log')\nyoubora.Log.loadLevelFromUrl()\n\n// Comm classes\nyoubora.Request = require('./comm/request')\nyoubora.Communication = require('./comm/communication')\n\n// Resource Transform\nyoubora.Transform = require('./comm/transform/transform')\nyoubora.ViewTransform = require('./comm/transform/view')\nyoubora.Nqs6Transform = require('./comm/transform/nqs6')\nyoubora.ResourceTransform = require('./comm/transform/resource')\nyoubora.CdnParser = require('./comm/transform/cdnparser')\nyoubora.HlsParser = require('./comm/transform/hlsparser')\n\n// Plugin Classes\nyoubora.Options = require('./plugin/options')\nyoubora.Plugin = require('./plugin/plugin')\nyoubora.RequestBuilder = require('./plugin/requestbuilder')\n\n// Adapters\nyoubora.PlayheadMonitor = require('./adapter/playheadmonitor')\nyoubora.Adapter = require('./adapter/adapter')\nyoubora.adapters = {}\n\nmodule.exports = youbora\n","var youbora = require('youboralib')\nvar pkg = require('../manifest.json')\n\nyoubora.adapters.Videojs5 = youbora.Adapter.extend({\n  getVersion: function () {\n    return pkg.version + '-videojs5'\n  },\n\n  getPlayhead: function () {\n    if (this.player.absoluteTime) {\n      return this.player.absoluteTime()\n    } else {\n      return this.player.currentTime()\n    }\n  },\n\n  getDuration: function () {\n    if (this.player.mediainfo && typeof this.player.mediainfo.duration !== 'undefined') {\n      return this.player.mediainfo.duration // brightcove\n    } else {\n      return this.player.duration()\n    }\n  },\n\n  getResource: function () {\n    if (this.getTech().hls_) {\n      return this.getTech().hls_.url // hlsjs\n    } else {\n      return this.player.currentSrc()\n    }\n  },\n\n  getTitle: function () {\n    if (this.player.mediainfo && this.player.mediainfo.name) {\n      return this.player.mediainfo.name // brightcove\n    }\n  },\n\n  getThroughput: function () {\n    if (this.getTech().hls && this.getTech().hls.bandwidth) {\n      return this.getTech().hls.bandwidth // hlsjs\n    }\n  },\n\n  getBitrate: function () {\n    if (this.getTech().hls) { // contrib hls\n      return this.getTech().hls.playlists.media().attributes.BANDWIDTH\n    } else if (this.getTech().hls_) { // hlsjs\n      return this.getTech().hls_.levels[this.getTech().hls_.currentLevel].bitrate\n    }\n  },\n\n  getRendition: function () {\n    if (this.getTech().hls) { // contrib hls\n      var att = this.getTech().hls.playlists.media().attributes\n      if (att.NAME) {\n        return att.NAME\n      } else {\n        return youbora.Utils.buildRenditionString(\n          att.RESOLUTION.width,\n          att.RESOLUTION.height,\n          att.BANDWIDTH\n        )\n      }\n    } else if (this.getTech().hls_) { // hlsjs\n      var level = this.getTech().hls_.levels[this.getTech().hls_.currentLevel]\n      if (level.name) {\n        return level.name\n      } else {\n        return youbora.Utils.buildRenditionString(level.width, level.height, level.bitrate)\n      }\n    }\n  },\n\n  getPlayerName: function () {\n    var name = 'videojs5'\n    if (this.getTech().hls) name += '-hls' // hls-contrib\n    if (this.getTech().hls_) name += '-hlsjs' // hlsjs\n    if (this.player.mediainfo) name += '-bcove' // brightcove\n    if (this.player.ima || this.player.ima3) name += '-ima' // ima3\n    if (this.player.FreeWheelPlugin) name += '-fw' // freewheel\n    if (this.player.onceux) this.pluginName += '-oux' // OnceUX\n    return name\n  },\n\n  getPlayerVersion: function () {\n    var ver = this.getPlayerName()\n    if (videojs.VERSION) ver += ' ' + videojs.VERSION\n    return ver\n  },\n\n  getTech: function () {\n    // NOTE: Videojs discourages accessing techs from plugins because they want\n    // devs to develop tech-agnostic plugins. I don't think this applies to us,\n    // as we need to retrieve info from each different tech.\n    // https://github.com/videojs/video.js/issues/2617\n    return this.player.tech({ IWillNotUseThisInPlugins: true })\n  },\n\n  registerListeners: function () {\n    // Prints all events if debug is enabled\n    youbora.Util.listenAllEvents(this.player, [\n      'adstart', 'adend', 'adskip', 'adsready', 'adserror', 'dispose'])\n\n    // Enable playhead monitor\n    this.monitorPlayhead(true, false)\n\n    // Register listeners\n    this.player.on('loadstart', this.loadstartListener.bind(this))\n    this.player.on('play', this.playListener.bind(this))\n    this.player.on('timeupdate', this.timeupdateListener.bind(this))\n    this.player.on('pause', this.pauseListener.bind(this))\n    this.player.on('playing', this.playingListener.bind(this))\n    this.player.on('abort', this.abortListener.bind(this))\n    this.player.on('ended', this.endedListener.bind(this))\n    this.player.on('dispose', this.disposeListener.bind(this))\n    this.player.on('seeking', this.seekingListener.bind(this))\n    this.player.on('seeked', this.seekedListener.bind(this))\n    this.player.on('error', this.errorListener.bind(this))\n    // this.player.on('adstart', this.adstartListener.bind(this))\n    // this.player.on('adend', this.adendListener.bind(this))\n    // this.player.on('adskip', this.adskipListener.bind(this))\n  },\n\n  loadstartListener: function (e) {\n    youbora.Log.notice('Player detected ' + this.getPlayerName())\n    if (this.player.autoplay()) this.fireStart()\n  },\n\n  playListener: function (e) {\n    this.fireStart()\n  },\n\n  timeupdateListener: function (e) {\n    if (this.getPlayhead() > 0.1) {\n      this.fireJoin()\n\n      // Send seek end\n      if (this.lastSeekPlayhead && this.lastSeekPlayhead !== this.getPlayhead()) {\n        this.fireSeekEnd()\n        this.lastSeekPlayhead = false\n      }\n    }\n  },\n\n  pauseListener: function (e) {\n    this.firePause()\n  },\n\n  playingListener: function (e) {\n    this.fireResume()\n  },\n\n  abortListener: function (e) {\n    this.fireStop()\n  },\n\n  endedListener: function (e) {\n    this.fireStop()\n  },\n\n  disposeListener: function (e) {\n    this.fireStop()\n  },\n\n  seekingListener: function (e) {\n    this.fireSeekBegin()\n  },\n\n  seekedListener: function (e) {\n    // We save the playhead after the seek, we will send the seeked in the next timeupdate\n    this.lastSeekPlayhead = this.getPlayhead()\n  },\n\n  errorListener: function (e) {\n    if (this.player.error && this.player.error()) {\n      this.fireError(this.player.error().code, this.player.error().message)\n    }\n  },\n\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n\n    // unregister listeners\n    this.player.off('loadstart', this.loadstartListener)\n    this.player.off('play', this.playListener)\n    this.player.off('playing', this.playingListener)\n    this.player.off('pause', this.pauseListener)\n    this.player.off('abort', this.abortListener)\n    this.player.off('ended', this.endedListener)\n    this.player.off('dispose', this.disposeListener)\n    this.player.off('seeking', this.seekingListener)\n    this.player.off('seeked', this.seekedListener)\n    this.player.off('timeupdate', this.timeupdateListener)\n    this.player.off('error', this.errorListener)\n    this.player.off('adstart', this.adstartListener)\n    this.player.off('adend', this.adendListener)\n    this.player.off('adskip', this.adskipListener)\n  }\n})\n\nmodule.exports = youbora.adapters.Videojs5\n","var youbora = require('youboralib')\nrequire('./adapter')\n\nmodule.exports = youbora\n"]}
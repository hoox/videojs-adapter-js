{"version":3,"sources":["node_modules/browser-pack/_prelude.js","manifest.json","node_modules/youboralib/manifest.json","node_modules/youboralib/src/adapter/adapter.js","node_modules/youboralib/src/adapter/playbackchronos.js","node_modules/youboralib/src/adapter/playbackflags.js","node_modules/youboralib/src/adapter/playheadmonitor.js","node_modules/youboralib/src/chrono.js","node_modules/youboralib/src/comm/communication.js","node_modules/youboralib/src/comm/request.js","node_modules/youboralib/src/comm/transform/cdnparser.js","node_modules/youboralib/src/comm/transform/flow.js","node_modules/youboralib/src/comm/transform/hlsparser.js","node_modules/youboralib/src/comm/transform/nqs6.js","node_modules/youboralib/src/comm/transform/resource.js","node_modules/youboralib/src/comm/transform/transform.js","node_modules/youboralib/src/comm/transform/view.js","node_modules/youboralib/src/emitter.js","node_modules/youboralib/src/log.js","node_modules/youboralib/src/object.js","node_modules/youboralib/src/plugin/options.js","node_modules/youboralib/src/plugin/plugin.js","node_modules/youboralib/src/plugin/requestbuilder.js","node_modules/youboralib/src/polyfills.js","node_modules/youboralib/src/timer.js","node_modules/youboralib/src/util.js","node_modules/youboralib/src/version.js","node_modules/youboralib/src/youboralib.js","src/adapter.js","src/ads/brightcove.js","src/ads/generic.js","src/ads/ima.js","src/ads/onceux.js","src/register-plugin.js","src/sp.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","youbora","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","name","type","tech","author","version","built","features","buffer","seek","getters","libVersion","Emitter","Log","PlaybackChronos","PlaybackFlags","PlayheadMonitor","Adapter","extend","constructor","player","flags","chronos","monitor","plugin","document","getElementById","tag","registerListeners","notice","getVersion","emit","Event","READY","unregisterListeners","dispose","stop","fireStop","monitorPlayhead","monitorBuffers","monitorSeeks","interval","Type","BUFFER","SEEK","getPlayhead","getPlayrate","isPaused","getFramesPerSecond","getDroppedFrames","getDuration","getBitrate","getThroughput","getRendition","getTitle","getTitle2","getIsLive","getResource","getPlayerVersion","getPlayerName","getPosition","fireStart","params","isStarted","total","start","join","START","fireJoin","isJoined","JOIN","firePause","pause","PAUSE","fireResume","skipNextTick","RESUME","fireBufferBegin","convertFromSeek","isBuffering","isSeeking","clone","reset","BUFFER_BEGIN","fireBufferEnd","BUFFER_END","fireSeekBegin","convertFromBuffer","SEEK_BEGIN","fireSeekEnd","SEEK_END","STOP","fireError","msg","metadata","level","errorCode","errorMsg","errorMetadata","errorLevel","ERROR","fireFatalError","FATAL_ERROR","YouboraObject","Chrono","Timer","adapter","_adapter","_seekEnabled","_bufferEnabled","_interval","_chrono","_lastPlayhead","_timer","progress","bind","deltaTime","bufferThreshold","kBUFFER_THRESHOLD_RATIO","seekThreshold","kSEEK_THRESHOLD_RATIO","currentPlayhead","_getPlayhead","diffPlayhead","Math","abs","NONE","startTime","stopTime","offset","getDeltaTime","now","Date","getTime","chrono","YBRequest","Transform","Communication","transforms","_requests","sendRequest","request","callback","on","SUCCESS","_registerRequest","buildRequest","host","service","addTransform","transform","parse","isBlocking","push","DONE","_processRequests","warn","removeTransform","pos","indexOf","splice","workingQueue","rejected","shift","_transform","send","ret","forEach","options","xhr","createXHR","Object","assign","method","requestHeaders","maxRetries","retryAfter","cache","retries","setParam","XMLHttpRequest","ActiveXObject","err","error","getXHR","getUrl","getParamString","event","addEventListener","off","removeEventListener","key","param","encodeURIComponent","JSON","stringify","slice","getParam","value","open","hasOwnProperty","setRequestHeader","genericError","setTimeout","logLevel","Level","VERBOSE","verbose","_globalListeners","LOAD","ABORT","onEvery","offEvery","index","CdnParser","_options","cdnName","parsers","parseType","_responses","done","addParser","parser","setCdnName","setParseType","getCdnName","_cdnName","getNodeHost","_cdnNodeHost","getNodeTypeString","_cdnNodeTypeString","getNodeType","_cdnNodeType","getResponses","url","responses","headerString","_parseResponse","_requestResponse","resp","getAllResponseHeaders","headers","split","line","headerName","_executeParser","matches","regex","exec","trim","element","toUpperCase","_cdns","Level3","X-WR-DIAG","Cloudfront","Akamai","Highwinds","Fastly","Balancer","setBalancerHeaderName","create","add","FlowTransform","_services","_isBusy","prototype","apply","arguments","HlsParser","_realResource","resource","parentResource","res","lastIndexOf","responseText","Nqs6Transform","_cloneParam","entities","entityType","entityValue","from","to","ResourceTransform","__super__","_plugin","_initResource","init","_cdnNameHeader","_hlsEnabled","isParseHls","_cdnEnabled","isParseCdnNode","_cdnList","getParseCdnNodeList","getParseCdnNodeNameHeader","_setTimeout","_parseHLS","_parseCDN","_parseTimeout","hlsTransform","_hlsTransform","cdn","pop","cdnParser","lastSent","requestBuilder","mediaResource","nodeHost","nodeType","nodeTypeString","Util","ViewTransform","response","_viewIndex","apiVersion","outputformat","buildParams","system","_request","getHost","_receiveData","_failedData","req","addProtocol","q","h","c","pingTime","pt","nextView","getViewCode","_listeners","data","Array","isArray","_eachCallback","target","_emitter","SILENT","WARNING","NOTICE","DEBUG","LOG","plainLogs","report","color","console","log","letters","5","4","3","2","letter","prefix","_getCurrentTime","documentMode","_plainReport","logMethod","debug","d","hh","getDate","mm","getMinutes","ss","getSeconds","mmm","getMilliseconds","m","loadLevelFromUrl","location","search","m2","protoProps","staticProps","parent","NewClass","enumerable","writable","configurable","Options","setOptions","base","RequestBuilder","Plugin","isInitiated","isPreloading","preloadChrono","initChrono","_adsAdapter","_ping","_sendPing","resourceTransform","viewTransform","setAdapter","_reset","_stopPings","removeAdapter","_startListener","_joinListener","_pauseListener","_resumeListener","_seekBeginListener","_seekEndListener","_bufferBeginListener","_bufferEndListener","_errorListener","_stopListener","getAdapter","setAdsAdapter","adsAdapter","removeAdsAdapter","_adStartListener","_adJoinListener","_adPauseListener","_adResumeListener","_adBufferBeginListener","_adBufferEndListener","_adStopListener","getAdsAdapter","disable","enabled","enable","_send","willSendEvent","_initComm","_comm","firePreloadBegin","firePreloadEnd","fireInit","_startPings","WILL_SEND_INIT","Service","INIT","title","WILL_SEND_START","WILL_SEND_JOIN","joinDuration","WILL_SEND_PAUSE","playhead","WILL_SEND_RESUME","pauseDuration","WILL_SEND_SEEK","seekDuration","WILL_SEND_BUFFER","bufferDuration","WILL_SEND_ERROR","WILL_SEND_STOP","adNumber","getNewAdNumber","WILL_SEND_AD_START","AD_START","adPosition","WILL_SEND_AD_JOIN","AD_JOIN","adJoinDuration","WILL_SEND_AD_PAUSE","AD_PAUSE","adPlayhead","WILL_SEND_AD_RESUME","AD_RESUME","adPauseDuration","WILL_SEND_AD_BUFFER","AD_BUFFER","adBufferDuration","min","WILL_SEND_AD_STOP","AD_STOP","adTotalDuration","isRunning","diffTime","getChangedEntities","fetchParams","WILL_SEND_PING","PING","stripProtocol","parseNumber","getWebkitDroppedFrames","webkitDroppedFrameCount","round","getWebkitBitrate","webkitVideoDecodedByteCount","bitrate","_lastWebkitBitrate","delta","getOriginalResource","getTransactionCode","getMetadata","getCdn","getPluginVersion","getAdapterVersion","getExtraparam1","getExtraparam2","getExtraparam3","getExtraparam4","getExtraparam5","getExtraparam6","getExtraparam7","getExtraparam8","getExtraparam9","getExtraparam10","getAdPlayerVersion","getAdPosition","getAdPlayhead","getAdDuration","getAdBitrate","getWebkitAdBitrate","_lastWebkitAdBitrate","getAdTitle","getAdResource","getAdAdapterVersion","getAdMetadata","getPluginInfo","lib","adAdapter","getIp","getIsp","getConnectionType","getDeviceCode","getAccountCode","getUsername","getReferer","href","getPreloadDuration","getInitDuration","getJoinDuration","getBufferDuration","getSeekDuration","getPauseDuration","getAdJoinDuration","getAdBufferDuration","getAdPauseDuration","getAdTotalDuration","DATA","WILL_SEND_FATAL_ERROR","startParams","_adNumber","paramList","onlyDifferent","getterName","differentParams","/data","/init","/start","/joinTime","/pause","/resume","/seek","/bufferUnderrun","/error","concat","/stop","/adStart","/adJoin","/adPause","/adResume","/adBufferUnerrun","/adStop","/ping","/join","playrate","fps","droppedFrames","mediaDuration","throughput","rendition","title2","live","transactionCode","properties","playerVersion","pluginVersion","param1","param2","param3","param4","param5","param6","param7","param8","param9","param10","adDuration","adBitrate","adTitle","adResource","adPlayerVersion","adProperties","adAdapterVersion","pluginInfo","isp","connectionType","ip","deviceCode","accountCode","username","preloadDuration","referer","applyPolyfills","Function","b","TypeError","C","undefined","output","source","nextKey","Temp","propertiesObject","result","defineProperties","thisArg","len","obj","toString","_setTick","clearTimeout","replace","httpSecure","protocol","def","isNaN","Infinity","logAllEvents","extraEvents","playerEvents","buildRenditionString","width","height","previousYoubora","noConflict","VERSION","polyfills","Request","adapters","manifest","Videojs5","ads","snapshot","currentTime","absoluteTime","mediainfo","duration","getTech","hls_","currentSrc","hls","bandwidth","media","playlists","attributes","BANDWIDTH","levels","currentLevel","att","NAME","RESOLUTION","ima","ima3","FreeWheelPlugin","onceux","pluginName","ver","videojs","IWillNotUseThisInPlugins","loadstartListener","adsreadyListener","playListener","timeupdateListener","pauseListener","playingListener","abortListener","endedListener","disposeListener","seekingListener","seekedListener","errorListener","autoplay","loadAdsAdapter","lastSeekPlayhead","message","google","BrightcoveAdsAdapter","ImaAdsAdapter","OnceUXAdsAdapter","GenericAdsAdapter","adPlayer","imaStartedListener","imaPausedListener","imaResumedListener","imaCompleteListener","imaSkippedListener","skipped","adStartListener","adEndListener","adSkipListener","getAdsManager","getCurrentAd","getRemainingTime","AdEvent","ALL_ADS_COMPLETED","LINEAR_CHANGED","USER_CLOSE","COMPLETE","IMPRESSION","CONTENT_PAUSE_REQUESTED","CONTENT_RESUME_REQUESTED","SKIPPED","SKIPPABLE_STATE_CHANGED","LOADED","PAUSED","RESUMED","STARTED","AD_CAN_PLAY","AD_METADATA","EXPANDED_CHANGED","AD_BREAK_READY","loadedListener","contentPauseRequestedListener","startedListener","pausedListener","resumedListener","completeListener","skippedListener","contentSrc","youboraplugin","VideoJS5"],"mappings":"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","file":"sp.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\n  \"name\": \"videojs5\",\n  \"type\": \"adapter\",\n  \"tech\": \"js\",\n  \"author\": \"Jordi Aguilar\",\n  \"version\": \"6.0.0-rc\",\n  \"built\": \"Tue Jan 10 2017\",\n  \"features\": {\n    \"buffer\": \"monitor\",\n    \"seek\": \"native\",\n    \"getters\": [\n      \"getPlayhead\",\n      \"getDuration\",\n      \"getBitrate\",\n      \"getThroughput\",\n      \"getRendition\",\n      \"getTitle\",\n      \"getResource\"\n    ]\n  },\n  \"libVersion\": \"6.0.0-rc\"\n}","module.exports={\n  \"type\": \"core\",\n  \"tech\": \"js\",\n  \"author\": \"Jordi Aguilar\",\n  \"version\": \"6.0.0-rc\",\n  \"built\": \"Mon Jan 09 2017\"\n}","var Emitter = require('../emitter')\nvar Log = require('../log')\nvar version = require('../version')\nvar PlaybackChronos = require('./playbackchronos')\nvar PlaybackFlags = require('./playbackflags')\nvar PlayheadMonitor = require('./playheadmonitor')\n\nvar Adapter = Emitter.extend(\n  /** @lends Adapter.prototype */\n  {\n    /**\n     * This class is the basic adapter from which specific adapters will extend.\n     * It receives a player: If it is an object, it will be saved as this.player.\n     * It it is a string, it will be saved as this.player = document.getElementById(...)\n     * Will call registerListeners()\n     *\n     * @constructs Adapter\n     * @extends Emitter\n     * @memberof youbora\n     *\n     * @param {object|string} player Either an instance of the player or a string containing an ID.\n     */\n    constructor: function (player) {\n      /** An instance of {@link FlagStatus} */\n      this.flags = new PlaybackFlags()\n\n      /** An instance of {@link ChronoStatus} */\n      this.chronos = new PlaybackChronos()\n\n      /** Reference to {@link PlayheadMonitor}. Helps the plugin detect buffers/seeks. */\n      this.monitor = null\n\n      /** Reference to {@link Plugin}. */\n      this.plugin = null\n\n      /** Reference to the player tag */\n      this.player = null\n      if (typeof player === 'string') {\n        this.player = document.getElementById(player)\n      } else {\n        this.player = player\n      }\n\n      /** Reference to the video/object tag, could be the same as the player. */\n      this.tag = this.player\n\n      this.registerListeners()\n\n      Log.notice('Adapter ' + this.getVersion() + ' with Lib ' + version + ' is ready.')\n\n      this.emit(Adapter.Event.READY)\n    },\n\n    /**\n     * Override to create event binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.addEventListener('start', this.onStart.bind(this))\n     * },\n     * onStart: function (e) {\n     *  this.emit('start')\n     * }\n     */\n    registerListeners: function () { },\n\n    /**\n     * Override to create event de-binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.removeEventListener('start', this.onStart)\n     * }\n     */\n    unregisterListeners: function () { },\n\n    /**\n     * This function disposes the currend adapter, removes player listeners and drops references.\n     */\n    dispose: function () {\n      if (this.monitor) this.monitor.stop()\n      this.fireStop()\n      this.unregisterListeners()\n      this.player = null\n      this.tag = null\n    },\n\n    /**\n     * Creates a {@link PlayheadMonitor} at this.monitor.\n     *\n     * @param {bool} monitorBuffers If true, it will monitor buffers.\n     * @param {bool} monitorSeeks If true, it will monitor seeks.\n     * @param {number} [interval=800] The interval time in ms.\n     */\n    monitorPlayhead: function (monitorBuffers, monitorSeeks, interval) {\n      var type = 0\n      if (monitorBuffers) type |= PlayheadMonitor.Type.BUFFER\n      if (monitorSeeks) type |= PlayheadMonitor.Type.SEEK\n\n      this.monitor = new PlayheadMonitor(this, type, interval)\n    },\n\n    // GETTERS //\n\n    /** Override to return current playhead of the video */\n    getPlayhead: function () {\n      return null\n    },\n\n    /** Override to return current playrate */\n    getPlayrate: function () {\n      return !this.flags.isPaused ? 1 : 0\n    },\n\n    /** Override to return Frames Per Secon (FPS) */\n    getFramesPerSecond: function () {\n      return null\n    },\n\n    /** Override to return dropped frames since start */\n    getDroppedFrames: function () {\n      return null\n    },\n\n    /** Override to return video duration */\n    getDuration: function () {\n      return null\n    },\n\n    /** Override to return current bitrate */\n    getBitrate: function () {\n      return null\n    },\n\n    /** Override to return user bandwidth throughput */\n    getThroughput: function () {\n      return null\n    },\n\n    /** Override to return rendition */\n    getRendition: function () {\n      return null\n    },\n\n    /** Override to return title */\n    getTitle: function () {\n      return null\n    },\n\n    /** Override to return title2 */\n    getTitle2: function () {\n      return null\n    },\n\n    /** Override to recurn true if live and false if VOD */\n    getIsLive: function () {\n      return null\n    },\n\n    /** Override to return resource URL. */\n    getResource: function () {\n      return null\n    },\n\n    /** Override to return player version */\n    getPlayerVersion: function () {\n      return null\n    },\n\n    /** Override to return player's name */\n    getPlayerName: function () {\n      return null\n    },\n\n    /** Override to return adapter version. */\n    getVersion: function () {\n      return version + '-generic-js'\n    },\n\n    /** Override to return current ad position (only ads) */\n    getPosition: function () {\n      return null\n    },\n\n    // FLOW //\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireStart: function (params) {\n      if (!this.flags.isStarted) {\n        this.flags.isStarted = true\n\n        this.chronos.total.start()\n        this.chronos.join.start()\n\n        this.emit(Adapter.Event.START, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireJoin: function (params) {\n      if (this.flags.isStarted && !this.flags.isJoined) {\n        if (this.monitor) this.monitor.start()\n\n        this.flags.isJoined = true\n\n        this.chronos.join.stop()\n\n        this.emit(Adapter.Event.JOIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    firePause: function (params) {\n      if (this.flags.isJoined && !this.flags.isPaused) {\n        this.flags.isPaused = true\n\n        this.chronos.pause.start()\n\n        this.emit(Adapter.Event.PAUSE, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireResume: function (params) {\n      if (this.flags.isJoined && this.flags.isPaused) {\n        this.flags.isPaused = false\n\n        this.chronos.pause.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.RESUME, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     * @param {bool} [convertFromSeek=false] If true, will convert current seek to buffer.\n     */\n    fireBufferBegin: function (params, convertFromSeek) {\n      if (this.flags.isJoined && !this.flags.isBuffering) {\n        if (convertFromSeek && this.flags.isSeeking) {\n          Log.notice('Converting current buffer to seek')\n\n          this.chronos.buffer = this.chronos.seek.clone()\n          this.chronos.seek.reset()\n\n          this.flags.isSeeking = false\n        } else {\n          this.chronos.buffer.start()\n        }\n        this.flags.isBuffering = true\n\n        this.emit(Adapter.Event.BUFFER_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireBufferEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isBuffering) {\n        this.flags.isBuffering = false\n\n        this.chronos.buffer.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.BUFFER_END, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     * @param {bool} [convertFromBuffer=true] If false, will convert current buffer to seek.\n     */\n    fireSeekBegin: function (params, convertFromBuffer) {\n      if (this.flags.isJoined && !this.flags.isSeeking) {\n        if (convertFromBuffer !== false && this.flags.isBuffering) {\n          Log.notice('Converting current buffer to seek')\n\n          this.chronos.seek = this.chronos.buffer.clone()\n          this.chronos.buffer.reset()\n\n          this.flags.isBuffering = false\n        } else {\n          this.chronos.seek.start()\n        }\n\n        this.flags.isSeeking = true\n\n        this.emit(Adapter.Event.SEEK_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireSeekEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isSeeking) {\n        this.flags.isSeeking = false\n\n        this.chronos.seek.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.SEEK_END, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireStop: function (params) {\n      if (this.flags.isStarted) {\n        if (this.monitor) this.monitor.stop()\n\n        this.flags.reset()\n\n        this.chronos.total.stop()\n        this.chronos.join.reset()\n        this.chronos.pause.reset()\n        this.chronos.buffer.reset()\n        this.chronos.seek.reset()\n\n        this.emit(Adapter.Event.STOP, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n     */\n    fireError: function (code, msg, metadata, level) {\n      var params = {}\n      if (typeof code === 'object') {\n        params = code\n      } else {\n        params.errorCode = code || 'PLAY_FAILURE'\n        params.errorMsg = msg || params.errorCode\n        params.errorMetadata = metadata\n        params.errorLevel = level || 'error'\n      }\n\n      this.emit(Adapter.Event.ERROR, { params: params })\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     */\n    fireFatalError: function (code, msg, metadata) {\n      if (this.monitor) this.monitor.stop()\n\n      this.fireError(code, msg, metadata, 'fatal')\n      this.fireStop()\n    }\n  },\n\n  /** @lend Adapter */\n  {\n    // Static Memebers //\n\n    /**\n     * List of events that could be fired\n     * @enum\n     */\n    Event: {\n      READY: 'ready',\n\n      START: 'start',\n      JOIN: 'join',\n      PAUSE: 'pause',\n      RESUME: 'resume',\n      SEEK_BEGIN: 'seek-begin',\n      SEEK_END: 'seek-end',\n      BUFFER_BEGIN: 'buffer-begin',\n      BUFFER_END: 'buffer-end',\n      ERROR: 'error',\n      FATAL_ERROR: 'fatal-error',\n      STOP: 'stop'\n    }\n  }\n)\n\nmodule.exports = Adapter\n","var YouboraObject = require('../object')\nvar Chrono = require('../chrono')\n\nvar PlaybackChronos = YouboraObject.extend(\n  /** @lends PlaybackChronos.prototype */\n  {\n    /**\n     * This class contains all the {@link Chrono}s related to view status.\n     * Chronos measure time lapses between events.\n     * ie: between start and join, between seek-begin and seek-end, etc.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackChronos\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Chrono between start and joinTime. */\n      this.join = new Chrono()\n\n      /** Chrono between seek-begin and seek-end. */\n      this.seek = new Chrono()\n\n      /** Chrono between pause and resume. */\n      this.pause = new Chrono()\n\n      /** Chrono between buffer-begin and buffer-end. */\n      this.buffer = new Chrono()\n\n      /** Chrono for the totality of the view. */\n      this.total = new Chrono()\n    }\n  }\n)\n\nmodule.exports = PlaybackChronos\n","var YouboraObject = require('../object')\n\nvar PlaybackFlags = YouboraObject.extend(\n  /** @lends PlaybackFlags.prototype */\n  {\n    /**\n     * This class contains all the flags related to view status.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackFlags\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Flag when Start has been sent. */\n      this.isStarted = false\n\n      /** Flag when Join has been sent. */\n      this.isJoined = false\n\n      /** Flag when Player is paused. */\n      this.isPaused = false\n\n      /** Flag when Player is seeking. */\n      this.isSeeking = false\n\n      /** Flag when Player is buffering. */\n      this.isBuffering = false\n    }\n  }\n)\n\nmodule.exports = PlaybackFlags\n","var YouboraObject = require('../object')\nvar Timer = require('../timer')\nvar Chrono = require('../chrono')\n// var Log = require('../log')\n\nvar PlayheadMonitor = YouboraObject.extend(\n  /** @lends PlayheadMonitor.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     *\n     * @constructs PlayheadMonitor\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {Adapter} adapter Adapter to monitor. Must have getPlayhead defined.\n     * @param {PlayheadMonitor.Type} [type=NONE]\n     * Which metric to monitor seek and/or buffer.\n     * Use bitwise operators to join both values (Type.BUFFER | Type.SEEK)\n     * @param {int} [interval=800] How many ms will wait between progress. -1 to disable.\n     */\n    constructor: function (adapter, type, interval) {\n      this._adapter = adapter\n      this._seekEnabled = type & PlayheadMonitor.Type.SEEK\n      this._bufferEnabled = type & PlayheadMonitor.Type.BUFFER\n      this._interval = interval || 800\n\n      this._chrono = new Chrono()\n      this._lastPlayhead = 0\n\n      if (this._interval > 0) {\n        this._timer = new Timer(this.progress.bind(this), this._interval)\n      }\n    },\n\n    /**\n     * Start interval checks.\n     */\n    start: function () {\n      this._timer.start()\n    },\n\n    /**\n     * Stop interval checks.\n     */\n    stop: function () {\n      if (this._timer) this._timer.stop()\n    },\n\n    skipNextTick: function () {\n      this._lastPlayhead = 0\n    },\n\n    /**\n     * Call this method at every tick of timeupdate/progress.\n     * If you defined an interval, do not fire this method manually.\n     */\n    progress: function () {\n      // Reset timer\n      var deltaTime = this._chrono.stop()\n      this._chrono.start()\n\n      // Define thresholds\n      var bufferThreshold = deltaTime * PlayheadMonitor.kBUFFER_THRESHOLD_RATIO\n      var seekThreshold = deltaTime * PlayheadMonitor.kSEEK_THRESHOLD_RATIO\n\n      // Calculate diff playhead\n      var currentPlayhead = this._getPlayhead()\n      var diffPlayhead = Math.abs(this._lastPlayhead - currentPlayhead) * 1000\n\n      // Log.debug('curr: ' + currentPlayhead +\n      //   ' last: ' + this._lastPlayhead +\n      //   ' diff: ' + diffPlayhead)\n\n      if (diffPlayhead < bufferThreshold) {\n        // Playhead is stalling > buffer\n        if (this._bufferEnabled &&\n          this._lastPlayhead > 0 &&\n          !this._adapter.flags.isPaused &&\n          !this._adapter.flags.isSeeking\n        ) {\n          this._adapter.fireBufferBegin(null, false)\n        }\n      } else if (diffPlayhead > seekThreshold) {\n        // Playhead has jumped > seek\n        if (this._seekEnabled && this._lastPlayhead > 0) {\n          this._adapter.fireSeekBegin(null, false)\n        }\n      } else {\n        // Healthy\n        if (this._seekEnabled) {\n          this._adapter.fireSeekEnd()\n        } else if (\n          this._bufferEnabled) {\n          this._adapter.fireBufferEnd()\n        }\n      }\n\n      // Update Playhead\n      this._lastPlayhead = currentPlayhead\n    },\n    /**\n     * Returns adapter's playhead. Override to add a custom playhead getter.\n     * @private\n     * @returns {double} Playhead in seconds\n     */\n    _getPlayhead: function () {\n      return this._adapter.getPlayhead()\n    }\n  }, {\n    // Static methods\n\n    /**\n     * Enum for monitoring type\n     * @enum\n     */\n    Type: {\n      /** Would not monitor */\n      NONE: 0,\n      /** Sends buffer-begin/end */\n      BUFFER: 1,\n      /** Sends seek-begin/end */\n      SEEK: 2\n    },\n\n    /** Buffer threshold */\n    kBUFFER_THRESHOLD_RATIO: 0.5,\n\n    /** Seek threshold */\n    kSEEK_THRESHOLD_RATIO: 2\n  })\n\nmodule.exports = PlayheadMonitor\n","var YouboraObject = require('./object')\n\nvar Chrono = YouboraObject.extend(\n  /** @lends Chrono.prototype */\n  {\n    /**\n     * This class calculates time lapses between two points.\n     *\n     * @constructs Chrono\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset chrono values. */\n    reset: function () {\n      /** Start time */\n      this.startTime = 0\n\n      /** Stop time */\n      this.stopTime = 0\n\n      /** Offset to be added to deltaTime and stop. in ms. */\n      this.offset = 0\n    },\n\n    /**\n     * Returns the time between start() and the last stop() in ms. Returns -1 if start wasn't\n     * called.\n     * @param {boolean} [stop=true] If true, it will force a stop() if it wasn't called before.\n     * @return {number} Time lapse in ms.\n     */\n    getDeltaTime: function (stop) {\n      var now = new Date().getTime()\n      if (this.startTime) {\n        if (stop && !this.stopTime) { this.stopTime = now }\n        return this.offset + (now - this.startTime)\n      } else {\n        return -1\n      }\n    },\n\n    /**\n     * Starts the chrono.\n     */\n    start: function () {\n      this.startTime = new Date().getTime()\n      this.stopTime = 0\n    },\n\n    /**\n     * Stops the timer and returns current delta time.\n     * @return {number} Returns the delta time\n     */\n    stop: function () {\n      this.stopTime = new Date().getTime()\n      return this.startTime ? this.offset + (this.stopTime - this.startTime) : -1\n    },\n\n    /**\n     * Creates a copy of the chrono.\n     */\n    clone: function () {\n      var chrono = new Chrono()\n      chrono.startTime = this.startTime\n      chrono.stopTime = this.stopTime\n      chrono.offset = this.offset\n      return chrono\n    }\n  }\n)\n\nmodule.exports = Chrono\n","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar YBRequest = require('./request')\nvar Transform = require('./transform/transform')\n\nvar Communication = YouboraObject.extend(\n  /** @lends Communication.prototype */\n  {\n    /**\n     * Youbora Communication implements an abstraction layer over API requests.\n     * Internally, Communication implements queues of {@link Request} objects.\n     * This queue can be blocked using {@link Transform}\n     *\n     * @constructs Communication\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {string} host The fastdata host address.\n     * @param {boolean} httpSecure True for https, false for http, undefined for //.\n     */\n    constructor: function () {\n      /** Array of {@link Transform}, only when the array is empty the request Queues will begin sending. */\n      this.transforms = []\n\n      /**\n       * Queue of {@link YBRequest}\n       * @private\n       */\n      this._requests = []\n    },\n\n    /**\n     * Enqueues the request provided.\n     *\n     * @param {YBRequest} request Request to be enqueued\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    sendRequest: function (request, callback) {\n      if (request) {\n        if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n        this._registerRequest(request)\n      }\n    },\n\n    /**\n     * Build a generic request to the given host.\n     *\n     * @param {string} host Host of the service called.\n     * @param {string} service A string with the service to be called. ie: '/data', '/joinTime'...\n     * @param {Object} [params] Object of key:value params.\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    buildRequest: function (host, service, params, callback) {\n      params = params || {}\n      var request = new YBRequest(host, service, params)\n      if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n      this._registerRequest(request)\n    },\n\n    /**\n     * Adds a Transform to the queue. See {@link Transform}.\n     *\n     * @param {RequestTransform} transform\n     */\n    addTransform: function (transform) {\n      if (transform.parse && transform.isBlocking) {\n        this.transforms.push(transform)\n        transform.on(Transform.Event.DONE, this._processRequests.bind(this))\n      } else {\n        Log.warn(transform + ' is not a valid RequestTransform.')\n      }\n    },\n\n    /**\n     * Removes a {@link Transform}.\n     *\n     * @param {RequestTransform} transform Transform object to remove.\n     */\n    removeTransform: function (transform) {\n      var pos = this.transforms.indexOf(transform)\n      if (pos !== -1) {\n        this.transforms.splice(pos, 1)\n      } else {\n        Log.warn('Trying to remove unexisting Transform \\'' + transform + '\\'.')\n      }\n    },\n\n    /**\n     * Adds an {@link YBRequest} to the queue of requests.\n     *\n     * @private\n     * @param {YBRequest} request The Request to be queued.\n     */\n    _registerRequest: function (request) {\n      this._requests.push(request)\n      this._processRequests()\n    },\n\n    /**\n     * Execute pending requests in the queue. Returns rejected ones to the queue.\n     * @private\n     */\n    _processRequests: function () {\n      var workingQueue = this._requests\n      this._requests = []\n\n      var rejected = []\n      while (workingQueue.length) {\n        var request = workingQueue.shift()\n        if (this._transform(request)) {\n          request.send()\n        } else {\n          rejected.push(request)\n        }\n      }\n\n      while (rejected.length) {\n        this._requests.push(rejected.shift())\n      }\n    },\n\n    /**\n     * Pass the given request to each transform.\n     * @private\n     * @returns {bool} True if everything is right. False if some parser rejected it.\n     */\n    _transform: function (request) {\n      var ret = true\n      this.transforms.forEach(function (transform) {\n        if (transform.isBlocking(request)) {\n          ret = false\n          return // break foreach loop\n        } else {\n          transform.parse(request)\n        }\n      })\n      return ret\n    }\n  })\n\nmodule.exports = Communication\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar YBRequest = YouboraObject.extend(\n  /** @lends YBRequest.prototype */\n  {\n    /**\n     * YBYBRequest class will wrap XmlHttpRequest and extend its functionality, allowing youbora\n     * to manage queues, blockers and retries.\n     *\n     * @constructs YBRequest\n     * @extends Object\n     * @memberof youbora\n     *\n     * @param {string} host URL of the request. ie: nqs.nice264.com\n     * @param {string} [service] Name of the service. ie '/start'\n     * @param {Object} [params] Object of key:value params.\n     * @param {Object} [options] Object with custom options.\n     * @param {string} [options.method=\"GET\"] Specifies the method of the request. ie: \"GET\", \"HEAD\".\n     * @param {string} [options.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [options.retryAfter=5000] Time in ms before sending a failed request again.\n     * 0 to disable.\n     * @param {number} [options.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [options.cache=false] If false, timestamp will be added to each request to\n     * prevent caching.\n     */\n    constructor: function (host, service, params, options) {\n      /** Instance of XmlHttpRequest (or the item returned by createXHR method). */\n      this.xhr = this.createXHR()\n\n      /** Host of the request */\n      this.host = host || ''\n\n      /** Service of the request */\n      this.service = service || ''\n\n      /** Object of params of the request */\n      this.params = params || {}\n\n      /** Options of the request */\n      this.options = Object.assign({\n        method: 'GET',\n        requestHeaders: {},\n        maxRetries: 3,\n        retryAfter: 5000,\n        cache: false\n      }, options)\n\n      /** Number of times this request has failed and retried. */\n      this.retries = 0\n\n      // Add timemark\n      if (!this.options.cache) {\n        this.setParam('timemark', new Date().getTime())\n      }\n    },\n\n    /**\n     * Creates XMLHttpRequest if it is available in the browser.\n     * If not, it tries to create an ActiveXObject XMLHTTP item.\n     * Override this function for custom environments.\n     *\n     * @return YBRequest handler.\n     */\n    createXHR: function () {\n      try {\n        if (XMLHttpRequest) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      } catch (err) {\n        Log.error(err)\n        return {}\n      }\n    },\n\n    /**\n     * Returns xhr object.\n     *\n     * @return {XmlHttpRequest} object.\n     */\n    getXHR: function () {\n      return this.xhr\n    },\n\n    /** Returns the complete formed url of the request url+service+params. */\n    getUrl: function () {\n      return this.host + this.service + this.getParamString()\n    },\n\n    /**\n     * Wraps this.getHXR.addEventListener.\n     * Accepts a callback that receives (this YBRequest, event)\n     */\n    on: function (event, callback) {\n      this.xhr.addEventListener(event, callback.bind(this, this))\n      return this\n    },\n\n    /** Wraps this.getHXR.removeEventListener */\n    off: function (event, callback) {\n      this.xhr.removeEventListener(event, callback)\n      return this\n    },\n\n    /**\n     * Returns the params of the request, stringified.\n     * ie: '?pluginVersion=5.1.0&systemCode=nicetv'.\n     * @return {string} Concatenated Params\n     */\n    getParamString: function () {\n      try {\n        var params = '?'\n        for (var key in this.params) {\n          var param = this.params[key]\n          if (param !== null && typeof param === 'object') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(JSON.stringify(param)) + '&'\n          } else if (param !== null && typeof param !== 'undefined' && param !== '') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(param) + '&'\n          }\n        }\n        return params.slice(0, -1)\n      } catch (err) {\n        Log.error(err)\n        return ''\n      }\n    },\n\n    /**\n     * Returns the value of the given param, or undefined.\n     * @param {string} key Name of the param.\n     * @return {any}\n     */\n    getParam: function (key) {\n      return this.params[key]\n    },\n\n    /**\n     * Add or set a parameter for the request.\n     * ie: if you want to add 'username=user' use setParam('username', 'user').\n     * @param {string} key Name of the param.\n     * @param {string} value Name of the param.\n     * @return this\n     */\n    setParam: function (key, value) {\n      this.params[key] = value\n      return this\n    },\n\n    /**\n     * Sends the request.\n     *\n     * @return returns xhr.send()\n     */\n    send: function () {\n      try {\n        this.xhr.open(this.options.method, this.getUrl(), true)\n\n        // Add custom headers\n        if (this.options.requestHeaders) {\n          for (var key in this.options.requestHeaders) {\n            if (this.options.requestHeaders.hasOwnProperty(key)) {\n              this.xhr.setRequestHeader(key, this.options.requestHeaders[key])\n            }\n          }\n        }\n\n        // Add retries system\n        if (this.options.retryAfter > 0 && this.options.maxRetries > 0) {\n          var genericError = function () {\n            if (this.retries >= this.options.maxRetries) {\n              Log.error('Aborting failed request \"' + this.service + '\". Max retries reached.')\n            } else {\n              Log.warn('YBRequest \"' + this.service + '\" failed. Retry ' + (this.retries + 1) + ' of ' +\n                this.options.maxRetries + ' in ' + this.options.retryAfter + 'ms.')\n\n              setTimeout(function () {\n                this.retries += 1\n                this.send()\n              }.bind(this), this.options.retryAfter)\n            }\n          }\n          if (this.retries === 0) {\n            this.on(YBRequest.Event.ERROR, genericError.bind(this))\n          }\n        }\n\n        // Log XHR\n        if (Log.logLevel <= Log.Level.VERBOSE) {\n          Log.verbose('XHR Req: ' + this.getUrl())\n        }\n\n        // Register 'on every' listeners\n        for (var event in YBRequest._globalListeners) {\n          YBRequest._globalListeners[event].forEach(function (callback) {\n            this.on(event, callback)\n          }.bind(this))\n        }\n\n        // Send\n        return this.xhr.send()\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  },\n\n  /** @lends YBRequest */\n  {\n    /**\n     * List of events that could be fired from XHR\n     * @enum\n     */\n    Event: {\n      /** Request successful */\n      SUCCESS: 'load',\n      /** Request successful */\n      LOAD: 'load', // Native JS\n      /** Request returned error */\n      ERROR: 'error',\n      /** Request aborted */\n      ABORT: 'abort'\n    },\n\n    /** @private */\n    _globalListeners: {},\n\n    /**\n     * Adds a callback to every instance.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    onEvery: function (event, callback) {\n      YBRequest._globalListeners[event] = YBRequest._globalListeners[event] || []\n      YBRequest._globalListeners[event].push(callback)\n    },\n\n    /**\n     * Removes a global callback\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    offEvery: function (event, callback) {\n      if (YBRequest._globalListeners[event]) {\n        var index = YBRequest._globalListeners[event].indexOf(callback)\n        if (index !== -1) {\n          YBRequest._globalListeners[event].splice(index, 1)\n        }\n      }\n    }\n  })\n\nmodule.exports = YBRequest\n","var Emitter = require('../../emitter')\nvar Log = require('../../log')\nvar YBRequest = require('../request')\n\nvar CdnParser = Emitter.extend(\n  /** @lends CdnParser.prototype */\n  {\n    /**\n     * This class helps ResourceTransform parse CDN Nodes.\n     *\n     * @constructs CdnParser\n     * @extends Emitter\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      this._options = Object.assign({\n        cdnName: null,\n        parsers: [],\n        requestHeaders: {},\n        parseType: function () { return 0 }\n      }, options)\n\n      this._responses = {}\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(CdnParser.Event.DONE)\n    },\n\n    addParser: function (parser) {\n      this._options.parsers.push(parser)\n      return this\n    },\n\n    setCdnName: function (name) {\n      this._options.cdnName = name\n      return this\n    },\n\n    setRequestHeader: function (key, value) {\n      this._options.requestHeaders[key] = value\n      return this\n    },\n\n    setParseType: function (parser) {\n      this._options.parseType = parser\n      return this\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    getResponses: function () {\n      return this._responses\n    },\n\n    /**\n     * Parses given headers to check for matches.\n     */\n    parse: function (url, responses) {\n      this._responses = responses || {}\n      var headerString = JSON.stringify(this._options.requestHeaders)\n      if (this._responses[headerString]) {\n        this._parseResponse(this._responses[headerString])\n      } else {\n        this._requestResponse(url)\n      }\n    },\n\n    _requestResponse: function (url) {\n      var headerString = JSON.stringify(this._options.requestHeaders)\n\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: this._options.requestHeaders\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        this._responses[headerString] = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(this._responses[headerString])\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      this._options.parsers.forEach(function (parser) {\n        headers.split('\\n').forEach(function (line) {\n          var index = line.indexOf(':')\n          if (index !== -1) {\n            var key = line.slice(0, index)\n            if (key === parser.headerName) {\n              this._executeParser(parser, line.slice(index + 1))\n            }\n          }\n        }.bind(this))\n      }.bind(this))\n      this.done()\n    },\n\n    _executeParser: function (parser, value) {\n      try {\n        var matches = parser.regex.exec(value.trim())\n        if (matches !== null) {\n          if (this._options.cdnName) this._cdnName = this._options.cdnName\n          switch (parser.element) {\n            case 'host':\n              this._cdnNodeHost = matches[1]\n              break\n            case 'type':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'host+type':\n              this._cdnNodeHost = matches[1]\n              this._cdnNodeTypeString = matches[2]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'type+host':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              this._cdnNodeHost = matches[2]\n              break\n            case 'name':\n              this._cdnName = matches[1].toUpperCase()\n              break\n          }\n        }\n      } catch (err) {\n        Log.warn('CDN parsing for ' + this._options.cdnName +\n          ' could not parse header value ' + value)\n      }\n    }\n\n  },\n\n  /** @lends CdnParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this CdnParser is done processing. */\n      DONE: 'done'\n    },\n\n    // Static members\n    _cdns: {\n      Level3: {\n        cdnName: 'LEVEL3',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-WR-DIAG',\n          regex: /Host:(.+)\\sType:(.+)/\n        }],\n        requestHeaders: {\n          'X-WR-DIAG': 'host'\n        },\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n            case 'TCP_MEM_HIT':\n            case 'TCP_IMS_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Cloudfront: {\n        cdnName: 'CLOUDFRT',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Amz-Cf-Id',\n          regex: /(.+)/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /(\\S+)\\s.+/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'Hit':\n              return 1\n            case 'Miss':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Akamai: {\n        cdnName: 'AKAMAI',\n        parsers: [{\n          element: 'type+host',\n          headerName: 'X-Cache',\n          regex: /(.+)\\sfrom\\s.+\\(.+\\/(.+)\\).*/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Highwinds: {\n        cdnName: 'HIGHNEGR',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-HW',\n          regex: /.+,[0-9]+\\.(.+)\\.(.+)/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'c':\n            case 'x':\n              return 1\n            default:\n              return 2\n          }\n        }\n      },\n      Fastly: {\n        cdnName: 'FASTLY',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Served-By',\n          regex: /([^,\\s]+)$/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /([^,\\s]+)$/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'HIT':\n              return 1\n            case 'MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Balancer: {\n        parsers: [{\n          element: 'name',\n          headerName: null,\n          regex: /(.+)/\n        }]\n      }\n    },\n\n    setBalancerHeaderName: function (name) {\n      CdnParser._cdns.Balancer.parsers[0].headerName = name\n    },\n\n    create: function (key) {\n      if (CdnParser._cdns[key]) {\n        return new CdnParser(CdnParser._cdns[key])\n      } else {\n        Log.warn('Tried to create an unexisting CdnParser named ' + key)\n      }\n    },\n\n    add: function (key, parser) {\n      CdnParser._cdns[key] = parser\n    }\n  }\n)\n\nmodule.exports = CdnParser\n","var Transform = require('./transform')\n\n/**\n * This class manages Flow restrictions. All requests shall be blocked until /init or /start are\n * received.\n *\n * @constructs\n * @extends Transform\n * @memberof youbora\n *\n * @param {Plugin} plugin Instance of {@link Plugin}\n */\nvar FlowTransform = Transform.extend(\n  /** @lends FlowTransform.prototype */\n  {\n    _services: ['/init', '/start'],\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      if (this._isBusy && request != null && this._services.indexOf(request.service) !== -1) {\n        this.done()\n      }\n\n      return Transform.prototype.isBlocking.apply(this, arguments)\n    }\n  }\n)\n\nmodule.exports = FlowTransform\n","var YBRequest = require('../request')\nvar Emitter = require('../../emitter')\nvar Log = require('../../log')\n\nvar HlsParser = Emitter.extend(\n  /** @lends HlsParser.prototype */\n  {\n    /**\n     * Extend this class to implement your own ResourceEmitter parser task.\n     *\n     * @constructs HlsParser\n     * @extends Emitter\n     * @memberof youbora\n     * @abstract\n     */\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(HlsParser.Event.DONE)\n    },\n\n    /**\n     *\n     *\n     * @param {string} resource Either the resource url or the manifest body.\n     * @param {string} parentResource Parent resource in case relative paths are sent.\n     */\n    parse: function (resource, parentResource) {\n      parentResource = parentResource || ''\n\n      try {\n        var matches = /((\\S*?)(\\.m3u8|\\.m3u|\\.ts|\\.mp4)(\\?\\S*|\\n|\\r|$))/i.exec(resource)\n      } catch (err) {\n        Log.warn('Parse HLS Regex failed', err)\n        this.done()\n      }\n\n      if (matches !== null) { // get first line ending in .m3u8, .m3u, .mp4 or .ts\n        var res = matches[1].trim()\n\n        var index = parentResource.lastIndexOf('/')\n        if (res.indexOf('http') !== 0 && index !== -1) {\n          // If does not start with http, add parentResource relative route.\n          res = parentResource.slice(0, index) + '/' + res\n        }\n\n        if (matches[3] === '.m3u8' || matches[3] === '.m3u') { // It is m3u8 or m3u...\n          var request = new YBRequest(res, null, null, { cache: true })\n\n          request.on(YBRequest.Event.SUCCESS, function (resp) {\n            this.parse(resp.getXHR().responseText, matches[2])\n          }.bind(this))\n\n          request.on(YBRequest.Event.ERROR, function (resp) {\n            this.done()\n          }.bind(this))\n\n          request.send()\n        } else { // It is mp4 or ts...\n          this._realResource = res\n          this.done()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    getResource: function () {\n      return this._realResource\n    }\n  },\n\n  /** @lends HlsParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this HlsParser is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = HlsParser\n","var Transform = require('./transform')\n\nvar Nqs6Transform = Transform.extend(\n  /** @lends Nqs6Transform.prototype */\n  {\n\n    /**\n     * This class ensures NQS6 retrocompatibility\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.done()\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      this._cloneParam(request, 'accountCode', 'system')\n      this._cloneParam(request, 'transactionCode', 'transcode')\n      this._cloneParam(request, 'username', 'user')\n      this._cloneParam(request, 'mediaResource', 'resource')\n      this._cloneParam(request, 'errorMsg', 'msg')\n\n      if (request.service !== '/joinTime') {\n        this._cloneParam(request, 'playhead', 'time')\n      }\n\n      switch (request.service) {\n        case '/start':\n          this._cloneParam(request, 'mediaDuration', 'duration')\n          break\n\n        case '/joinTime':\n          this._cloneParam(request, 'joinDuration', 'time')\n          this._cloneParam(request, 'playhead', 'eventTime')\n          break\n\n        case '/seek':\n          this._cloneParam(request, 'seekDuration', 'duration')\n          break\n\n        case '/bufferUnderrun':\n          this._cloneParam(request, 'bufferDuration', 'duration')\n          break\n\n        case '/ping':\n          for (var key in request.params.entities) {\n            request.params.entityType = key\n            request.params.entityValue = request.params.entities[key]\n            break\n          }\n          break\n      }\n    },\n\n    _cloneParam: function (request, from, to) {\n      request.params[to] = request.params[from]\n    }\n  })\n\nmodule.exports = Nqs6Transform\n","var Transform = require('./transform')\nvar HlsParser = require('./hlsparser')\nvar CdnParser = require('./cdnparser')\nvar Log = require('../../log')\n\nvar ResourceTransform = Transform.extend(\n  /** @lends ResourceTransform.prototype */\n  {\n    /**\n     * This class parses resource to fetch transportstreams, CDNs and Node plugin.\n     *\n     * @constructs ResourceTransform\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      ResourceTransform.__super__.constructor.apply(this, arguments)\n\n      this._plugin = plugin\n\n      this._realResource = null\n      this._initResource = null\n      this._cdnName = null\n      this._cdnNodeHost = null\n      this._cdnNodeTypeString = null\n      this._cdnNodeType = null\n      this._responses = {}\n\n      this._isBusy = false\n    },\n\n    getResource: function () {\n      return this._realResource || this._initResource\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    init: function (resource) {\n      if (!this._isBusy) {\n        this._isBusy = true\n\n        this._initResource = resource\n\n        CdnParser.setBalancerHeaderName(this._cdnNameHeader)\n        this._hlsEnabled = this._plugin.isParseHls()\n        this._cdnEnabled = this._plugin.isParseCdnNode()\n        this._cdnList = this._plugin.getParseCdnNodeList().slice() // clone\n        this._cdnNameHeader = this._plugin.getParseCdnNodeNameHeader()\n\n        this._setTimeout()\n\n        if (this._hlsEnabled) {\n          this._parseHLS()\n        } else if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }\n    },\n\n    _setTimeout: function () {\n      // Abort operation after 3s\n      this._parseTimeout = setTimeout(function () {\n        if (this._isBusy) {\n          this.done()\n          Log.warn(\n            'ResourceTransform has exceded the maximum execution time (3s) and will be aborted.'\n          )\n        }\n      }.bind(this), 3000)\n    },\n\n    _parseHLS: function () {\n      var hlsTransform = new HlsParser()\n      hlsTransform.on(HlsParser.Event.DONE, function () {\n        this._realResource = this._hlsTransform.getResource()\n        if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }.bind(this))\n      hlsTransform.parse(this._initResource)\n    },\n\n    _parseCDN: function () {\n      if (this._cdnList.length > 0) {\n        var cdn = this._cdnList.pop()\n\n        if (this.getNodeHost()) this.done()\n\n        var cdnParser = CdnParser.create(cdn)\n\n        if (cdnParser) {\n          cdnParser.on(CdnParser.Event.DONE, function () {\n            this._responses = cdnParser.getResponses()\n            this._cdnName = cdnParser.getCdnName()\n            this._cdnNodeHost = cdnParser.getNodeHost()\n            this._cdnNodeTypeString = cdnParser.getNodeTypeString()\n            this._cdnNodeType = cdnParser.getNodeType()\n\n            if (this.getNodeHost()) this.done()\n          }.bind(this))\n          cdnParser.parse(this.getResource(), this._responses)\n        } else {\n          this._parseCDN()\n        }\n      }\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      if (request.service === '/start') {\n        var lastSent = this._plugin.requestBuilder.lastSent\n        lastSent.mediaResource = request.params.mediaResource = this.getResource()\n\n        if (this._cdnEnabled) {\n          lastSent.cdn = request.params.cdn = request.params.cdn || this.getCdnName()\n          lastSent.nodeHost = request.params.nodeHost = this.getNodeHost()\n          lastSent.nodeType = request.params.nodeType = this.getNodeType()\n          lastSent.nodeTypeString = request.params.nodeTypeString = this.getNodeTypeString()\n          lastSent.nodeTypeString = request.params.nodeTypeString\n        }\n      }\n    }\n  })\n\nmodule.exports = ResourceTransform\n","var Emitter = require('../../emitter')\n\nvar Transform = Emitter.extend(\n  /** @lends Transform.prototype */\n\n  /**\n   * Transform classes among youbora helps the library parse and work with data.\n   * ResourceTransform, ViewTransform... all extend from this class.\n   *\n   * @constructs Transform\n   * @extends Emitter\n   * @memberof youbora\n   * @abstract\n   */\n  {\n    constructor: function () {\n      this._isBusy = true\n    },\n\n    /**\n     * Override this method to transform info.\n     *\n     * @param {YBRequest} request Request to transform.\n     */\n    parse: function (request) { },\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      return this._isBusy\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this._isBusy = false\n      this.emit(Transform.Event.DONE)\n    }\n  },\n\n  /** @lends Transform */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this Transform is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = Transform\n","var YBRequest = require('../request')\nvar Transform = require('./transform')\nvar Log = require('../../log')\nvar Util = require('../../util')\n\nvar ViewTransform = Transform.extend(\n  /** @lends ViewTransform.prototype */\n  {\n    /**\n     * This class manages Fastdata service and view index.\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      Transform.prototype.constructor.apply(this, arguments)\n\n      /** /data response */\n      this.response = {}\n\n      this._viewIndex = -1\n\n      var service = '/data'\n      var params = {\n        apiVersion: 'v6,v7',\n        outputformat: 'jsonp'\n      }\n\n      params = plugin.requestBuilder.buildParams(params, service)\n      if (params !== null) {\n        Log.notice(service + ' ' + params.system)\n        if (params.system === 'nicetest') {\n          Log.error(\n            'No accountCode has been set. Please set your accountCode inside plugin\\'s options.'\n          )\n        }\n\n        this._request = new YBRequest(plugin.getHost(), service, params)\n      }\n    },\n\n    /**\n     * Sends initial request\n     */\n    init: function () {\n      this._request\n        .on(YBRequest.Event.SUCCESS, this._receiveData.bind(this))\n        .on(YBRequest.Event.ERROR, this._failedData.bind(this))\n        .send()\n    },\n\n    _receiveData: function (req, e) {\n      try {\n        var msg = req.getXHR().response\n        var resp = JSON.parse(msg.slice(msg.indexOf('(') + 1, msg.lastIndexOf(')')))\n\n        this.response.host = Util.addProtocol(resp.q.h)\n        this.response.code = resp.q.c\n        this.response.pingTime = resp.q.pt\n\n        this.done()\n      } catch (err) {\n        Log.error('Fastdata response is invalid.')\n      }\n    },\n\n    _failedData: function (req, e) {\n      Log.error('Fastdata request failed.')\n    },\n\n    /**\n     * Call this method when a new content begins, it will increment the view index (_0, _1, _2...)\n     * @return {string} new viewcode\n     */\n    nextView: function () {\n      this._viewIndex += 1\n      return this.getViewCode()\n    },\n\n    /**\n     * Returns current viewcode\n     * @return {string} viewcode\n     */\n    getViewCode: function () {\n      return this.response.code + '_' + this._viewIndex\n    },\n\n    /**\n     * Transform requests\n     * @param {youbora.comm.YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      request.host = request.host || this.response.host\n      request.params.code = request.params.code || this.getViewCode()\n      if (request.service === '/ping' || request.service === '/start') {\n        request.params.pingTime = request.params.pingTime || this.response.pingTime\n      }\n    }\n  })\n\nmodule.exports = ViewTransform\n","var YouboraObject = require('./object')\n\n/**\n * This class extends YouboraObject, adding event emitting/listening functionalities.\n * @constructs Emitter\n * @extends YouboraObject\n * @memberof youbora\n */\nvar Emitter = YouboraObject.extend(\n  /** @lends Emitter.prototype */\n  {\n    /**\n     * Sets a listener to a given event. Use {@link emit} to trigger those events.\n     * Pass '*' to listen ALL events.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event. Receives event and data.\n     * @return this\n     */\n    on: function (event, callback) {\n      this._listeners = this._listeners || {}\n      if (typeof callback === 'function') {\n        this._listeners[event] = this._listeners[event] || []\n        this._listeners[event].push(callback)\n        return this\n      }\n    },\n\n    /**\n     * Removes given callback from the listeners of this object.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     * @return this\n     */\n    off: function (event, callback) {\n      this._listeners = this._listeners || {}\n\n      if (this._listeners[event]) {\n        var index = this._listeners[event].indexOf(callback)\n        if (index !== -1) {\n          this._listeners[event].splice(index, 1)\n        }\n      }\n      return this\n    },\n\n    /**\n     * Emits given event, triggering all the associated callbacks.\n     * @param {string} event Name of the event.\n     * @param {object} [data] Custom data to be sent to the callbacks.\n     * @return this\n     */\n    emit: function (event, data) {\n      this._listeners = this._listeners || {}\n      data = data || {}\n\n      if (Array.isArray(this._listeners[event])) {\n        this._listeners[event].forEach(this._eachCallback.bind(this, event, data))\n      }\n      if (Array.isArray(this._listeners['*'])) {\n        this._listeners['*'].forEach(this._eachCallback.bind(this, event, data))\n      }\n\n      return this\n    },\n\n    _eachCallback: function (event, data, callback) {\n      if (typeof callback === 'function') {\n        callback({ type: event, data: data, target: this })\n      }\n    }\n  }\n)\n\nmodule.exports = Emitter\n","var Emitter = require('./emitter')\n\n/**\n * Static Log class for YouboraLib\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Log = {\n\n  _emitter: new Emitter(),\n\n  /** Exposes {@link youbora.EvenfulObject.on} */\n  on: function () { Log._emitter.on.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.off} */\n  off: function () { Log._emitter.off.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.emit} */\n  emit: function () { Log._emitter.emit.apply(Log._emitter, arguments) },\n\n  /**\n   * Enum for log levels\n   * @enum\n   */\n  Level: {\n    /** No console outputs */\n    SILENT: 6,\n    /** Console will show errors */\n    ERROR: 5,\n    /** Console will show warnings */\n    WARNING: 4,\n    /** Console will show notices (ie: life-cyrcle logs) */\n    NOTICE: 3,\n    /** Console will show debug messages (ie: player events) */\n    DEBUG: 2,\n    /** Console will show verbose messages (ie: Http Requests) */\n    VERBOSE: 1\n  },\n\n  /**\n   * Enum for events\n   * @enum\n   */\n  Event: {\n    /** Sent each time a messaged is issued, even if log level does not handle it. */\n    LOG: 'log'\n  },\n\n  /**\n   * Only logs of this imporance or higher will be shown.\n   * @default youbora.Log.Levels.ERROR\n   * @see {@link youbora.Log.Levels}\n   */\n  logLevel: 5,\n\n  /**\n   * If true, console logs will always be outputed without colors (for debbugin in devices).\n   * @default false\n   */\n  plainLogs: false,\n\n  /**\n   * Returns a console message\n   *\n   * @private\n   * @param {(string|error|array)} msg Message string, error object or array of messages.\n   * @param {Log.Levels} [level=Log.Levels.NOTICE] Defines the level of the error sent.\n   * Only errors with higher or equal level than Log.logLevel will be displayed.\n   * @param {string} [color=darkcyan] Color of the header\n   * @see {@link Youbora.Log.debugLevel}\n   */\n  report: function (msg, level, color) {\n    if (console && console.log) {\n      level = level || Log.Level.NOTICE\n      color = color || 'darkcyan'\n\n      var letters = {\n        5: 'e', // Error\n        4: 'w', // Warning\n        3: 'n', // Notice\n        2: 'd', // Debug\n        1: 'v' // Verbose\n      }\n\n      var letter = letters[level]\n      var prefix = '[Youbora]' + Log._getCurrentTime() + ' ' + letter + ':'\n\n      this.emit('log', { level: level, msg: msg, prefix: prefix })\n\n      // Show messages in actual console if level is enought\n      if (Log.logLevel <= level) {\n        if (Log.plainLogs || document.documentMode) { // document.documentMode exits only in IE\n          // Plain log for IE and devices\n          Log._plainReport(msg, prefix)\n        } else {\n          // choose log method\n          var logMethod\n          if (level === Log.Level.ERROR && console.error) {\n            logMethod = console.error\n          } else if (level === Log.Level.WARNING && console.warn) {\n            logMethod = console.warn\n          } else if (level === Log.Level.DEBUG && console.debug) {\n            logMethod = console.debug\n          } else {\n            logMethod = console.log\n          }\n\n          // print message\n          prefix = '%c' + prefix\n          if (msg instanceof Array) {\n            msg.splice(0, 0, prefix, 'color: ' + color)\n            logMethod.apply(console, msg)\n          } else {\n            logMethod.call(console, prefix, 'color: ' + color, msg)\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the current time in format hh:mm:ss.mmm (with trailing 0s)\n   * @private\n   * @return {string} Current time.\n   */\n  _getCurrentTime: function () {\n    var d = new Date()\n    var hh = ('0' + d.getDate()).slice(-2)\n    var mm = ('0' + d.getMinutes()).slice(-2)\n    var ss = ('0' + d.getSeconds()).slice(-2)\n    var mmm = ('00' + d.getMilliseconds()).slice(-3)\n    return '[' + hh + ':' + mm + ':' + ss + '.' + mmm + ']'\n  },\n\n  /**\n   * Returns a console message without style\n   *\n   * @private\n   * @param {(string|object|array)} msg Message string, object or array of messages.\n   * @param {string} prefix Prefix of the message.\n   */\n  _plainReport: function (msg, prefix) {\n    if (msg instanceof Array) {\n      for (var m in msg) {\n        Log._plainReport(msg[m], prefix)\n      }\n    } else {\n      if (typeof msg === 'string') {\n        console.log(prefix + ' ' + msg)\n      } else {\n        console.log(prefix + ' <next line>')\n        console.log(msg)\n      }\n    }\n  },\n\n  /**\n   * Sends an error (level 1) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  error: function () {\n    Log.report([].slice.call(arguments), Log.Level.ERROR, 'darkred')\n  },\n\n  /**\n   * Sends a warning (level 2) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  warn: function () {\n    Log.report([].slice.call(arguments), Log.Level.WARNING, 'darkorange')\n  },\n\n  /**\n   * Sends a notice (level 3) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  notice: function () {\n    Log.report([].slice.call(arguments), Log.Level.NOTICE, 'darkgreen')\n  },\n\n  /**\n   * Sends a debug message (level 4) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  debug: function () {\n    Log.report([].slice.call(arguments), Log.Level.DEBUG, 'indigo')\n  },\n\n  /**\n   * Sends a verbose message (level 5) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  verbose: function () {\n    Log.report([].slice.call(arguments), Log.Level.VERBOSE, 'navy')\n  },\n\n  /**\n   * This function is automatically executed at youboralib's init.\n   * Will search inside window.location.search for attribute 'youbora-debug=X'.\n   * X can have one of these values, that will modify LogLevel.\n   * 6: SILENT,\n   * 5: ERROR,\n   * 4: WARNING,\n   * 3: NOTICE,\n   * 2: DEBUG,\n   * 1: VERBOSE\n   *\n   * If youbora-console=plain is present, plainLogs will be set to true.\n   */\n  loadLevelFromUrl: function () {\n    if (typeof window !== 'undefined' && window.location && window.location.search) {\n      var m = /\\?.*&*youbora-debug=(.+)/i.exec(window.location.search)\n      if (m !== null) {\n        Log.logLevel = m[1]\n      }\n\n      var m2 = /\\?.*&*youbora-debug=plain/i.exec(window.location.search)\n      if (m2 !== null) {\n        Log.plainLogs = true\n      }\n    }\n  }\n}\n\nmodule.exports = Log\n","var YouboraObject = function () {}\n\nYouboraObject.prototype = {\n  /**\n   * A base class that other Classes should inherit from.\n   * It has a no-op constructor intended to be overridden by classes that extend from this.\n   *\n   * @constructs YouboraObject\n   * @abstract\n   * @memberof youbora\n   */\n  constructor: function () {}\n}\n\n/**\n * This static method allows the extension of the current class, emulating 1-level inheritance.\n * Also add a helper __super__ object poiting to the parent prototypes methods\n * @see https://github.com/SBoudrias/class-extend\n * @example\n * var A = YouboraObject.extend({ a: 1, b: 1, c: { d: 0 } });\n * var a = new A(); // { a: 1, b: 1, c: { d: 0 } }\n *\n * var B = A.extend({ b: 2, c: { e: 3 } });\n * var b = new B(); // { a: 1, b: 2, c: { e: 3 } }\n *\n * @param  {Object} protoProps  Prototype properties (available on the instances)\n * @param  {Object} staticProps Static properties (available on the contructor)\n * @return {Object}             New sub class\n */\nYouboraObject.extend = function (protoProps, staticProps) {\n  var parent = this\n  var NewClass\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent's constructor.\n  if (protoProps && Object.prototype.hasOwnProperty.call(protoProps, 'constructor')) {\n    NewClass = protoProps.constructor\n  } else {\n    NewClass = function () { return parent.apply(this, arguments) }\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  Object.assign(NewClass, parent, staticProps)\n\n  // Set the prototype chain to inherit from `parent`\n  NewClass.prototype = Object.create(parent.prototype, {\n    constructor: {\n      value: NewClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  // Add prototype properties (instance properties) to the subclass,\n  // if supplied.\n  if (protoProps) Object.assign(NewClass.prototype, protoProps)\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  NewClass.__super__ = parent.prototype\n\n  return NewClass\n}\n\nmodule.exports = YouboraObject\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar Options = YouboraObject.extend(\n  /** @lends Options.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     * @constructs Options\n     * @param {Object|Options} [options] A literal containing values.\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      /** @prop {boolean} [enabled=true] If false, the plugin won't send NQS requests. */\n      this['enabled'] = true\n\n      /**\n       * @prop {boolean} [httpSecure=null]\n       * Define the security of NQS calls.\n       * If true it will use 'https://',\n       * if false it will use 'http://',\n       * if null it will use '//'.\n       */\n      this['httpSecure'] = null\n\n      /** @prop {string} [host='nqs.nice264.com'] Host of the Fastdata service. */\n      this['host'] = 'nqs.nice264.com'\n\n      /**\n       * @prop {string} [accountCode='nicetest']\n       * NicePeopleAtWork account code that indicates the customer account.\n       */\n      this['accountCode'] = 'nicetest'\n\n      /** @prop {string} [username] User ID value inside your system. */\n      this['username'] = null\n\n      // PARSERS\n\n      /**\n       * @prop {boolean} [parse.Hls=false]\n       * If true the plugin will parse HLS files to use the first .ts file found as resource.\n       * It might slow performance down.\n       */\n      this['parse.Hls'] = false\n\n      /**\n       * @prop {string} [parse.CdnNameHeader]\n       * If defined, resource parse will try to fetch the CDN code from the custom header defined\n       * by this property. ie: 'x-cdn-forward'\n       */\n      this['parse.CdnNameHeader'] = 'x-cdn-forward'\n\n      /**\n       * @prop {boolean} [parse.CdnNode.enabled=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CdnNode'] = false\n\n      /**\n       * @prop {array<string>} [parse.CdnNode.list=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CdnNode.list'] = ['Akamai', 'Cloudfront', 'Level3', 'Fastly', 'Highwinds']\n\n      // NETWORK\n\n      /** @prop {string} [network.ip] IP of the viewer/user. ie= '100.100.100.100'. */\n      this['network.ip'] = null\n\n      /** @prop {string} [network.isp] Name of the internet service provider of the viewer/user. */\n      this['network.isp'] = null\n\n      /**\n       * @prop {string} [network.connectionType]\n       * See a list of codes in {@link http://mapi.youbora.com:8081/connectionTypes}\n       */\n      this['network.connectionType'] = null\n\n      // DEVICE\n\n      /**\n       * @prop {string} [device.code]\n       * Youbora's device code. If specified it will rewrite info gotten from user agent.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/devices}\n       */\n      this['device.code'] = null\n\n      // CONTENT\n\n      /** @prop {string} [content.transactionCode] Custom unique code to identify the view. */\n      this['content.transactionCode'] = null\n\n      /** @prop {string} [content.resource] URL/path of the current media resource. */\n      this['content.resource'] = null\n\n      /** @prop {boolean} [content.isLive] True if the content is live false if VOD. */\n      this['content.isLive'] = null\n\n      /** @prop {string} [content.title] Title of the media. */\n      this['content.title'] = null\n\n      /** @prop {string} [content.title2] Secondary title of the media. */\n      this['content.title2'] = null\n\n      /** @prop {number} [content.duration] Duration of the media. */\n      this['content.duration'] = null\n\n      /** @prop {int} {content.fps] Frames per second of the content in the current moment. */\n      this['content.fps'] = null\n\n      /** @prop {int} {content.bitrate] Bitrate of the content in bits per second. */\n      this['content.bitrate'] = null\n\n      /** @prop {int} {content.throughput] Throughput of the client bandwith in bits per second. */\n      this['content.throughput'] = null\n\n      /** @prop {string} {content.rendition] Name of the current rendition of the content. */\n      this['content.rendition'] = null\n\n      /**\n       * @prop {string} [content.cdn]\n       * Codename of the CDN where the content is streaming from.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/cdns}\n       * */\n      this['content.cdn'] = null\n\n      /**\n       * @prop {object} [content.metadata={}]\n       * Item containing mixed extra information about the content like: director, parental rating,\n       * device info or the audio channels.This object may store any serializable key:value info.\n       */\n      this['content.metadata'] = {}\n\n      // ADS\n\n      /**\n       * @prop {object} [ad.metadata={}]\n       * Item containing mixed extra information about ads like: campaign name or request url.\n       * This object may store any serializable key:value info.\n       */\n      this['ad.metadata'] = {}\n\n      // EXTRAPARAMS\n\n      /** @prop {string} [extraparam.1] Custom parameter 1. */\n      this['extraparam.1'] = null\n\n      /** @prop {string} [extraparam.2] Custom parameter 2. */\n      this['extraparam.2'] = null\n\n      /** @prop {string} [extraparam.3] Custom parameter 3. */\n      this['extraparam.3'] = null\n\n      /** @prop {string} [extraparam.4] Custom parameter 4. */\n      this['extraparam.4'] = null\n\n      /** @prop {string} [extraparam.5] Custom parameter 5. */\n      this['extraparam.5'] = null\n\n      /** @prop {string} [extraparam.6] Custom parameter 6. */\n      this['extraparam.6'] = null\n\n      /** @prop {string} [extraparam.7] Custom parameter 7. */\n      this['extraparam.7'] = null\n\n      /** @prop {string} [extraparam.8] Custom parameter 8. */\n      this['extraparam.8'] = null\n\n      /** @prop {string} [extraparam.9] Custom parameter 9. */\n      this['extraparam.9'] = null\n\n      /** @prop {string} [extraparam.10] Custom parameter 10. */\n      this['extraparam.10'] = null\n\n      this.setOptions(options)\n    },\n\n    /**\n     * Recursively sets the properties present in the params object.\n     * ie: this.username = params.username.\n     *\n     * @param {Object} options A literal or another Data containing values.\n     * @param {Object} [base=this] Start point for recursion.\n     */\n    setOptions: function (options, base) {\n      try {\n        base = base || this\n        if (typeof options !== 'undefined') {\n          for (var key in options) {\n            if (typeof base[key] === 'object' && base[key] !== null) {\n              this.setOptions(options[key], base[key])\n            } else {\n              base[key] = options[key]\n            }\n          }\n        }\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  }\n)\n\nmodule.exports = Options\n","var Emitter = require('../emitter')\nvar Timer = require('../timer')\nvar Log = require('../log')\nvar Util = require('../util')\nvar Chrono = require('../chrono')\nvar version = require('../version')\n\nvar Communication = require('../comm/communication')\nvar FlowTransform = require('../comm/transform/flow')\nvar ViewTransform = require('../comm/transform/view')\nvar Nqs6Transform = require('../comm/transform/nqs6')\nvar ResourceTransform = require('../comm/transform/resource')\n\nvar Options = require('./options')\nvar RequestBuilder = require('./requestbuilder')\n\nvar Adapter = require('../adapter/adapter')\n\nvar Plugin = Emitter.extend(\n  /** @lends Plugin.prototype */\n  {\n    /**\n     * This is the main class of video analytics. You may want one instance for each video you want\n     * to track. Will need adapters for both content and ads, manage options and general flow.\n     *\n     * @constructs Plugin\n     * @extends Emitter\n     * @memberof youbora\n     *\n     * @param {Options} [options] An object complying with {@link Options} constructor.\n     * @param {Adapter} [adapter] If an adapter is provided, setAdapter will be immediately called.\n     */\n    constructor: function (options, adapter) {\n      /** This flags indicates that /init has been called. */\n      this.isInitiated = false\n\n      /** This flags indicate that the content is preloading. */\n      this.isPreloading = false\n\n      /** Chrono for preload times. */\n      this.preloadChrono = new Chrono()\n\n      /** Chrono for init to join time. */\n      this.initChrono = new Chrono()\n\n      this.options = new Options(options)\n      this._adapter = null\n      this._adsAdapter = null\n      this._ping = this._ping = new Timer(this._sendPing.bind(this), 5000)\n\n      this.requestBuilder = new RequestBuilder(this)\n\n      this.resourceTransform = new ResourceTransform(this)\n\n      // FastData\n      this.viewTransform = new ViewTransform(this)\n      this.viewTransform.on(ViewTransform.Event.DONE, function (e) {\n        this._ping.interval = e.target.response.pingTime * 1000\n      }.bind(this))\n\n      if (adapter) this.setAdapter(adapter)\n\n      this.viewTransform.init()\n    },\n\n    /**\n     * _reset all variables and stop all timers\n     */\n    _reset: function () {\n      this._stopPings()\n      this.resourceTransform = new ResourceTransform(this)\n\n      this.isInitiated = false\n      this.isPreloading = false\n      this.initChrono.reset()\n      this.preloadChrono.reset()\n    },\n\n    // ------------------------------------- Options ----------------------------------------------\n\n    /**\n     * Modifies current options. See {@link Options.setOptions}.\n     *\n     * @param {any} options\n     */\n    setOptions: function (options) {\n      this.options.setOptions(options)\n    },\n\n    // ------------------------------------- Adapters ----------------------------------------------\n\n    /**\n     * Sets an adapter for video content.\n     *\n     * @param {Adapter} adapter\n     */\n    setAdapter: function (adapter) {\n      if (adapter.plugin) {\n        Log.warn('Adapters can only be added to a single plugin')\n      } else {\n        this.removeAdapter()\n\n        this._adapter = adapter\n        adapter.plugin = this\n\n        // Register listeners\n        adapter.on(Adapter.Event.START, this._startListener.bind(this))\n        adapter.on(Adapter.Event.JOIN, this._joinListener.bind(this))\n        adapter.on(Adapter.Event.PAUSE, this._pauseListener.bind(this))\n        adapter.on(Adapter.Event.RESUME, this._resumeListener.bind(this))\n        adapter.on(Adapter.Event.SEEK_BEGIN, this._seekBeginListener.bind(this))\n        adapter.on(Adapter.Event.SEEK_END, this._seekEndListener.bind(this))\n        adapter.on(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener.bind(this))\n        adapter.on(Adapter.Event.BUFFER_END, this._bufferEndListener.bind(this))\n        adapter.on(Adapter.Event.ERROR, this._errorListener.bind(this))\n        adapter.on(Adapter.Event.STOP, this._stopListener.bind(this))\n      }\n    },\n\n    /**\n     * Returns current adapter or null.\n     *\n     * @returns {Adapter}\n     */\n    getAdapter: function () {\n      return this._adapter\n    },\n\n    /** Removes the current adapter. Fires stop if needed. Calls adapter.dispose() */\n    removeAdapter: function () {\n      if (this._adapter) {\n        this._adapter.dispose()\n\n        this._adapter.plugin = null\n\n        this._adapter.off(Adapter.Event.START, this._startListener)\n        this._adapter.off(Adapter.Event.JOIN, this._joinListener)\n        this._adapter.off(Adapter.Event.PAUSE, this._pauseListener)\n        this._adapter.off(Adapter.Event.RESUME, this._resumeListener)\n        this._adapter.off(Adapter.Event.SEEK_BEGIN, this._seekBeginListener)\n        this._adapter.off(Adapter.Event.SEEK_END, this._seekEndListener)\n        this._adapter.off(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener)\n        this._adapter.off(Adapter.Event.BUFFER_END, this._bufferEndListener)\n        this._adapter.off(Adapter.Event.ERROR, this._errorListener)\n        this._adapter.off(Adapter.Event.STOP, this._stopListener)\n\n        this._adapter = null\n      }\n    },\n\n    /**\n     * Sets an adapter for ads.\n     *\n     * @param {Adapter} adsAdapter\n     */\n    setAdsAdapter: function (adsAdapter) {\n      if (adsAdapter.plugin) {\n        Log.warn('Adapters can only be added to a single plugin')\n      } else {\n        this.removeAdsAdapter()\n\n        adsAdapter.plugin = this\n        this._adsAdapter = adsAdapter\n\n        adsAdapter.on(Adapter.Event.START, this._adStartListener.bind(this))\n        adsAdapter.on(Adapter.Event.JOIN, this._adJoinListener.bind(this))\n        adsAdapter.on(Adapter.Event.PAUSE, this._adPauseListener.bind(this))\n        adsAdapter.on(Adapter.Event.RESUME, this._adResumeListener.bind(this))\n        adsAdapter.on(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener.bind(this))\n        adsAdapter.on(Adapter.Event.BUFFER_END, this._adBufferEndListener.bind(this))\n        adsAdapter.on(Adapter.Event.STOP, this._adStopListener.bind(this))\n      }\n    },\n\n    /**\n     * Returns current adapter or null.\n     *\n     * @returns {Adapter}\n     */\n    getAdsAdapter: function () {\n      return this._adsAdapter\n    },\n\n    /** Removes the current adapter. Fires stop if needed. Calls adapter.dispose() */\n    removeAdsAdapter: function () {\n      if (this._adsAdapter) {\n        this._adsAdapter.dispose()\n\n        this._adsAdapter.plugin = null\n\n        this._adsAdapter.off(Adapter.Event.START, this._adStartListener)\n        this._adsAdapter.off(Adapter.Event.JOIN, this._adJoinListener)\n        this._adsAdapter.off(Adapter.Event.PAUSE, this._adPauseListener)\n        this._adsAdapter.off(Adapter.Event.RESUME, this._adResumeListener)\n        this._adsAdapter.off(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener)\n        this._adsAdapter.off(Adapter.Event.BUFFER_END, this._adBufferEndListener)\n        this._adsAdapter.off(Adapter.Event.STOP, this._adStopListener)\n\n        this._adsAdapter = null\n      }\n    },\n\n    // -------------------------------------- DISABLE ----------------------------------------------\n\n    /**\n     * Disable request sending.\n     */\n    disable: function () {\n      this.setOptions({ 'enabled': false })\n    },\n\n    /**\n     * Re-enable request sending.\n     */\n    enable: function () {\n      this.setOptions({ 'enabled': true })\n    },\n\n    // ------------------------------------- LISTENERS -----------------------------------------\n\n    /**\n     * Automatically calls RequestBuilder.\n     *\n     * @param {string} willSendEvent Name of the will-send event. Use {@link Plugin.Event} enum.\n     * @param {string} service Name of the service. Use {@link Plugin.Service} enum.\n     * @param {Object} params Params of the request\n     */\n    _send: function (willSendEvent, service, params) {\n      params = this.requestBuilder.buildParams(params, service)\n      this.requestBuilder.buildRequest(willSendEvent, service, params)\n    },\n\n    /**\n     * Initializes comm and its transforms.\n     */\n    _initComm: function () {\n      this.resourceTransform.init(this.getResource())\n\n      this._comm = new Communication()\n      this._comm.addTransform(new FlowTransform())\n      this._comm.addTransform(this.viewTransform)\n      this._comm.addTransform(this.resourceTransform)\n      this._comm.addTransform(new Nqs6Transform())\n    },\n\n    /**\n     * Starts preloading state and chronos.\n     */\n    firePreloadBegin: function () {\n      if (!this.isPreloading) {\n        this.isPreloading = true\n        this.preloadChrono.start()\n      }\n    },\n\n    /**\n     * Ends preloading state and chronos.\n     */\n    firePreloadEnd: function () {\n      if (this.isPreloading) {\n        this.isPreloading = false\n        this.preloadChrono.stop()\n      }\n    },\n\n    /**\n     * Sends /init. Should be called once the user has requested the content. Does not need\n     * a working adapter or player to work. it won't sent start if isInitiated is true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireInit: function (params) {\n      if (!this.isInitiated) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n\n        this.isInitiated = true\n        this.initChrono.start()\n\n        params = params || {}\n        this._send(Plugin.Event.WILL_SEND_INIT, Plugin.Service.INIT, params)\n        Log.notice(Plugin.Service.INIT + ' ' + (params.title || params.mediaResource))\n      }\n    },\n\n    _startListener: function (e) {\n      if (!this.isInitiated) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n      }\n\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_START, Plugin.Service.START, params)\n      Log.notice(Plugin.Service.START + ' ' + (params.title || params.mediaResource))\n    },\n\n    _joinListener: function (e) {\n      var params = e.data.params || {}\n      if (!this._adsAdapter || !this._adsAdapter.flags.isStarted) {\n        this._send(Plugin.Event.WILL_SEND_JOIN, Plugin.Service.JOIN, params)\n        Log.notice(Plugin.Service.JOIN + ' ' + params.joinDuration + 'ms')\n      } else {\n        if (this._adapter.monitor) this._adapter.monitor.stop()\n        this._adapter.flags.isJoined = false\n        this._adapter.chronos.join.stopTime = 0\n      }\n    },\n\n    _pauseListener: function (e) {\n      if (this._adapter) {\n        if (this._adapter.flags.isBuffering ||\n          this._adapter.flags.isSeeking ||\n          (this._adsAdapter && this._adsAdapter.flags.isStarted)) {\n          this._adapter.chronos.pause.reset()\n        }\n      }\n\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_PAUSE, Plugin.Service.PAUSE, params)\n      Log.notice(Plugin.Service.PAUSE + ' at ' + params.playhead + 's')\n    },\n\n    _resumeListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_RESUME, Plugin.Service.RESUME, params)\n      Log.notice(Plugin.Service.RESUME + ' ' + params.pauseDuration + 'ms')\n    },\n\n    _seekBeginListener: function (e) {\n      if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      Log.notice('Seek Begin')\n    },\n\n    _seekEndListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_SEEK, Plugin.Service.SEEK, params)\n      Log.notice(Plugin.Service.SEEK +\n        ' to ' + params.playhead +\n        ' in ' + params.seekDuration + 'ms'\n      )\n    },\n\n    _bufferBeginListener: function (e) {\n      if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      Log.notice('Buffer Begin')\n    },\n\n    _bufferEndListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_BUFFER, Plugin.Service.BUFFER, params)\n      Log.notice(Plugin.Service.BUFFER +\n        ' to ' + params.playhead +\n        ' in ' + params.bufferDuration + 'ms'\n      )\n    },\n\n    _errorListener: function (e) {\n      if (!this._comm) this._initComm()\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_ERROR, Plugin.Service.ERROR, params)\n      Log.notice(Plugin.Service.ERROR +\n        ' ' + params.errorLevel +\n        ' ' + params.errorCode\n      )\n\n      if (params.errorLevel === 'fatal') this._reset()\n    },\n\n    _stopListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_STOP, Plugin.Service.STOP, params)\n      Log.notice(Plugin.Service.STOP + ' at ' + params.playhead + 's')\n      this._reset()\n    },\n\n    // Ads\n    _adStartListener: function (e) {\n      if (this._adapter) {\n        this._adapter.fireBufferEnd()\n        this._adapter.fireSeekEnd()\n        if (this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      }\n\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getNewAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_START, Plugin.Service.AD_START, params)\n      Log.notice(\n        Plugin.Service.AD_START + ' ' +\n        params.adPosition + params.adNumber +\n        ' at ' + params.playhead + 's'\n      )\n    },\n\n    _adJoinListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n      this._send(Plugin.Event.WILL_SEND_AD_JOIN, Plugin.Service.AD_JOIN, params)\n      Log.notice(Plugin.Service.AD_JOIN + ' ' + params.adJoinDuration + 'ms')\n    },\n\n    _adPauseListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n      this._send(Plugin.Event.WILL_SEND_AD_PAUSE, Plugin.Service.AD_PAUSE, params)\n      Log.notice(Plugin.Service.AD_PAUSE + ' at ' + params.adPlayhead + 's')\n    },\n\n    _adResumeListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n      this._send(Plugin.Event.WILL_SEND_AD_RESUME, Plugin.Service.AD_RESUME, params)\n      Log.notice(Plugin.Service.AD_RESUME + ' ' + params.adPauseDuration + 'ms')\n    },\n\n    _adBufferBeginListener: function (e) {\n      Log.notice('Ad Buffer Begin')\n      if (this._adsAdapter && this._adsAdapter.flags.isPaused) {\n        this._adsAdapter.chronos.pause.reset()\n      }\n    },\n\n    _adBufferEndListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n      this._send(Plugin.Event.WILL_SEND_AD_BUFFER, Plugin.Service.AD_BUFFER, params)\n      Log.notice(Plugin.Service.AD_BUFFER + ' ' + params.adBufferDuration + 'ms')\n    },\n\n    _adStopListener: function (e) {\n      // remove time from joinDuration\n      if (this._adapter && !this._adapter.flags.isJoined) {\n        this._adapter.chronos.join.startTime = Math.min(\n          this._adapter.chronos.join.startTime + this._adsAdapter.chronos.total.getDeltaTime(),\n          new Date().getTime()\n        )\n      }\n\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n      this._send(Plugin.Event.WILL_SEND_AD_STOP, Plugin.Service.AD_STOP, params)\n      Log.notice(Plugin.Service.AD_STOP + ' ' + params.adTotalDuration + 'ms')\n    },\n\n    // ----------------------------------------- PINGS ---------------------------------------------\n\n    /**\n     * Starts sending pings\n     * @private\n     */\n    _startPings: function () {\n      if (!this._ping.isRunning) this._ping.start()\n    },\n\n    /**\n     * Stops sending pings\n     * @private\n     */\n    _stopPings: function () {\n      this._ping.stop()\n    },\n\n    _sendPing: function (diffTime) {\n      var params = {\n        diffTime: diffTime,\n        entities: this.requestBuilder.getChangedEntities()\n      }\n      if (this._adapter) {\n        if (this._adapter.flags.isPaused) {\n          params = this.requestBuilder.fetchParams(params, ['pauseDuration'])\n        } else {\n          params = this.requestBuilder.fetchParams(params, ['bitrate', 'throughput', 'fps'])\n\n          if (this._adsAdapter && this._adsAdapter.flags.isStarted) {\n            params = this.requestBuilder.fetchParams(params, ['adBitrate'])\n          }\n        }\n        if (this._adapter.flags.isBuffering) {\n          params = this.requestBuilder.fetchParams(params, ['bufferDuration'])\n        }\n        if (this._adapter.flags.isSeeking) {\n          params = this.requestBuilder.fetchParams(params, ['seekDuration'])\n        }\n\n        if (this._adsAdapter) {\n          if (this._adsAdapter.flags.isStarted) {\n            params = this.requestBuilder.fetchParams(params, ['adPlayhead'])\n          }\n          if (this._adsAdapter.flags.isBuffering) {\n            params = this.requestBuilder.fetchParams(params, ['adBufferDuration'])\n          }\n        }\n      }\n\n      this._send(Plugin.Event.WILL_SEND_PING, Plugin.Service.PING, params)\n      Log.verbose(Plugin.Service.PING)\n    },\n\n    // ------------------------------------- INFO GETTERS -----------------------------------------\n\n    /** Returns service host */\n    getHost: function () {\n      return Util.addProtocol(\n        Util.stripProtocol(this.options['host']),\n        this.options['httpSecure'])\n    },\n\n    /** Returns parse HLS Flag */\n    isParseHls: function () {\n      return this.options['parse.Hls']\n    },\n\n    /** Returns parse CdnNode Flag */\n    isParseCdnNode: function () {\n      return this.options['parse.CdnNode']\n    },\n\n    /** Returns Cdn list */\n    getParseCdnNodeList: function () {\n      return this.options['parse.CdnNode.list']\n    },\n\n    /** Returns Cdn header name */\n    getParseCdnNodeNameHeader: function () {\n      return this.options['parse.CdnNameHeader']\n    },\n\n    /** Returns content's playhead */\n    getPlayhead: function () {\n      var ret = 0\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayhead()\n        } catch (err) {\n          Log.warn('An error occurred while calling getPlayhead', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns content's PlayRate */\n    getPlayrate: function () {\n      var ret = 0\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayrate', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's FramesPerSecond */\n    getFramesPerSecond: function () {\n      var ret = null\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getFramesPerSecond()\n        } catch (err) {\n          Log.warn('An error occured while calling getFramesPerSecond', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's DroppedFrames */\n    getDroppedFrames: function () {\n      var ret = null\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getDroppedFrames()\n        } catch (err) {\n          Log.warn('An error occured while calling getDroppedFrames', err)\n        }\n      }\n      if (!ret) {\n        ret = this.getWebkitDroppedFrames()\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /**\n     * Returns dropped frames as per webkitDroppedFrameCount\n     *\n     * @returns {number}\n     */\n    getWebkitDroppedFrames: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitDroppedFrameCount) {\n        return this._adapter.tag.webkitDroppedFrameCount\n      }\n      return null\n    },\n\n    /** Returns content's Duration */\n    getDuration: function () {\n      var ret = this.options['content.duration']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getDuration', err)\n        }\n      }\n      return Util.parseNumber(Math.round(ret), 0)\n    },\n\n    /** Returns content's Bitrate */\n    getBitrate: function () {\n      var ret = this.options['content.bitrate']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitBitrate: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        if (this._lastWebkitBitrate) {\n          var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitBitrate\n          bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n        }\n        this._lastWebkitBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns content's Throughput */\n    getThroughput: function () {\n      var ret = this.options['content.throughput']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getThroughput()\n        } catch (err) {\n          Log.warn('An error occured while calling getThroughput', err)\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /** Returns content's Rendition */\n    getRendition: function () {\n      var ret = this.options['content.rendition']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getRendition()\n        } catch (err) {\n          Log.warn('An error occured while calling getRendition', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title */\n    getTitle: function () {\n      var ret = this.options['content.title']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title2 */\n    getTitle2: function () {\n      var ret = this.options['content.title2']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getTitle2()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle2', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's IsLive */\n    getIsLive: function () {\n      var ret = this.options['content.isLive']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getIsLive()\n        } catch (err) {\n          Log.warn('An error occured while calling getIsLive', err)\n        }\n      }\n      return ret || false\n    },\n\n    /** Returns content's Resource after being parsed by the resourceTransform */\n    getResource: function () {\n      var ret = null\n      if (!this.resourceTransform.isBlocking()) {\n        ret = this.resourceTransform.getResource()\n      }\n\n      return ret || this.getOriginalResource()\n    },\n\n    /** Returns content's original Resource */\n    getOriginalResource: function () {\n      var ret = null\n      ret = this.options['content.resource']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getResource', err)\n          ret = null\n        }\n      }\n      return ret || 'unknown'\n    },\n\n    /** Returns content's TransactionCode */\n    getTransactionCode: function () {\n      return this.options['content.transactionCode']\n    },\n\n    /** Returns content's Metadata */\n    getMetadata: function () {\n      return this.options['content.metadata']\n    },\n\n    /** Returns content's PlayerVersion */\n    getPlayerVersion: function () {\n      var ret = ''\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayerVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's PlayerName */\n    getPlayerName: function () {\n      var ret = ''\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayerName()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayerName', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Cdn */\n    getCdn: function () {\n      var ret = null\n      if (!this.resourceTransform.isBlocking()) {\n        ret = this.resourceTransform.getCdnName()\n      }\n      return ret || this.options['content.cdn']\n    },\n\n    /** Returns content's PluginVersion */\n    getPluginVersion: function () {\n      var ret = this.getAdapterVersion()\n      if (!ret) ret = version + '-adapterless'\n\n      return ret\n    },\n\n    /** Returns ads adapter getVersion or null */\n    getAdapterVersion: function () {\n      var ret = null\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getPluginVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Extraparam1 */\n    getExtraparam1: function () {\n      return this.options['extraparam.1']\n    },\n\n    /** Returns content's Extraparam2 */\n    getExtraparam2: function () {\n      return this.options['extraparam.2']\n    },\n\n    /** Returns content's Extraparam3 */\n    getExtraparam3: function () {\n      return this.options['extraparam.3']\n    },\n\n    /** Returns content's Extraparam4 */\n    getExtraparam4: function () {\n      return this.options['extraparam.4']\n    },\n    /** Returns content's Extraparam5 */\n    getExtraparam5: function () {\n      return this.options['extraparam.5']\n    },\n\n    /** Returns content's Extraparam6 */\n    getExtraparam6: function () {\n      return this.options['extraparam.6']\n    },\n\n    /** Returns content's Extraparam7 */\n    getExtraparam7: function () {\n      return this.options['extraparam.7']\n    },\n\n    /** Returns content's Extraparam8 */\n    getExtraparam8: function () {\n      return this.options['extraparam.8']\n    },\n\n    /** Returns content's Extraparam9 */\n    getExtraparam9: function () {\n      return this.options['extraparam.9']\n    },\n\n    /** Returns content's Extraparam10 */\n    getExtraparam10: function () {\n      return this.options['extraparam.10']\n    },\n\n    /** Returns ads's PlayerVersion */\n    getAdPlayerVersion: function () {\n      var ret = ''\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPlayerVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's position */\n    getAdPosition: function () {\n      var ret = 'pre'\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPosition()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPosition', err)\n        }\n      }\n      if (!ret && this._adapter) {\n        ret = (this._adapter.flags.isJoined) ? 'mid' : 'pre'\n      }\n      return ret\n    },\n\n    /** Returns ad's AdPlayhead */\n    getAdPlayhead: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPlayhead()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayhead', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdDuration */\n    getAdDuration: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdDuration', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdBitrate */\n    getAdBitrate: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitAdBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitAdBitrate: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        if (this._lastWebkitAdBitrate) {\n          var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitAdBitrate\n          bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n        }\n        this._lastWebkitAdBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns ad's AdTitle */\n    getAdTitle: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdResource */\n    getAdResource: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdResource', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ads adapter getVersion or null */\n    getAdAdapterVersion: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdsAdapterVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdMetadata */\n    getAdMetadata: function () {\n      return this.options['ad.metadata']\n    },\n\n    /** Returns PluginInfo */\n    getPluginInfo: function () {\n      var ret = {\n        lib: version,\n        adapter: this.getAdapterVersion(),\n        adAdapter: this.getAdAdapterVersion()\n      }\n      return ret\n    },\n\n    /** Returns Ip */\n    getIp: function () {\n      return this.options['network.ip']\n    },\n\n    /** Returns Isp */\n    getIsp: function () {\n      return this.options['network.isp']\n    },\n\n    /** Returns ConnectionType */\n    getConnectionType: function () {\n      return this.options['network.connectionType']\n    },\n\n    /** Returns DeviceCode */\n    getDeviceCode: function () {\n      return this.options['device.code']\n    },\n\n    /** Returns AccountCode */\n    getAccountCode: function () {\n      return this.options['accountCode']\n    },\n\n    /** Returns Username */\n    getUsername: function () {\n      return this.options['username']\n    },\n\n    /** Get URL referer. */\n    getReferer: function () {\n      var ret = ''\n      if (typeof window !== 'undefined' && window.location) {\n        ret = window.location.href\n      }\n      return ret\n    },\n\n    /**\n     * Returns the nodehost\n     */\n    getNodeHost: function () {\n      return this.resourceTransform.getNodeHost()\n    },\n\n    /**\n     * Returns the node type id\n     */\n    getNodeType: function () {\n      return this.resourceTransform.getNodeType()\n    },\n\n    /**\n     * Returns the node type string\n     */\n    getNodeTypeString: function () {\n      return this.resourceTransform.getNodeTypeString()\n    },\n\n    // ---------------------------------------- CHRONOS -------------------------------------------\n\n    /** Returns preload chrono delta time */\n    getPreloadDuration: function () {\n      return this.preloadChrono.getDeltaTime(false)\n    },\n\n    getInitDuration: function () {\n      return this.initChrono.getDeltaTime(false)\n    },\n\n    /** Returns JoinDuration chrono delta time */\n    getJoinDuration: function () {\n      if (this.isInitiated) return this.getInitDuration()\n      return this._adapter ? this._adapter.chronos.join.getDeltaTime(false) : -1\n    },\n\n    /** Returns BufferDuration chrono delta time */\n    getBufferDuration: function () {\n      return this._adapter ? this._adapter.chronos.buffer.getDeltaTime(false) : -1\n    },\n\n    /** Returns SeekDuration chrono delta time */\n    getSeekDuration: function () {\n      return this._adapter ? this._adapter.chronos.seek.getDeltaTime(false) : -1\n    },\n\n    /** Returns pauseDuration chrono delta time */\n    getPauseDuration: function () {\n      return this._adapter ? this._adapter.chronos.pause.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdJoinDuration chrono delta time */\n    getAdJoinDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.join.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdBufferDuration chrono delta time */\n    getAdBufferDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.buffer.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdPauseDuration chrono delta time */\n    getAdPauseDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.pause.getDeltaTime(false) : -1\n    },\n\n    /** Returns total totalAdDuration chrono delta time */\n    getAdTotalDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.total.getDeltaTime(false) : -1\n    }\n  },\n\n  /** @lend Plugin */\n  {\n    // Static Memebers //\n    /**\n     * List of youbora services.\n     * @enum\n     */\n    Service: {\n      DATA: '/data',\n      INIT: '/init',\n      START: '/start',\n      JOIN: '/joinTime',\n      PAUSE: '/pause',\n      RESUME: '/resume',\n      SEEK: '/seek',\n      BUFFER: '/bufferUnderrun',\n      ERROR: '/error',\n      STOP: '/stop',\n      PING: '/ping',\n      AD_START: '/adStart',\n      AD_JOIN: '/adJoin',\n      AD_PAUSE: '/adPause',\n      AD_RESUME: '/adResume',\n      AD_BUFFER: '/adBufferUnerrun',\n      AD_STOP: '/adStop'\n    },\n\n    /**\n     * List of events that could be fired\n     * @enum\n     */\n    Event: {\n      WILL_SEND_START: 'will-send-start',\n      WILL_SEND_JOIN: 'will-send-join',\n      WILL_SEND_PAUSE: 'will-send-pause',\n      WILL_SEND_RESUME: 'will-send-resume',\n      WILL_SEND_SEEK: 'will-send-seek',\n      WILL_SEND_BUFFER: 'will-send-buffer',\n      WILL_SEND_ERROR: 'will-send-error',\n      WILL_SEND_FATAL_ERROR: 'will-send-fatal-error',\n      WILL_SEND_STOP: 'will-send-stop',\n      WILL_SEND_PING: 'will-send-ping',\n      WILL_SEND_AD_START: 'will-send-ad-start',\n      WILL_SEND_AD_JOIN: 'will-send-ad-join',\n      WILL_SEND_AD_PAUSE: 'will-send-ad-pause',\n      WILL_SEND_AD_RESUME: 'will-send-ad-resume',\n      WILL_SEND_AD_BUFFER: 'will-send-ad-buffer',\n      WILL_SEND_AD_STOP: 'will-send-ad-stop'\n    }\n  }\n)\n\nmodule.exports = Plugin\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar YBRequest = require('../comm/request')\n\nvar startParams = [\n  'accountCode',\n  'username',\n  'rendition',\n  'title',\n  'title2',\n  'live',\n  'mediaDuration',\n  'mediaResource',\n  'transactionCode',\n  'properties',\n  'cdn',\n  'playerVersion',\n  'param1',\n  'param2',\n  'param3',\n  'param4',\n  'param5',\n  'param6',\n  'param7',\n  'param8',\n  'param9',\n  'param10',\n  'pluginVersion',\n  'pluginInfo',\n  'isp',\n  'connectionType',\n  'ip',\n  'deviceCode',\n  'preloadDuration'\n]\n\nvar RequestBuilder = YouboraObject.extend(\n  /** @lends RequestBuilder.prototype */\n  {\n    /**\n     * This class helps building params associated with each event: /start, /joinTime...\n     *\n     * @constructs RequestBuilder\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin A Plugin instance\n     */\n    constructor: function (plugin) {\n      this._plugin = plugin\n      this._adNumber = 0\n\n      /** Stores a list of the last params fetched */\n      this.lastSent = {}\n    },\n\n    /**\n     * Adds to params all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {Array[string]} paramList A list of params to fetch.\n     * @param {bool} onlyDifferent If true, only fetches params that have changed\n     */\n    fetchParams: function (params, paramList, onlyDifferent) {\n      params = params || {}\n      paramList = paramList || []\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i]\n\n        if (params[param]) { return }\n        var getterName = RequestBuilder.getters[param]\n\n        if (this._plugin[getterName]) {\n          var value = this._plugin[getterName]()\n          if (value !== null && (!onlyDifferent || this.lastSent[param] !== value)) {\n            params[param] = value\n            this.lastSent[param] = value\n          }\n        } else {\n          Log.warn('Trying to call undefined getter ' + param + ':' + getterName)\n        }\n      }\n\n      return params\n    },\n\n    /**\n     * Adds to params object all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {string} service The name of the service. Use {@link Plugin.Service} enum.\n     */\n    buildParams: function (params, service) {\n      params = params || {}\n      this.fetchParams(params, RequestBuilder.params[service], false)\n      this.fetchParams(params, RequestBuilder.differentParams[service], true)\n      return params\n    },\n\n    /**\n     * Creates and enqueues related request using {@link Communication#sendRequest}.\n     * It will fire will-send-events.\n     *\n     * @param {String} event Name of the will-send-event to be fired.\n     * @param {string} service Name of the service. Use {@link Plugin.Service} enum.\n     * @param {Object} params Params for the request.\n     */\n    buildRequest: function (event, service, params) {\n      var data = {\n        params: params,\n        plugin: this._plugin,\n        adapter: this._plugin.getAdapter(),\n        adsAdapter: this._plugin.getAdsAdapter()\n      }\n\n      this._plugin.emit(event, data)\n\n      if (this._plugin._comm && params !== null && this._plugin.options.enabled) {\n        this._plugin._comm.sendRequest(new YBRequest(null, service, params))\n      }\n    },\n\n    /**\n     * Creates an adnumber if it does not exist and stores it in lastSent. If it already exists,\n     * it is incremented by 1.\n     *\n     * @returns {number} adNumber\n     */\n    getNewAdNumber: function () {\n      var adNumber = this.lastSent.adNumber\n      if (adNumber && this.lastSent.adPosition === this._plugin.getAdPosition()) {\n        adNumber += 1\n      } else {\n        adNumber = 1\n      }\n      this.lastSent.adNumber = adNumber\n      return adNumber\n    },\n\n    /**\n     * Return changed entities since last check\n     *\n     * @returns {Object} params\n     */\n    getChangedEntities: function () {\n      return this.fetchParams({}, RequestBuilder.differentParams['entities'], true)\n    }\n  },\n  /* @lends RequestBuilder */\n  {\n    // Static Members\n\n    /** List of params used by each service */\n    params: {\n      '/data': ['system', 'pluginVersion'],\n      '/init': startParams,\n      '/start': startParams,\n      '/joinTime': ['joinDuration', 'playhead'],\n      '/pause': ['playhead'],\n      '/resume': ['pauseDuration', 'playhead'],\n      '/seek': ['seekDuration', 'playhead'],\n      '/bufferUnderrun': ['bufferDuration', 'playhead'],\n      '/error': ['player'].concat(startParams),\n      '/stop': ['bitrate', 'playhead'],\n      '/adStart': [\n        'playhead',\n        'adTitle',\n        'adPosition',\n        'adDuration',\n        'adResource',\n        'adPlayerVersion',\n        'adProperties',\n        'adAdapterVersion'\n      ],\n      '/adJoin': ['adPosition', 'adJoinDuration', 'adPlayhead'],\n      '/adPause': ['adPosition', 'adPlayhead'],\n      '/adResume': ['adPosition', 'adPlayhead', 'adPauseDuration'],\n      '/adBufferUnerrun': ['adPosition', 'adPlayhead', 'adBufferDuration'],\n      '/adStop': ['adPosition', 'adPlayhead', 'adBitrate', 'adTotalDuration'],\n      '/ping': ['playhead', 'droppedFrames', 'playrate']\n    },\n\n    /** List of params used by each service (only if they are different) */\n    differentParams: {\n      '/join': ['title', 'title2', 'live', 'mediaDuration', 'mediaResource'],\n      '/adJoin': ['adTitle', 'adDuration', 'adResource'],\n      'entities': [\n        'rendition',\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource',\n        'param1',\n        'param2',\n        'param3',\n        'param4',\n        'param5',\n        'param6',\n        'param7',\n        'param8',\n        'param9',\n        'param10',\n        'connectionType',\n        'deviceCode',\n        'ip',\n        'username',\n        'cdn',\n        'nodeHost',\n        'nodeType',\n        'nodeTypeString'\n      ]\n    },\n\n    /** List of params and its related getter */\n    getters: {\n      playhead: 'getPlayhead',\n      playrate: 'getPlayrate',\n      fps: 'getFramesPerSecond',\n      droppedFrames: 'getDroppedFrames',\n      mediaDuration: 'getDuration',\n      bitrate: 'getBitrate',\n      throughput: 'getThroughput',\n      rendition: 'getRendition',\n      title: 'getTitle',\n      title2: 'getTitle2',\n      live: 'getIsLive',\n      mediaResource: 'getResource',\n      transactionCode: 'getTransactionCode',\n      properties: 'getMetadata',\n      playerVersion: 'getPlayerVersion',\n      player: 'getPlayerName',\n      cdn: 'getCdn',\n      pluginVersion: 'getPluginVersion',\n\n      param1: 'getExtraparam1',\n      param2: 'getExtraparam2',\n      param3: 'getExtraparam3',\n      param4: 'getExtraparam4',\n      param5: 'getExtraparam5',\n      param6: 'getExtraparam6',\n      param7: 'getExtraparam7',\n      param8: 'getExtraparam8',\n      param9: 'getExtraparam9',\n      param10: 'getExtraparam10',\n\n      adPosition: 'getAdPosition',\n      adPlayhead: 'getAdPlayhead',\n      adDuration: 'getAdDuration',\n      adBitrate: 'getAdBitrate',\n      adTitle: 'getAdTitle',\n      adResource: 'getAdResource',\n      adPlayerVersion: 'getAdPlayerVersion',\n      adProperties: 'getAdMetadata',\n      adAdapterVersion: 'getAdAdapterVersion',\n\n      pluginInfo: 'getPluginInfo',\n\n      isp: 'getIsp',\n      connectionType: 'getConnectionType',\n      ip: 'getIp',\n\n      deviceCode: 'getDeviceCode',\n\n      system: 'getAccountCode',\n      accountCode: 'getAccountCode',\n      username: 'getUsername',\n\n      preloadDuration: 'getPreloadDuration',\n\n      joinDuration: 'getJoinDuration',\n      bufferDuration: 'getBufferDuration',\n      seekDuration: 'getSeekDuration',\n      pauseDuration: 'getPauseDuration',\n\n      adJoinDuration: 'getAdJoinDuration',\n      adBufferDuration: 'getAdBufferDuration',\n      adPauseDuration: 'getAdPauseDuration',\n      adTotalDuration: 'getAdTotalDuration',\n\n      referer: 'getReferer',\n\n      nodeHost: 'getNodeHost',\n      nodeType: 'getNodeType',\n      nodeTypeString: 'getNodeTypeString'\n    }\n\n  }\n)\n\nmodule.exports = RequestBuilder\n","/* eslint no-extend-native: \"off\" */\n\n/**\n * When executed, this function applies polyfills to the following functionalities:\n * Function.prototype.bind,\n * Object.assign,\n * Object.create,\n * Array.prototype.forEach,\n * Array.isArray\n *\n * @memberof youbora\n */\nvar applyPolyfills = function () {\n  // Bind\n  Function.prototype.bind = Function.prototype.bind || function (b) {\n    if (typeof this !== 'function') {\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable')\n    }\n    var a = Array.prototype.slice\n    var f = a.call(arguments, 1)\n    var e = this\n    var C = function () {}\n    var d = function () {\n      return e.apply(this instanceof C ? this : b || window, f.concat(a.call(arguments)))\n    }\n    C.prototype = this.prototype\n    d.prototype = new C()\n    return d\n  }\n\n  // Assign\n  Object.assign = Object.assign || function (target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object')\n    }\n\n    var output = Object(target)\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index]\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey]\n          }\n        }\n      }\n    }\n    return output\n  }\n\n  // Create\n  Object.create = Object.create || (function () {\n    var Temp = function () {}\n    return function (prototype, propertiesObject) {\n      if (prototype !== Object(prototype) && prototype !== null) {\n        throw TypeError('Argument must be an object, or null')\n      }\n      Temp.prototype = prototype || {}\n      var result = new Temp()\n      Temp.prototype = null\n      if (propertiesObject !== undefined) {\n        Object.defineProperties(result, propertiesObject)\n      }\n\n      // to imitate the case of Object.create(null)\n      if (prototype === null) {\n        result.prototype = null\n      }\n      return result\n    }\n  })()\n\n  // Foreach\n  Array.prototype.forEach = Array.prototype.forEach || function (callback, thisArg) {\n    if (typeof (callback) !== 'function') {\n      throw new TypeError(callback + ' is not a function!')\n    }\n    var len = this.length\n    for (var i = 0; i < len; i++) {\n      callback.call(thisArg, this[i], i, this)\n    }\n  }\n\n  // isArray\n  Array.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]'\n  }\n}\n\nmodule.exports = applyPolyfills\n","var YouboraObject = require('./object')\nvar Chrono = require('./chrono')\n\nvar Timer = YouboraObject.extend(\n  /** @lends Timer.prototype */\n  {\n    /**\n     * Instances of this class will call a callback every setted interval.\n     *\n     * @param {function} callback The callback to call every due interval.\n     * Callback will receive lapsed ms between calls.\n     * @param {int} [interval=5000] Milliseconds between each call.\n     *\n     * @constructs Timer\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (callback, interval) {\n      this.callback = callback\n      this.interval = interval || 5000\n      this.isRunning = false\n      this._timer = null\n\n      this.chrono = new Chrono()\n    },\n\n    /**\n     * Starts the timer.\n     */\n    start: function () {\n      this.isRunning = true\n      this._setTick()\n    },\n\n    /**\n     * Stops the timer.\n     */\n    stop: function () {\n      this.isRunning = false\n      if (this._timer) clearTimeout(this._timer)\n    },\n\n    _setTick: function () {\n      this.chrono.start()\n      this._timer = setTimeout(function () {\n        this.callback(this.chrono.stop())\n        this._setTick()\n      }.bind(this), this.interval)\n    }\n  }\n)\n\nmodule.exports = Timer\n","var Log = require('./log')\n\n/**\n * This static class provides utilities\n * @class\n * @static\n * @memberof youbora\n */\nvar Util = {\n  /**\n   * Strip {protocol}:// and // from the begining of the string.\n   *\n   * @param {string} url\n   * @returns {string} stripped url\n   */\n  stripProtocol: function (url) {\n    try {\n      return url.replace(/^(.*?:\\/\\/|\\/\\/)/i, '')\n    } catch (err) {\n      Log.warn(err)\n      return url\n    }\n  },\n\n  /**\n   * Adds specific protocol. ie: [http[s]:]//nqs.nice264.com\n   *\n   * @param {string} url Domain of the service.\n   * @param {boolean|null} [httpSecure]\n   * If true will add https, if false http.\n   * Otherwise will add //\n   * @return Return the complete service URL.\n   */\n  addProtocol: function (url, httpSecure) {\n    try {\n      if (httpSecure === true) {\n        return 'https://' + url\n      } else if (window.location.protocol.indexOf('http') === 0) {\n        return '//' + url\n      } else {\n        return 'http://' + url\n      }\n    } catch (err) {\n      Log.warn(err)\n      return 'http://localhost/'\n    }\n  },\n\n  /**\n   * Return n if it isn't NaN, negative, Infinity, null or undefined.\n   * In any other case, return def.\n   *\n   * @param {mixed} n Number to be parsed.\n   * @param {number} defl Number to return if n is not correct.\n   */\n  parseNumber: function (n, def) {\n    if (\n      !isNaN(n) &&\n      n >= 0 &&\n      n !== Infinity &&\n      n !== -Infinity &&\n      n !== null &&\n      typeof n !== 'undefined'\n    ) {\n      return n\n    } else {\n      return def\n    }\n  },\n\n  /**\n   * This utility function will add most of the HTML5 common event listeners to the player sent.\n   * This common events will be listened: 'canplay', 'buffering', 'waiting', 'ended', 'play',\n   * 'playing', 'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked', 'stalled',\n   * 'dispose', 'loadeddata', 'loadstart'.\n   *\n   * Events will be reported as DEBUG level messages.\n   *\n   * @param {object|function} o Object to attach the events.\n   * @param {array} [extraEvents]\n   * An array of extra events to watch. ie:  ['timeupdate', 'progress'].\n   * If the first item is null, no common events will be added.\n   * @param {function} [report] Callback function called to report events.\n   * Default calls Log.debug()\n   */\n  logAllEvents: function (o, extraEvents, report) {\n    try {\n      if (Log.logLevel <= Log.Level.DEBUG) {\n        report = report || function (e) {\n          Log.debug('Event: ' + e.type)\n        }\n\n        var playerEvents = [\n          'canplay', 'buffering', 'waiting', 'ended', 'play', 'playing',\n          'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked',\n          'stalled', 'dispose', 'loadeddata', 'loadstart'\n        ]\n        if (extraEvents) {\n          if (extraEvents[0] === null) {\n            extraEvents.shift()\n            playerEvents = extraEvents\n          } else {\n            playerEvents = playerEvents.concat(extraEvents)\n          }\n        }\n\n        for (var i = 0; i < playerEvents.length; i++) {\n          if (typeof o === 'function') {\n            o.call(window, playerEvents[i], report)\n          } else if (o.on) {\n            o.on(playerEvents[i], report)\n          } else if (o.addEventListener) {\n            o.addEventListener(playerEvents[i], report)\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(err)\n    }\n  },\n\n  /**\n   * Builds a string that represents the rendition.\n   *\n   * The returned string will have the following format: <width>x<height>@bitrate<suffix?>.\n   * If either the width or height are < 1, only the bitrate will be returned.\n   * If bitrate is < 1, only the dimensions will be returned.\n   * If bitrate is < and there is no dimensions, a null will be returned.\n   * The bitrate will also have one of the following suffixes dependin on its\n   * magnitude: bps, Kbps, Mbps\n   *\n   * @param {any} width The width of the asset. If only 1 argument is sent, it will be treated\n   * as bitrate.\n   * @param {any} height The height of the asset.\n   * @param {any} bitrate The indicated bitrate (in the manifest) of the asset.\n   * @returns {string} A string with the following format: <width>x<height>@<bitrate><suffix>\n   */\n  buildRenditionString: function (width, height, bitrate) {\n    if (arguments.length === 1) {\n      bitrate = width\n      width = null\n      height = null\n    }\n\n    var ret = ''\n    if (width && height) {\n      ret = width + 'x' + height\n      if (bitrate > 0) {\n        ret += '@'\n      }\n    }\n\n    if (bitrate < 1) {\n      return ret\n    } else if (bitrate < 1e3) {\n      ret += Math.round(bitrate) + 'bps'\n    } else if (bitrate < 1e6) {\n      bitrate = Math.round(bitrate / 1e3)\n      ret += bitrate + 'Kbps'\n    } else {\n      bitrate = Math.round(bitrate / 1e4) / 1e2\n      ret += bitrate + 'Mbps'\n    }\n\n    return ret || null\n  }\n\n}\n\nmodule.exports = Util\n","module.exports = require('../manifest.json').version\n","// No-Conflict\nvar previousYoubora = youbora\nvar youbora = {}\n\n/**\n * This allows you to run multiple instances of YouboraLib on the same webapp.\n * After loading the new version, call `noConflict()` to get a reference to it.\n * At the same time the old version will be returned to Youbora.\n */\nyoubora.noConflict = function () {\n  youbora = previousYoubora\n  return this\n}\n\n// Info\nyoubora.VERSION = require('./version')\n\n// Polyfills\nyoubora.polyfills = require('./polyfills')\n\n// Classes\nyoubora.Object = require('./object')\nyoubora.Emitter = require('./emitter')\nyoubora.Util = require('./util')\nyoubora.Chrono = require('./chrono')\nyoubora.Timer = require('./timer')\n\n// Log\nyoubora.Log = require('./log')\nyoubora.Log.loadLevelFromUrl()\n\n// Comm classes\nyoubora.Request = require('./comm/request')\nyoubora.Communication = require('./comm/communication')\n\n// Resource Transform\nyoubora.Transform = require('./comm/transform/transform')\nyoubora.ViewTransform = require('./comm/transform/view')\nyoubora.Nqs6Transform = require('./comm/transform/nqs6')\nyoubora.ResourceTransform = require('./comm/transform/resource')\nyoubora.CdnParser = require('./comm/transform/cdnparser')\nyoubora.HlsParser = require('./comm/transform/hlsparser')\n\n// Plugin Classes\nyoubora.Options = require('./plugin/options')\nyoubora.Plugin = require('./plugin/plugin')\nyoubora.RequestBuilder = require('./plugin/requestbuilder')\n\n// Adapters\nyoubora.PlayheadMonitor = require('./adapter/playheadmonitor')\nyoubora.Adapter = require('./adapter/adapter')\nyoubora.adapters = {}\n\nmodule.exports = youbora\n","/* global videojs:true */\nvar youbora = require('youboralib')\nvar manifest = require('../manifest.json')\n\nyoubora.adapters.Videojs5 = youbora.Adapter.extend({\n  getVersion: function () {\n    return manifest.version + '-videojs5'\n  },\n\n  getPlayhead: function () {\n    if (this.player.ads && this.player.ads.snapshot && this.player.ads.snapshot.currentTime) {\n      return this.player.ads.snapshot.currentTime\n    } else if (this.player.absoluteTime) {\n      return this.player.absoluteTime()\n    } else {\n      return this.player.currentTime()\n    }\n  },\n\n  getDuration: function () {\n    if (this.player.mediainfo && typeof this.player.mediainfo.duration !== 'undefined') {\n      return this.player.mediainfo.duration // brightcove\n    } else {\n      return this.player.duration()\n    }\n  },\n\n  getResource: function () {\n    if (this.getTech().hls_) {\n      return this.getTech().hls_.url // hlsjs\n    } else {\n      return this.player.currentSrc()\n    }\n  },\n\n  getTitle: function () {\n    if (this.player.mediainfo && this.player.mediainfo.name) {\n      return this.player.mediainfo.name // brightcove\n    }\n  },\n\n  getThroughput: function () {\n    if (this.getTech().hls && this.getTech().hls.bandwidth) {\n      return this.getTech().hls.bandwidth // hlsjs\n    }\n  },\n\n  getBitrate: function () {\n    if (this.getTech().hls) { // contrib hls\n      var media = this.getTech().hls.playlists.media()\n      if (media && media.attributes) return media.attributes.BANDWIDTH\n    } else if (this.getTech().hls_) { // hlsjs\n      var level = this.getTech().hls_.levels[this.getTech().hls_.currentLevel]\n      if (level && level.bitrate) return level.bitrate\n    }\n  },\n\n  getRendition: function () {\n    if (this.getTech().hls) { // contrib hls\n      var media = this.getTech().hls.playlists.media()\n      if (media && media.attributes) {\n        var att = media.attributes\n        if (att.NAME) {\n          return att.NAME\n        } else if (att.RESOLUTION) {\n          return youbora.Util.buildRenditionString(\n            att.RESOLUTION.width,\n            att.RESOLUTION.height,\n            att.BANDWIDTH\n          )\n        } else {\n          return youbora.Util.buildRenditionString(att.BANDWIDTH)\n        }\n      }\n    } else if (this.getTech().hls_) { // hlsjs\n      var level = this.getTech().hls_.levels[this.getTech().hls_.currentLevel]\n      if (level && level.name) {\n        return level.name\n      } else {\n        return youbora.Util.buildRenditionString(level.width, level.height, level.bitrate)\n      }\n    }\n  },\n\n  getPlayerName: function () {\n    var name = 'videojs5'\n    if (this.getTech().hls) name += '-hls' // hls-contrib\n    if (this.getTech().hls_) name += '-hlsjs' // hlsjs\n    if (this.player.mediainfo) name += '-bcove' // brightcove\n    if (this.player.ima || this.player.ima3) name += '-ima' // ima3\n    if (this.player.FreeWheelPlugin) name += '-fw' // freewheel\n    if (this.player.onceux) this.pluginName += '-oux' // OnceUX\n    return name\n  },\n\n  getPlayerVersion: function () {\n    var ver = this.getPlayerName()\n    if (videojs.VERSION) ver += ' ' + videojs.VERSION\n    return ver\n  },\n\n  getTech: function () {\n    // NOTE: Videojs discourages accessing techs from plugins because they want\n    // devs to develop tech-agnostic plugins. I don't think this applies to us,\n    // as we need to retrieve info from each different tech.\n    // https://github.com/videojs/video.js/issues/2617\n    return this.player.tech({ IWillNotUseThisInPlugins: true })\n  },\n\n  registerListeners: function () {\n    // Console all events if logLevel=DEBUG\n    youbora.Util.logAllEvents(this.player, [\n      'adstart', 'adend', 'adskip', 'adsready', 'adserror', 'dispose'])\n\n    // Enable playhead monitor\n    this.monitorPlayhead(true, false)\n\n    // Register listeners\n    this.player.on('loadstart', this.loadstartListener.bind(this))\n    this.player.on('adsready', this.adsreadyListener.bind(this))\n    this.player.on('play', this.playListener.bind(this))\n    this.player.on('timeupdate', this.timeupdateListener.bind(this))\n    this.player.on('pause', this.pauseListener.bind(this))\n    this.player.on('playing', this.playingListener.bind(this))\n    this.player.on('abort', this.abortListener.bind(this))\n    this.player.on('ended', this.endedListener.bind(this))\n    this.player.on('dispose', this.disposeListener.bind(this))\n    this.player.on('seeking', this.seekingListener.bind(this))\n    this.player.on('seeked', this.seekedListener.bind(this))\n    this.player.on('error', this.errorListener.bind(this))\n  },\n\n  loadstartListener: function (e) {\n    youbora.Log.notice('Player detected ' + this.getPlayerName())\n    if (this.player.autoplay()) this.fireStart()\n  },\n\n  adsreadyListener: function (e) {\n    this.loadAdsAdapter()\n  },\n\n  playListener: function (e) {\n    this.fireStart()\n  },\n\n  timeupdateListener: function (e) {\n    if (this.getPlayhead() > 0.1) {\n      this.fireJoin()\n\n      // Send seek end\n      if (this.lastSeekPlayhead && this.lastSeekPlayhead !== this.getPlayhead()) {\n        this.fireSeekEnd()\n        this.lastSeekPlayhead = false\n      }\n    }\n  },\n\n  pauseListener: function (e) {\n    this.firePause()\n  },\n\n  playingListener: function (e) {\n    this.fireResume()\n  },\n\n  abortListener: function (e) {\n    this.fireStop()\n  },\n\n  endedListener: function (e) {\n    this.fireStop()\n  },\n\n  disposeListener: function (e) {\n    this.fireStop()\n  },\n\n  seekingListener: function (e) {\n    this.fireSeekBegin()\n  },\n\n  seekedListener: function (e) {\n    // We save the playhead after the seek, we will send the seeked in the next timeupdate\n    this.lastSeekPlayhead = this.getPlayhead()\n  },\n\n  errorListener: function (e) {\n    if (this.player.error && this.player.error()) {\n      this.fireError(this.player.error().code, this.player.error().message)\n    }\n  },\n\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n\n    // unregister listeners\n    this.player.off('loadstart', this.loadstartListener)\n    this.player.off('adsready', this.adsreadyListener)\n    this.player.off('play', this.playListener)\n    this.player.off('playing', this.playingListener)\n    this.player.off('pause', this.pauseListener)\n    this.player.off('abort', this.abortListener)\n    this.player.off('ended', this.endedListener)\n    this.player.off('dispose', this.disposeListener)\n    this.player.off('seeking', this.seekingListener)\n    this.player.off('seeked', this.seekedListener)\n    this.player.off('timeupdate', this.timeupdateListener)\n    this.player.off('error', this.errorListener)\n  },\n\n  loadAdsAdapter: function () {\n    if (this.plugin.getAdsAdapter() === null) {\n      var adapter\n      if (typeof google !== 'undefined') {\n        if (this.player.mediainfo && this.player.ads && this.player.ima3) { // Brightcove+IMA\n          adapter = new youbora.adapters.Videojs5.BrightcoveAdsAdapter(this.player)\n        } else if (this.player.ima) { // IMA Standalone\n          adapter = new youbora.adapters.Videojs5.ImaAdsAdapter(this.player)\n        }\n      } else if (this.player.onceux) { // OnceUX\n        adapter = new youbora.adapters.Videojs5.OnceUXAdsAdapter(this.player)\n      } else { // Generic\n        adapter = new youbora.adapters.Videojs5.GenericAdsAdapter(this.player)\n      }\n\n      this.plugin.setAdsAdapter(adapter)\n    }\n  }\n},\n  // Static members\n  {\n    GenericAdsAdapter: require('./ads/generic'),\n    ImaAdsAdapter: require('./ads/ima'),\n    BrightcoveAdsAdapter: require('./ads/brightcove'),\n    OnceUXAdsAdapter: require('./ads/onceux')\n  }\n)\n\nmodule.exports = youbora.adapters.Videojs5\n","var youbora = require('youboralib')\nvar manifest = require('../../manifest.json')\n\nvar BrightcoveAdsAdapter = youbora.Adapter.extend({\n  getVersion: function () {\n    return manifest.version + '-videojs-bcove-ads'\n  },\n\n  getPlayhead: function () {\n    return this.player.ima3.adPlayer.currentTime()\n  },\n\n  registerListeners: function () {\n    // Console all events if logLevel=DEBUG\n    youbora.Util.logAllEvents(this.player, [\n      null,\n      'ima3-ready',\n      'ima3error',\n      'ima3-ad-error',\n      'ima3-started',\n      'ima3-complete',\n      'ima3-paused',\n      'ima3-resumed',\n      'ads-request',\n      'ads-load',\n      'ads-ad-started',\n      'ads-ad-ended',\n      'ads-pause',\n      'ads-play',\n      'ads-click',\n      'ads-pod-started',\n      'ads-pod-ended',\n      'ads-allpods-completed'\n    ])\n\n    // Enable playhead monitor\n    this.monitorPlayhead(true, false)\n\n    // Register listeners\n    this.player.on('ima3-started', this.imaStartedListener.bind(this))\n    this.player.on('ima3-paused', this.imaPausedListener.bind(this))\n    this.player.on('ima3-resumed', this.imaResumedListener.bind(this))\n    this.player.on('ima3-complete', this.imaCompleteListener.bind(this))\n    this.player.on('ima3-skipped', this.imaSkippedListener.bind(this))\n  },\n\n  imaStartedListener: function (e) {\n    this.fireStart()\n    this.fireJoin()\n  },\n\n  imaPausedListener: function (e) {\n    this.firePause()\n  },\n\n  imaResumedListener: function (e) {\n    this.fireResume()\n  },\n\n  imaCompleteListener: function (e) {\n    this.fireStop()\n  },\n\n  imaSkippedListener: function (e) {\n    this.fireStop({ skipped: true })\n  },\n\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n\n    // unregister listeners\n    this.player.off('ima3-started', this.imaStartedListener)\n    this.player.off('ima3-paused', this.imaPausedListener)\n    this.player.off('ima3-resumed', this.imaResumedListener)\n    this.player.off('ima3-complete', this.imaCompleteListener)\n    this.player.off('ima3-skipped', this.imaSkippedListener)\n  }\n})\n\nmodule.exports = BrightcoveAdsAdapter\n","var youbora = require('youboralib')\nvar manifest = require('../../manifest.json')\n\nvar GenericAdsAdapter = youbora.Adapter.extend({\n  getVersion: function () {\n    return manifest.version + '-videojs-ads'\n  },\n\n  registerListeners: function () {\n    // Register listeners\n    this.player.on('adstart', this.adStartListener.bind(this))\n    this.player.on('adend', this.adEndListener.bind(this))\n    this.player.on('adskip', this.adSkipListener.bind(this))\n  },\n\n  adStartListener: function (e) {\n    this.fireStart()\n    this.fireJoin()\n  },\n\n  adEndListener: function (e) {\n    this.fireStop()\n  },\n\n  adSkipListener: function (e) {\n    this.fireStop({ skipped: true })\n  },\n\n  unregisterListeners: function () {\n    // unregister listeners\n    this.player.off('adstart', this.adStartListener)\n    this.player.off('adend', this.adEndListener)\n    this.player.off('adskip', this.adSkipListener)\n  }\n})\n\nmodule.exports = GenericAdsAdapter\n","/* global google:true */\n\nvar youbora = require('youboralib')\nvar manifest = require('../../manifest.json')\n\nvar BrightcoveAdsAdapter = youbora.Adapter.extend({\n  getVersion: function () {\n    return manifest.version + '-videojs-ima-ads'\n  },\n\n  getDuration: function () {\n    if (this.player.ima.getAdsManager().getCurrentAd() !== null) {\n      this.duration = this.player.ima.getAdsManager().getCurrentAd().getDuration()\n    }\n    return this.duration\n  },\n\n  getTitle: function () {\n    return this.player.ima.getAdsManager().getCurrentAd().getTitle()\n  },\n\n  getPlayhead: function () {\n    return this.getDuration() - this.player.ima.getAdsManager().getRemainingTime()\n  },\n\n  getPlayerVersion: function () {\n    return 'IMA' + google.ima.VERSION + '; contrib-ads ' + this.player.ads.VERSION\n  },\n\n  registerListeners: function () {\n    // Enable playhead monitor\n    this.monitorPlayhead(true, false)\n\n    // Console all events if logLevel=DEBUG\n    youbora.Util.logAllEvents(this.player.ima.addEventListener, [\n      null,\n      google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n      google.ima.AdEvent.Type.LINEAR_CHANGED,\n      google.ima.AdEvent.Type.USER_CLOSE,\n      google.ima.AdEvent.Type.COMPLETE,\n      google.ima.AdEvent.Type.IMPRESSION,\n      google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n      google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n      google.ima.AdEvent.Type.SKIPPED,\n      google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n      google.ima.AdEvent.Type.LOADED,\n      google.ima.AdEvent.Type.PAUSED,\n      google.ima.AdEvent.Type.RESUMED,\n      google.ima.AdEvent.Type.STARTED,\n      google.ima.AdEvent.Type.AD_CAN_PLAY,\n      google.ima.AdEvent.Type.AD_METADATA,\n      google.ima.AdEvent.Type.EXPANDED_CHANGED,\n      google.ima.AdEvent.Type.AD_BREAK_READY,\n      google.ima.AdEvent.Type.LOG\n    ])\n\n    // Register listeners\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.LOADED, this.loadedListener.bind(this))\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, this.contentPauseRequestedListener.bind(this))\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.STARTED, this.startedListener.bind(this))\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.PAUSED, this.pausedListener.bind(this))\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.RESUMED, this.resumedListener.bind(this))\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.COMPLETE, this.completeListener.bind(this))\n    this.player.ima.addEventListener(google.ima.AdEvent.Type.SKIPPED, this.skippedListener.bind(this))\n  },\n\n  loadedListener: function (e) {\n    this.fireStart()\n  },\n\n  contentPauseRequestedListener: function (e) {\n    this.fireStart()\n  },\n\n  startedListener: function (e) {\n    this.fireJoin()\n  },\n\n  pausedListener: function (e) {\n    this.firePause()\n  },\n\n  resumedListener: function (e) {\n    this.fireResume()\n  },\n\n  completeListener: function (e) {\n    this.fireStop()\n  },\n\n  skippedListener: function (e) {\n    this.fireStop({ skipped: true })\n  },\n\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n  }\n})\n\nmodule.exports = BrightcoveAdsAdapter\n","var youbora = require('youboralib')\nvar manifest = require('../../manifest.json')\n\nvar OnceUXAdsAdapter = youbora.Adapter.extend({\n  getVersion: function () {\n    return manifest.version + '-videojs-onceux-ads'\n  },\n\n  getResource: function () {\n    return this.player.ads.contentSrc\n  },\n\n  getPlayhead: function () {\n    return this.player.onceux.currentTime()\n  },\n\n  getDuration: function () {\n    return this.player.onceux.duration()\n  },\n\n  registerListeners: function () {\n    // Console all events if logLevel=DEBUG\n    youbora.Util.logAllEvents(this.player, [\n      null,\n      'onceux-ads-complete',\n      'onceux-adroll-start',\n      'onceux-adroll-complete',\n      'onceux-linearad-start',\n      'onceux-linearad-impression',\n      'onceux-linearad-complete',\n      'onceux-linearad-skipped',\n      'onceux-linearad-pause',\n      'onceux-linearad-resume',\n      'onceux-companionad-creativeView'\n    ])\n\n    // Enable playhead monitor\n    this.monitorPlayhead(true, false)\n\n    // Register listeners\n    this.player.on('onceux-linearad-start', this.startedListener.bind(this))\n    this.player.on('onceux-linearad-pause', this.pausedListener.bind(this))\n    this.player.on('onceux-linearad-resume', this.resumedListener.bind(this))\n    this.player.on('onceux-linearad-complete', this.completeListener.bind(this))\n    this.player.on('onceux-linearad-skipped', this.skippedListener.bind(this))\n  },\n\n  startedListener: function (e) {\n    this.fireStart()\n    this.fireJoin()\n  },\n\n  pausedListener: function (e) {\n    this.firePause()\n  },\n\n  resumedListener: function (e) {\n    this.fireResume()\n  },\n\n  completeListener: function (e) {\n    this.fireStop()\n  },\n\n  skippedListener: function (e) {\n    this.fireStop({ skipped: true })\n  },\n\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n\n    // unregister listeners\n    this.player.off('onceux-linearad-start', this.startedListener)\n    this.player.off('onceux-linearad-pause', this.pausedListener)\n    this.player.off('onceux-linearad-resume', this.resumedListener)\n    this.player.off('onceux-linearad-complete', this.completeListener)\n    this.player.off('onceux-linearad-skipped', this.skippedListener)\n  }\n})\n\nmodule.exports = OnceUXAdsAdapter\n","/* global videojs:true */\n\n// Register the plugin in videojs plugins space.\nmodule.exports = function (youbora) {\n  if (typeof videojs !== 'undefined') {\n    videojs.plugin('youbora', function (options) {\n      if (typeof this.youboraplugin === 'undefined') {\n        // First call of the plugin inits the plugin.\n        this.youboraplugin = new youbora.Plugin(options, new youbora.adapters.VideoJS5(this))\n      } else {\n        // Subsequent calls set options.\n        this.youboraplugin.setOptions(options)\n      }\n    })\n  }\n}\n","var youbora = require('youboralib')\nrequire('./adapter')\nrequire('./register-plugin')(youbora)\n\nmodule.exports = youbora\n"]}